/*!
 * Curtana for Almace Scaffolding
 * Copyright 2005-2015 Tunghsiao Liu
 * Licensed under MIT (https://github.com/amsf/amsf-curtana/blob/master/LICENSE)
 */
@import url(https://fonts.googleapis.com/css?family=Vollkorn:400,400italic);
.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  padding: 0 22vw;
  margin: 0 auto 0;
  font-family: "Helvetica Neue", "Hiragino Sans GB", Arial, sans-serif;
  font-size: 1.6vw;
  line-height: 1.42857143;
  color: #000;
  text-rendering: optimizelegibility;
  background: #fff;
  image-rendering: optimizequality;
  transition: all .2s ease;
}
@media (max-width: 1000px) {
  body {
    padding-left: 8vw;
    padding-right: 8vw;
    font-size: 2.24vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4vw;
    padding-right: 4vw;
    font-size: 3.84vw;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.12vw;
  }
}
@media (max-device-width: 480px), (max-device-width: 1024px) {
  body {
    -webkit-text-size-adjust: none;
  }
}
body:before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -9999;
  width: 100%;
  height: 1vmax;
  pointer-events: none;
  background: #ff00b4;
  content: "";
  opacity: .2;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
  text-decoration: underline;
  text-decoration-skip: ink;
}
a[disabled],
button[disabled] {
  opacity: .4;
  cursor: not-allowed;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-moz-selection {
  background: rgba(255, 0, 180, 0.1);
}
::selection {
  background: rgba(255, 0, 180, 0.1);
}
::-webkit-input-placeholder {
  color: #000;
  opacity: .1;
}
.logo {
  display: block;
  height: 1vmax;
  margin: 0 0 1.4vmax;
  background: #ff00b4;
  opacity: 0;
}
.logo:hover,
.logo:focus {
  border-bottom: none !important;
  background: #000;
  opacity: 1;
}
.logo h1 {
  height: 0;
  text-indent: -99999em;
}
.navigation {
  margin: 0 0 16vmin;
  margin-right: -1.1em;
  margin-left: -1.1em;
  font-size: 60%;
  font-weight: bold;
  letter-spacing: .45em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: .5em 1.2em;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #ff00b4;
  text-decoration: none;
}
.current a {
  color: #ff00b4;
}
body:hover .latest {
  color: #ff00b4 !important;
}
.content .status {
  margin: 1vmin 0 0;
  font-size: 75%;
  font-weight: bold;
}
.content .status:before {
  display: inline-block;
  width: 0.8em;
  height: 0.8em;
  margin-right: .8vw;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  content: "";
}
.content .status.available:before {
  background: #0cf;
}
.content .status.available a {
  color: #0cf;
}
.content .status.unavailable:before {
  background: #ccc;
}
.content .status.unavailable a {
  color: #ccc;
}
.content {
  margin-bottom: 16vmin;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content p {
  margin-bottom: 1.6rem;
  line-height: 1.71428571;
}
.content header {
  padding-bottom: 16vmin;
}
.content header h1 {
  margin: 0 0 .1em;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
@media (max-width: 640px) {
  .content header h1 {
    font-size: 280%;
  }
}
.content header h1 svg {
  display: block;
  max-width: 100%;
}
.content header h1 svg,
.content header h1 img {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: .3em;
}
@media (max-width: 640px) {
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
}
.content header .image-title {
  text-indent: -999999px;
  line-height: 0;
}
.content header .latest-post {
  margin-top: 16vmin;
  font-size: 80%;
  font-weight: normal;
  line-height: 1.2;
}
.content header .latest-post a {
  font-weight: bold;
}
.content header small {
  display: block;
  margin-top: 2vmin;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-size: 72%;
  font-weight: normal;
  opacity: .5;
}
.content ul,
.content ol {
  margin-bottom: 1.8rem;
  margin-left: 1.2em;
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li > ul,
.content ol li > ul,
.content ul li > ol,
.content ol li > ol {
  margin-bottom: 0;
}
.content ol {
  margin-left: 1.75em;
}
.content img,
.content video,
.content iframe,
.content .browser {
  display: block;
  width: calc(100% + (1.2vw * 2) + (2px * 2));
  margin: 0 calc(-1.2vw - 2px) 1.8rem;
}
@media (max-width: 1000px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    margin-left: -8vw;
    margin-right: -8vw;
    width: calc(100% + (8vw * 2));
  }
}
@media (max-width: 640px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    margin-left: -4vw;
    margin-right: -4vw;
    width: calc(100% + (4vw * 2));
  }
}
.content img.no-enlarge,
.content video.no-enlarge,
.content iframe.no-enlarge,
.content .browser.no-enlarge {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  width: auto;
}
.content .strike {
  text-decoration: line-through;
}
.content blockquote {
  position: relative;
  margin-bottom: 2.8rem;
  margin-left: calc(-1.2vw - 2px);
  font-size: 90%;
}
@media (max-width: 640px) {
  .content blockquote {
    margin-left: 0;
  }
}
.content blockquote > p {
  padding-left: 1.2vw;
  border-left: 2px solid;
  padding-bottom: 1.6rem;
  margin-bottom: 0;
}
.content blockquote > p:last-of-type {
  padding-bottom: 0;
  margin-bottom: 1.6rem;
}
@media (max-width: 640px) {
  .content blockquote > p {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content hr::before {
  display: block;
  content: '';
  width: 4px;
  height: 4px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 20px 0 0 0 #000, -20px 0 0 0 #000;
}
.content sup {
  font-size: 75%;
}
.content code,
.content pre {
  font-family: Menlo, monospace;
  color: #00cc80;
}
.content p code,
.content li code {
  word-break: break-all;
}
.content pre {
  padding: 1.2vw;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  overflow-x: auto;
  font-size: 80%;
  line-height: 1.71428571;
  background: rgba(0, 136, 255, 0.04);
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 1000px) {
  .content pre {
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content pre {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1.8rem;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(255, 0, 180, 0.05);
  border-color: #ff00b4;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
}
.content table th,
.content table td {
  padding: 0.6em 1.2vw;
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
:lang(zh),
:lang(ja) {
  text-align: justify;
}
:lang(zh) header,
:lang(ja) header,
:lang(zh) header *,
:lang(ja) header * {
  text-align: start;
}
.leading-indent-fix {
  text-indent: -0.39em;
}
.post-modified-date {
  font-size: 75%;
  opacity: .5;
}
.largetype {
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 250%;
  margin-bottom: 1.8rem !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
@media (max-width: 1000px), (max-width: 640px) {
  .browser {
    border-radius: 0;
  }
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  max-width: 100%;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
}
.screenshot-mac {
  margin-left: -56px;
  margin-right: -56px;
}
@media (max-width: 1000px), (max-width: 640px) {
  .screenshot-mac {
    margin-left: 0;
    margin-right: 0;
  }
}
.note,
.store,
.download {
  padding-left: 1.2vw;
  margin-left: calc(-1.2vw - 2px);
  border-left: 2px solid #ff00b4;
}
@media (max-width: 640px) {
  .note,
  .store,
  .download {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.footnotes {
  font-size: 80%;
}
.footnotes::before {
  display: block;
  content: '';
  width: 4px;
  height: 4px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 20px 0 0 0 #000, -20px 0 0 0 #000;
}
:target [rev=footnote],
:target [rel=footnote],
:target .reversefootnote,
:target .footnote {
  color: #ff00b4;
}
.list {
  display: block;
  margin: 0 0 .4rem;
}
.list h1 {
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  line-height: 1.1;
  opacity: 1;
  margin: 0;
}
@media (max-width: 640px) {
  .list h1 {
    font-size: 180%;
  }
}
@media (max-width: 640px) {
  .list .external {
    display: none;
  }
}
.external .dot {
  display: inline-block;
  width: .7rem;
  height: .7rem;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000;
  border-radius: 50%;
  transition: transform .4s ease;
}
.external .dot--post {
  margin-left: 1rem;
}
.external:hover .dot,
.external:focus .dot {
  transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 75%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 .6vw;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
.loaded .intense-wrap article p > img:not(.no-intense) {
  cursor: zoom-in;
}
.loaded.intense-open {
  cursor: zoom-out;
}
.gist {
  font-size: 80% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .highlight {
  font-size: 90% !important;
}
.gist .markdown-body {
  font-size: 100% !important;
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
/*!
 * Randomized
 * Copyright 2014-2015 Tunghsiao Liu
 * Licensed under MIT (https://github.com/sparanoid/randomized/blob/master/LICENSE)
 */
.highlight > pre,
.highlighter-rouge .highlight {
  background: rgba(77, 0, 54, 0.015);
}
.highlight code {
  color: #867982;
}
.highlight .err {
  background-color: rgba(255, 0, 180, 0.1);
}
.highlight .c {
  font-style: italic;
}
.highlight .cm {
  font-style: italic;
}
.highlight .cp {
  font-weight: bold;
}
.highlight .c1 {
  font-style: italic;
}
.highlight .cs {
  font-weight: bold;
  font-style: italic;
}
.highlight .nc {
  font-weight: bold;
}
.highlight .ne {
  font-weight: bold;
}
.highlight .nf {
  font-weight: bold;
}
.highlight .o {
  font-weight: bold;
}
.highlight .ow {
  font-weight: bold;
}
.highlight .gs {
  font-weight: bold;
}
.highlight .ge {
  font-style: italic;
}
.highlight .k {
  font-weight: bold;
}
.highlight .kt {
  font-weight: bold;
}
.highlight .kc {
  font-weight: bold;
}
.highlight .kd {
  font-weight: bold;
}
.highlight .kp {
  font-weight: bold;
}
.highlight .kr {
  font-weight: bold;
}
.highlight .err {
  color: #33a399;
}
.highlight .x {
  color: #33a3a8;
}
.highlight .n {
  color: #33a3b6;
}
.highlight .na {
  color: #33a3c5;
}
.highlight .nb {
  color: #3397c7;
}
.highlight .bp {
  color: #3388c7;
}
.highlight .nc {
  color: #337ac7;
}
.highlight .no {
  color: #336bc7;
}
.highlight .nd {
  color: #335cc7;
}
.highlight .ni {
  color: #334ec7;
}
.highlight .ne {
  color: #333fc7;
}
.highlight .nf {
  color: #3331c7;
}
.highlight .nl {
  color: #3322c7;
}
.highlight .nn {
  color: #3313c7;
}
.highlight .nx {
  color: #3305c7;
}
.highlight .nt {
  color: #3d00c7;
}
.highlight .nv {
  color: #4b00c7;
}
.highlight .vc {
  color: #5a00c7;
}
.highlight .vg {
  color: #6900c7;
}
.highlight .vi {
  color: #7700c7;
}
.highlight .g {
  color: #8600c7;
}
.highlight .gd {
  color: #9500c7;
}
.highlight .ge {
  color: #a300c7;
}
.highlight .gr {
  color: #b200c7;
}
.highlight .gh {
  color: #c000c7;
}
.highlight .gi {
  color: #cf00c7;
}
.highlight .go {
  color: #d600c0;
}
.highlight .gp {
  color: #d600b1;
}
.highlight .gs {
  color: #d600a3;
}
.highlight .gu {
  color: #d60094;
}
.highlight .gt {
  color: #d60085;
}
.highlight .gl {
  color: #d60077;
}
.highlight .k {
  color: #d60068;
}
.highlight .kc {
  color: #d60059;
}
.highlight .kd {
  color: #d6004b;
}
.highlight .kn {
  color: #d6003c;
}
.highlight .kp {
  color: #d6002e;
}
.highlight .kr {
  color: #d60524;
}
.highlight .kt {
  color: #d61424;
}
.highlight .kv {
  color: #d62224;
}
.highlight .w {
  color: #d63124;
}
.highlight .l {
  color: #d63f24;
}
.highlight .ld {
  color: #d64e24;
}
.highlight .s {
  color: #d65d24;
}
.highlight .sb {
  color: #d66b24;
}
.highlight .sc {
  color: #d67a24;
}
.highlight .sd {
  color: #d68924;
}
.highlight .s2 {
  color: #d69724;
}
.highlight .se {
  color: #d4a324;
}
.highlight .sh {
  color: #c5a324;
}
.highlight .si {
  color: #b6a324;
}
.highlight .sx {
  color: #a8a324;
}
.highlight .sr {
  color: #99a324;
}
.highlight .s1 {
  color: #8ba324;
}
.highlight .ss {
  color: #7ca324;
}
.highlight .m {
  color: #6da324;
}
.highlight .mf {
  color: #5fa324;
}
.highlight .mh {
  color: #50a324;
}
.highlight .mi {
  color: #42a324;
}
.highlight .il {
  color: #33a324;
}
.highlight .mo {
  color: #33a333;
}
.highlight .mb {
  color: #33a341;
}
.highlight .mx {
  color: #33a350;
}
.highlight .o {
  color: #33a35f;
}
.highlight .ow {
  color: #33a36d;
}
.highlight .p {
  color: #33a37c;
}
.highlight .pi {
  color: #33a38a;
}
.highlight .c {
  color: #5a5589;
  opacity: .6;
}
.highlight .cd {
  color: #7c4089;
  opacity: .6;
}
.highlight .cm {
  color: #914067;
  opacity: .6;
}
.highlight .cp {
  color: #916352;
  opacity: .6;
}
.highlight .c1 {
  color: #6e7752;
  opacity: .6;
}
.highlight .cs {
  color: #5a7775;
  opacity: .6;
}
.highlight table,
.highlight table th,
.highlight table td,
.highlight table td pre {
  padding: 0;
  margin: 0;
  border: none;
  background: transparent;
  font-size: 100%;
}
.highlight table .lineno {
  color: #867982;
  opacity: .5;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.highlight table .code {
  padding-left: 1em;
}
.content {
  margin-bottom: 10vmin;
}
.content p {
  font-size: 88%;
}
.content h2 {
  font-size: 108%;
  opacity: .8;
}
.content h3 {
  font-size: 96%;
  opacity: .7;
}
.content h4 {
  font-size: 84%;
  opacity: .6;
}
.content h5 {
  font-size: 72%;
  opacity: .5;
}
.content h6 {
  font-size: 60%;
  opacity: .4;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 6vmin 0 1rem;
}
.content header {
  padding-bottom: 8vmin;
}
.navigation {
  margin: 0 0 10vmin;
}
.center {
  display: flex;
  align-content: center;
  justify-content: center;
}
.parent-link {
  stroke: #888;
  stroke-width: 1px;
}
.children-link {
  stroke: #aaa;
  stroke-width: 0.5px;
}
.img-phone {
  width: inherit;
  margin: inherit;
}
.amsf-logo {
  width: 80%;
  height: auto;
}
.amsf-title {
  text-indent: -999999px;
  line-height: 0 !important;
}
/*
* {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
*/
/*# sourceMappingURL=data:application/json;base64, */