/*!
 * Curtana for Almace Scaffolding
 * Copyright 2005-2015 Tunghsiao Liu
 * Licensed under MIT (https://github.com/amsf/amsf-curtana/blob/master/LICENSE)
 */
@import url(https://fonts.googleapis.com/css?family=Vollkorn:400,400italic);
.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  padding: 0 22vw;
  margin: 0 auto 0;
  font-family: "Helvetica Neue", "Hiragino Sans GB", Arial, sans-serif;
  font-size: 1.6vw;
  line-height: 1.42857143;
  color: #000;
  text-rendering: optimizelegibility;
  background: #fff;
  image-rendering: optimizequality;
  transition: all .2s ease;
}
@media (max-width: 1000px) {
  body {
    padding-left: 8vw;
    padding-right: 8vw;
    font-size: 2.24vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4vw;
    padding-right: 4vw;
    font-size: 3.84vw;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.12vw;
  }
}
@media (max-device-width: 480px), (max-device-width: 1024px) {
  body {
    -webkit-text-size-adjust: none;
  }
}
body:before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -9999;
  width: 100%;
  height: 1vmax;
  pointer-events: none;
  background: #ff00b4;
  content: "";
  opacity: .2;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
  text-decoration: underline;
  text-decoration-skip: ink;
}
a[disabled],
button[disabled] {
  opacity: .4;
  cursor: not-allowed;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-moz-selection {
  background: rgba(255, 0, 180, 0.1);
}
::selection {
  background: rgba(255, 0, 180, 0.1);
}
::-webkit-input-placeholder {
  color: #000;
  opacity: .1;
}
.logo {
  display: block;
  height: 1vmax;
  margin: 0 0 1.4vmax;
  background: #ff00b4;
  opacity: 0;
}
.logo:hover,
.logo:focus {
  border-bottom: none !important;
  background: #000;
  opacity: 1;
}
.logo h1 {
  height: 0;
  text-indent: -99999em;
}
.navigation {
  margin: 0 0 16vmin;
  margin-right: -1.1em;
  margin-left: -1.1em;
  font-size: 60%;
  font-weight: bold;
  letter-spacing: .45em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: .5em 1.2em;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #ff00b4;
  text-decoration: none;
}
.current a {
  color: #ff00b4;
}
body:hover .latest {
  color: #ff00b4 !important;
}
.content .status {
  margin: 1vmin 0 0;
  font-size: 75%;
  font-weight: bold;
}
.content .status:before {
  display: inline-block;
  width: 0.8em;
  height: 0.8em;
  margin-right: .8vw;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  content: "";
}
.content .status.available:before {
  background: #0cf;
}
.content .status.available a {
  color: #0cf;
}
.content .status.unavailable:before {
  background: #ccc;
}
.content .status.unavailable a {
  color: #ccc;
}
.content {
  margin-bottom: 16vmin;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content p {
  margin-bottom: 1.6rem;
  line-height: 1.71428571;
}
.content header {
  padding-bottom: 16vmin;
}
.content header h1 {
  margin: 0 0 .1em;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
@media (max-width: 640px) {
  .content header h1 {
    font-size: 280%;
  }
}
.content header h1 svg {
  display: block;
  max-width: 100%;
}
.content header h1 svg,
.content header h1 img {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: .3em;
}
@media (max-width: 640px) {
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
}
.content header .image-title {
  text-indent: -999999px;
  line-height: 0;
}
.content header .latest-post {
  margin-top: 16vmin;
  font-size: 80%;
  font-weight: normal;
  line-height: 1.2;
}
.content header .latest-post a {
  font-weight: bold;
}
.content header small {
  display: block;
  margin-top: 2vmin;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-size: 72%;
  font-weight: normal;
  opacity: .5;
}
.content ul,
.content ol {
  margin-bottom: 1.8rem;
  margin-left: 1.2em;
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li > ul,
.content ol li > ul,
.content ul li > ol,
.content ol li > ol {
  margin-bottom: 0;
}
.content ol {
  margin-left: 1.75em;
}
.content img,
.content video,
.content iframe,
.content .browser {
  display: block;
  width: calc(100% + (1.2vw * 2) + (2px * 2));
  margin: 0 calc(-1.2vw - 2px) 1.8rem;
}
@media (max-width: 1000px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    margin-left: -8vw;
    margin-right: -8vw;
    width: calc(100% + (8vw * 2));
  }
}
@media (max-width: 640px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    margin-left: -4vw;
    margin-right: -4vw;
    width: calc(100% + (4vw * 2));
  }
}
.content img.no-enlarge,
.content video.no-enlarge,
.content iframe.no-enlarge,
.content .browser.no-enlarge {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  width: auto;
}
.content blockquote {
  position: relative;
  margin-bottom: 2.8rem;
  margin-left: calc(-1.2vw - 2px);
  font-size: 90%;
}
@media (max-width: 640px) {
  .content blockquote {
    margin-left: 0;
  }
}
.content blockquote > p {
  padding-left: 1.2vw;
  border-left: 2px solid;
  padding-bottom: 1.6rem;
  margin-bottom: 0;
}
.content blockquote > p:last-of-type {
  padding-bottom: 0;
  margin-bottom: 1.6rem;
}
@media (max-width: 640px) {
  .content blockquote > p {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content hr::before {
  display: block;
  content: '';
  width: 4px;
  height: 4px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 20px 0 0 0 #000, -20px 0 0 0 #000;
}
.content sup {
  font-size: 75%;
}
.content code,
.content pre {
  font-family: Menlo, monospace;
  color: #00cc80;
}
.content p code,
.content li code {
  word-break: break-all;
}
.content pre {
  padding: 1.2vw;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  overflow-x: auto;
  font-size: 80%;
  line-height: 1.71428571;
  background: rgba(0, 136, 255, 0.04);
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 1000px) {
  .content pre {
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content pre {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1.8rem;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(255, 0, 180, 0.05);
  border-color: #ff00b4;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
}
.content table th,
.content table td {
  padding: 0.6em 1.2vw;
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
:lang(zh),
:lang(ja) {
  text-align: justify;
}
:lang(zh) header,
:lang(ja) header,
:lang(zh) header *,
:lang(ja) header * {
  text-align: start;
}
.leading-indent-fix {
  text-indent: -0.39em;
}
.post-modified-date {
  font-size: 75%;
  opacity: .5;
}
.largetype {
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  margin-bottom: 1.8rem !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
@media (max-width: 1000px), (max-width: 640px) {
  .browser {
    border-radius: 0;
  }
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  max-width: 100%;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
}
.screenshot-mac {
  margin-left: -56px;
  margin-right: -56px;
}
@media (max-width: 1000px), (max-width: 640px) {
  .screenshot-mac {
    margin-left: 0;
    margin-right: 0;
  }
}
.note,
.store,
.download {
  padding-left: 1.2vw;
  margin-left: calc(-1.2vw - 2px);
  border-left: 2px solid #ff00b4;
}
@media (max-width: 640px) {
  .note,
  .store,
  .download {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.footnotes {
  font-size: 80%;
}
.footnotes::before {
  display: block;
  content: '';
  width: 4px;
  height: 4px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 20px 0 0 0 #000, -20px 0 0 0 #000;
}
:target [rev=footnote],
:target [rel=footnote],
:target .reversefootnote,
:target .footnote {
  color: #ff00b4;
}
.list {
  display: block;
  margin: 0 0 .4rem;
}
.list h1 {
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  line-height: 1.1;
  opacity: 1;
  margin: 0;
}
@media (max-width: 640px) {
  .list h1 {
    font-size: 180%;
  }
}
@media (max-width: 640px) {
  .list .external {
    display: none;
  }
}
.external .dot {
  display: inline-block;
  width: .7rem;
  height: .7rem;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000;
  border-radius: 50%;
  transition: transform .4s ease;
}
.external .dot--post {
  margin-left: 1rem;
}
.external:hover .dot,
.external:focus .dot {
  transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 75%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 .6vw;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
.loaded .intense-wrap article p > img:not(.no-intense) {
  cursor: zoom-in;
}
.loaded.intense-open {
  cursor: zoom-out;
}
.gist {
  font-size: 80% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .highlight {
  font-size: 90% !important;
}
.gist .markdown-body {
  font-size: 100% !important;
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
/*!
 * Randomized
 * Copyright 2014-2015 Tunghsiao Liu
 * Licensed under MIT (https://github.com/sparanoid/randomized/blob/master/LICENSE)
 */
.highlight > pre,
.highlighter-rouge .highlight {
  background: rgba(77, 0, 54, 0.015);
}
.highlight code {
  color: #867982;
}
.highlight .err {
  background-color: rgba(255, 0, 180, 0.1);
}
.highlight .c {
  font-style: italic;
}
.highlight .cm {
  font-style: italic;
}
.highlight .cp {
  font-weight: bold;
}
.highlight .c1 {
  font-style: italic;
}
.highlight .cs {
  font-weight: bold;
  font-style: italic;
}
.highlight .nc {
  font-weight: bold;
}
.highlight .ne {
  font-weight: bold;
}
.highlight .nf {
  font-weight: bold;
}
.highlight .o {
  font-weight: bold;
}
.highlight .ow {
  font-weight: bold;
}
.highlight .gs {
  font-weight: bold;
}
.highlight .ge {
  font-style: italic;
}
.highlight .k {
  font-weight: bold;
}
.highlight .kt {
  font-weight: bold;
}
.highlight .kc {
  font-weight: bold;
}
.highlight .kd {
  font-weight: bold;
}
.highlight .kp {
  font-weight: bold;
}
.highlight .kr {
  font-weight: bold;
}
.highlight .err {
  color: #33a399;
}
.highlight .x {
  color: #33a3a8;
}
.highlight .n {
  color: #33a3b6;
}
.highlight .na {
  color: #33a3c5;
}
.highlight .nb {
  color: #3397c7;
}
.highlight .bp {
  color: #3388c7;
}
.highlight .nc {
  color: #337ac7;
}
.highlight .no {
  color: #336bc7;
}
.highlight .nd {
  color: #335cc7;
}
.highlight .ni {
  color: #334ec7;
}
.highlight .ne {
  color: #333fc7;
}
.highlight .nf {
  color: #3331c7;
}
.highlight .nl {
  color: #3322c7;
}
.highlight .nn {
  color: #3313c7;
}
.highlight .nx {
  color: #3305c7;
}
.highlight .nt {
  color: #3d00c7;
}
.highlight .nv {
  color: #4b00c7;
}
.highlight .vc {
  color: #5a00c7;
}
.highlight .vg {
  color: #6900c7;
}
.highlight .vi {
  color: #7700c7;
}
.highlight .g {
  color: #8600c7;
}
.highlight .gd {
  color: #9500c7;
}
.highlight .ge {
  color: #a300c7;
}
.highlight .gr {
  color: #b200c7;
}
.highlight .gh {
  color: #c000c7;
}
.highlight .gi {
  color: #cf00c7;
}
.highlight .go {
  color: #d600c0;
}
.highlight .gp {
  color: #d600b1;
}
.highlight .gs {
  color: #d600a3;
}
.highlight .gu {
  color: #d60094;
}
.highlight .gt {
  color: #d60085;
}
.highlight .gl {
  color: #d60077;
}
.highlight .k {
  color: #d60068;
}
.highlight .kc {
  color: #d60059;
}
.highlight .kd {
  color: #d6004b;
}
.highlight .kn {
  color: #d6003c;
}
.highlight .kp {
  color: #d6002e;
}
.highlight .kr {
  color: #d60524;
}
.highlight .kt {
  color: #d61424;
}
.highlight .kv {
  color: #d62224;
}
.highlight .w {
  color: #d63124;
}
.highlight .l {
  color: #d63f24;
}
.highlight .ld {
  color: #d64e24;
}
.highlight .s {
  color: #d65d24;
}
.highlight .sb {
  color: #d66b24;
}
.highlight .sc {
  color: #d67a24;
}
.highlight .sd {
  color: #d68924;
}
.highlight .s2 {
  color: #d69724;
}
.highlight .se {
  color: #d4a324;
}
.highlight .sh {
  color: #c5a324;
}
.highlight .si {
  color: #b6a324;
}
.highlight .sx {
  color: #a8a324;
}
.highlight .sr {
  color: #99a324;
}
.highlight .s1 {
  color: #8ba324;
}
.highlight .ss {
  color: #7ca324;
}
.highlight .m {
  color: #6da324;
}
.highlight .mf {
  color: #5fa324;
}
.highlight .mh {
  color: #50a324;
}
.highlight .mi {
  color: #42a324;
}
.highlight .il {
  color: #33a324;
}
.highlight .mo {
  color: #33a333;
}
.highlight .mb {
  color: #33a341;
}
.highlight .mx {
  color: #33a350;
}
.highlight .o {
  color: #33a35f;
}
.highlight .ow {
  color: #33a36d;
}
.highlight .p {
  color: #33a37c;
}
.highlight .pi {
  color: #33a38a;
}
.highlight .c {
  color: #5a5589;
  opacity: .6;
}
.highlight .cd {
  color: #7c4089;
  opacity: .6;
}
.highlight .cm {
  color: #914067;
  opacity: .6;
}
.highlight .cp {
  color: #916352;
  opacity: .6;
}
.highlight .c1 {
  color: #6e7752;
  opacity: .6;
}
.highlight .cs {
  color: #5a7775;
  opacity: .6;
}
.highlight table,
.highlight table th,
.highlight table td,
.highlight table td pre {
  padding: 0;
  margin: 0;
  border: none;
  background: transparent;
  font-size: 100%;
}
.highlight table .lineno {
  color: #867982;
  opacity: .5;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.highlight table .code {
  padding-left: 1em;
}
.content {
  margin-bottom: 10vmin;
}
.content h2 {
  font-size: 108%;
  opacity: .8;
}
.content h3 {
  font-size: 96%;
  opacity: .7;
}
.content h4 {
  font-size: 84%;
  opacity: .6;
}
.content h5 {
  font-size: 72%;
  opacity: .5;
}
.content h6 {
  font-size: 60%;
  opacity: .4;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 6vmin 0 1rem;
}
.content header {
  padding-bottom: 8vmin;
}
.navigation {
  margin: 0 0 10vmin;
}
.parent-link {
  stroke: #888;
  stroke-width: 1px;
}
.children-link {
  stroke: #aaa;
  stroke-width: 0.5px;
}
.img-phone {
  width: inherit;
  margin: inherit;
}
.amsf-logo {
  width: 80%;
  height: auto;
}
.amsf-title {
  text-indent: -999999px;
  line-height: 0 !important;
}
/*
* {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
*/
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9taXhpbnMubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3Jlc2V0Lmxlc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9jb21tb24ubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3BsdWdpbnMubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3ByaW50Lmxlc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9jb21wb25lbnRzL3JhbmRvbWl6ZWQubGVzcyIsIl9hcHAvYXNzZXRzL19sZXNzL3VzZXIubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBQ0gsNEVBQTRFO0FDSzFFOztFQUNFLGVBQUE7RUFDQSxZQUFBO0NERkg7QUNLQztFQUNFLFlBQUE7Q0RISDtBRVREOzs7RUFHRSxXQUFBO0VBQ0EsVUFBQTtFQUNBLHVCQUFBO0NGV0Q7QUVSRDtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxxRUFBQTtFQUNBLGlCQUFBO0VBQ0Esd0JBQUE7RUFDQSxZQUFBO0VBQ0EsbUNBQUE7RUFDQSxpQkFBQTtFQUNBLGlDQUFBO0VBQ0EseUJBQUE7Q0ZVRDtBRUhDO0VBbUZGO0lEOUVFLGtCQUFBO0lBQ0EsbUJBQUE7SUNURSxrQkFBQTtHRllEO0NBQ0Y7QUVMQztFQThFRjtJRDlFRSxrQkFBQTtJQUNBLG1CQUFBO0lDSkUsa0JBQUE7R0ZjRDtDQUNGO0FFUEM7RUF5RUY7SUE3RUksa0JBQUE7R0ZlRDtDQUNGO0FFUEM7RUFvRUY7SUF4RUksK0JBQUE7R0ZlRDtDQUNGO0FFWkM7RUFDRSxtQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0EscUJBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7RUFD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TnF0Qkw7QU1yMUJEO0VBZ0lNLGVBQUE7Q053dEJMO0FNeDFCRDtFQWdJTSxlQUFBO0NOMnRCTDtBTTMxQkQ7RUFnSU0sZUFBQTtDTjh0Qkw7QU05MUJEO0VBZ0lNLGVBQUE7Q05pdUJMO0FNajJCRDtFQWdJTSxlQUFBO0NOb3VCTDtBTXAyQkQ7RUFnSU0sZUFBQTtDTnV1Qkw7QU12MkJEO0VBZ0lNLGVBQUE7Q04wdUJMO0FNMTJCRDtFQWdJTSxlQUFBO0NONnVCTDtBTTcyQkQ7RUFnSU0sZUFBQTtDTmd2Qkw7QU1oM0JEO0VBZ0lNLGVBQUE7Q05tdkJMO0FNbjNCRDtFQWdJTSxlQUFBO0NOc3ZCTDtBTXQzQkQ7RUFnSU0sZUFBQTtDTnl2Qkw7QU16M0JEO0VBZ0lNLGVBQUE7Q040dkJMO0FNNTNCRDtFQWdJTSxlQUFBO0NOK3ZCTDtBTS8zQkQ7RUFnSU0sZUFBQTtDTmt3Qkw7QU1sNEJEO0VBZ0lNLGVBQUE7Q05xd0JMO0FNcjRCRDtFQWdJTSxlQUFBO0NOd3dCTDtBTXg0QkQ7RUFnSU0sZUFBQTtDTjJ3Qkw7QU0zNEJEO0VBZ0lNLGVBQUE7Q044d0JMO0FNOTRCRDtFQWdJTSxlQUFBO0NOaXhCTDtBTWo1QkQ7RUFnSU0sZUFBQTtDTm94Qkw7QU1wNUJEO0VBZ0lNLGVBQUE7Q051eEJMO0FNdjVCRDtFQWdJTSxlQUFBO0NOMHhCTDtBTTE1QkQ7RUFnSU0sZUFBQTtDTjZ4Qkw7QU03NUJEO0VBZ0lNLGVBQUE7Q05neUJMO0FNaDZCRDtFQWdJTSxlQUFBO0NObXlCTDtBTW42QkQ7RUFnSU0sZUFBQTtDTnN5Qkw7QU10NkJEO0VBZ0lNLGVBQUE7Q055eUJMO0FNejZCRDtFQWdJTSxlQUFBO0NONHlCTDtBTTU2QkQ7RUFnSU0sZUFBQTtDTit5Qkw7QU0vNkJEO0VBZ0lNLGVBQUE7Q05rekJMO0FNbDdCRDtFQWdJTSxlQUFBO0NOcXpCTDtBTXI3QkQ7RUFnSU0sZUFBQTtDTnd6Qkw7QU14N0JEO0VBZ0lNLGVBQUE7Q04yekJMO0FNMzdCRDtFQWdJTSxlQUFBO0NOOHpCTDtBTTk3QkQ7RUFnSU0sZUFBQTtDTmkwQkw7QU1qOEJEO0VBZ0lNLGVBQUE7Q05vMEJMO0FNcDhCRDtFQWdJTSxlQUFBO0NOdTBCTDtBTXY4QkQ7RUFnSU0sZUFBQTtDTjAwQkw7QU0xOEJEO0VBZ0lNLGVBQUE7Q042MEJMO0FNNzhCRDtFQWdJTSxlQUFBO0NOZzFCTDtBTWg5QkQ7RUFnSU0sZUFBQTtDTm0xQkw7QU1uOUJEO0VBZ0lNLGVBQUE7Q05zMUJMO0FNdDlCRDtFQWdJTSxlQUFBO0NOeTFCTDtBTXo5QkQ7RUFnSU0sZUFBQTtDTjQxQkw7QU01OUJEO0VBZ0lNLGVBQUE7Q04rMUJMO0FNLzlCRDtFQW9KTSxlQUFBO0VBQ0EsWUFBQTtDTjgwQkw7QU1uK0JEO0VBb0pNLGVBQUE7RUFDQSxZQUFBO0NOazFCTDtBTXYrQkQ7RUFvSk0sZUFBQTtFQUNBLFlBQUE7Q05zMUJMO0FNMytCRDtFQW9KTSxlQUFBO0VBQ0EsWUFBQTtDTjAxQkw7QU0vK0JEO0VBb0pNLGVBQUE7RUFDQSxZQUFBO0NOODFCTDtBTW4vQkQ7RUFvSk0sZUFBQTtFQUNBLFlBQUE7Q05rMkJMO0FNejFCRzs7OztFQUlFLFdBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7Q04yMUJMO0FNamdDRDtFQTBLTSxlQUFBO0VBQ0EsWUFBQTtFQUNBLDBCQUFBO0tBQUEsdUJBQUE7TUFBQSxzQkFBQTtVQUFBLGtCQUFBO0NOMDFCTDtBTXRnQ0Q7RUFnTE0sa0JBQUE7Q055MUJMO0FPcGhDRDtFQWNFLHNCQUFBO0NQeWdDRDtBT3ZoQ0Q7RUFDTyxnQkFBQTtFQUFpQixZQUFBO0NQMGhDdkI7QU8zaENEO0VBRU8sZUFBQTtFQUFpQixZQUFBO0NQNmhDdkI7QU8vaENEO0VBR08sZUFBQTtFQUFpQixZQUFBO0NQZ2lDdkI7QU9uaUNEO0VBSU8sZUFBQTtFQUFpQixZQUFBO0NQbWlDdkI7QU92aUNEO0VBS08sZUFBQTtFQUFpQixZQUFBO0NQc2lDdkI7QU8zaUNEOzs7OztFQVdJLHFCQUFBO0NQdWlDSDtBT2xqQ0Q7RUFhVyxzQkFBQTtDUHdpQ1Y7QU9waUNEO0VBQ0UsbUJBQUE7Q1BzaUNEO0FPbGlDRDtFQUNJLGFBQUE7RUFDQSxrQkFBQTtDUG9pQ0g7QU9saUNEO0VBQ0ksYUFBQTtFQUNBLG9CQUFBO0NQb2lDSDtBT2xpQ0Q7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7Q1BvaUNIO0FPcmhDRDtFQUNFLFdBQUE7RUFDQSxhQUFBO0NQdWhDRDtBT3BoQ0Q7RUFDRSx1QkFBQTtFQUNBLDBCQUFBO0NQc2hDRDtBQUNEOzs7Ozs7RUFNRSIsImZpbGUiOiJhcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDdXJ0YW5hIGZvciBBbG1hY2UgU2NhZmZvbGRpbmdcbiAqIENvcHlyaWdodCAyMDA1LTIwMTUgVHVuZ2hzaWFvIExpdVxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vYW1zZi9hbXNmLWN1cnRhbmEvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqL1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVZvbGxrb3JuOjQwMCw0MDBpdGFsaWMpO1xuLmNmOmJlZm9yZSxcbi5jZjphZnRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNmOmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuYm9keSB7XG4gIHBhZGRpbmc6IDAgMjJ2dztcbiAgbWFyZ2luOiAwIGF1dG8gMDtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJIaXJhZ2lubyBTYW5zIEdCXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuNnZ3O1xuICBsaW5lLWhlaWdodDogMS40Mjg1NzE0MztcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGltYWdlLXJlbmRlcmluZzogb3B0aW1pemVxdWFsaXR5O1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gIGJvZHkge1xuICAgIHBhZGRpbmctbGVmdDogOHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDh2dztcbiAgICBmb250LXNpemU6IDIuMjR2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIGJvZHkge1xuICAgIHBhZGRpbmctbGVmdDogNHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBmb250LXNpemU6IDMuODR2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogNS4xMnZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC1kZXZpY2Utd2lkdGg6IDQ4MHB4KSwgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICBib2R5IHtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG4gIH1cbn1cbmJvZHk6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IC05OTk5O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxdm1heDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNmZjAwYjQ7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIG9wYWNpdHk6IC4yO1xufVxuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3RbbXVsdGlwbGVdLFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuYSxcbmJ1dHRvbiB7XG4gIGNvbG9yOiAjMDAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNXMgZWFzZSwgYm9yZGVyLWNvbG9yIDAuNXMgZWFzZSwgYmFja2dyb3VuZCAwLjVzIGVhc2UsIG9wYWNpdHkgMS41cyBlYXNlO1xufVxuYTpob3ZlcixcbmJ1dHRvbjpob3ZlcixcbmE6Zm9jdXMsXG5idXR0b246Zm9jdXMge1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjFzIGVhc2UsIGJvcmRlci1jb2xvciAwLjFzIGVhc2UsIGJhY2tncm91bmQgMC4xcyBlYXNlLCBvcGFjaXR5IDAuMXMgZWFzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIHRleHQtZGVjb3JhdGlvbi1za2lwOiBpbms7XG59XG5hW2Rpc2FibGVkXSxcbmJ1dHRvbltkaXNhYmxlZF0ge1xuICBvcGFjaXR5OiAuNDtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbmltZyxcbmhyIHtcbiAgYm9yZGVyOiAwO1xufVxuZGVsIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG59XG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAwLCAxODAsIDAuMSk7XG59XG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogIzAwMDtcbiAgb3BhY2l0eTogLjE7XG59XG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDF2bWF4O1xuICBtYXJnaW46IDAgMCAxLjR2bWF4O1xuICBiYWNrZ3JvdW5kOiAjZmYwMGI0O1xuICBvcGFjaXR5OiAwO1xufVxuLmxvZ286aG92ZXIsXG4ubG9nbzpmb2N1cyB7XG4gIGJvcmRlci1ib3R0b206IG5vbmUgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgb3BhY2l0eTogMTtcbn1cbi5sb2dvIGgxIHtcbiAgaGVpZ2h0OiAwO1xuICB0ZXh0LWluZGVudDogLTk5OTk5ZW07XG59XG4ubmF2aWdhdGlvbiB7XG4gIG1hcmdpbjogMCAwIDE2dm1pbjtcbiAgbWFyZ2luLXJpZ2h0OiAtMS4xZW07XG4gIG1hcmdpbi1sZWZ0OiAtMS4xZW07XG4gIGZvbnQtc2l6ZTogNjAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC40NWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLm5hdmlnYXRpb24gbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAyO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLm5hdmlnYXRpb24gbGkgYSB7XG4gIHBhZGRpbmc6IC41ZW0gMS4yZW07XG59XG4ubmF2aWdhdGlvbiBsaSBhOmhvdmVyLFxuLm5hdmlnYXRpb24gbGkgYTpmb2N1cyB7XG4gIGNvbG9yOiAjZmYwMGI0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uY3VycmVudCBhIHtcbiAgY29sb3I6ICNmZjAwYjQ7XG59XG5ib2R5OmhvdmVyIC5sYXRlc3Qge1xuICBjb2xvcjogI2ZmMDBiNCAhaW1wb3J0YW50O1xufVxuLmNvbnRlbnQgLnN0YXR1cyB7XG4gIG1hcmdpbjogMXZtaW4gMCAwO1xuICBmb250LXNpemU6IDc1JTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY29udGVudCAuc3RhdHVzOmJlZm9yZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDAuOGVtO1xuICBoZWlnaHQ6IDAuOGVtO1xuICBtYXJnaW4tcmlnaHQ6IC44dnc7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNvbnRlbnQgLnN0YXR1cy5hdmFpbGFibGU6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogIzBjZjtcbn1cbi5jb250ZW50IC5zdGF0dXMuYXZhaWxhYmxlIGEge1xuICBjb2xvcjogIzBjZjtcbn1cbi5jb250ZW50IC5zdGF0dXMudW5hdmFpbGFibGU6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogI2NjYztcbn1cbi5jb250ZW50IC5zdGF0dXMudW5hdmFpbGFibGUgYSB7XG4gIGNvbG9yOiAjY2NjO1xufVxuLmNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxNnZtaW47XG59XG4uY29udGVudDpiZWZvcmUsXG4uY29udGVudDphZnRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNvbnRlbnQ6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cbi5jb250ZW50IGFydGljbGUgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uY29udGVudCBhcnRpY2xlID4gKjpsYXN0LWNoaWxkID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuLmNvbnRlbnQgYXJ0aWNsZSA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cbi5jb250ZW50IGFydGljbGUgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uY29udGVudCAucG9zdC1jb250ZW50ID4gKjpmaXJzdC1jaGlsZCxcbi5jb250ZW50IC5wYWdlLWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jb250ZW50IC5wb3N0LWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkID4gKjpmaXJzdC1jaGlsZCxcbi5jb250ZW50IC5wYWdlLWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uY29udGVudCBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY29udGVudCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMS42cmVtO1xuICBsaW5lLWhlaWdodDogMS43MTQyODU3MTtcbn1cbi5jb250ZW50IGhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAxNnZtaW47XG59XG4uY29udGVudCBoZWFkZXIgaDEge1xuICBtYXJnaW46IDAgMCAuMWVtO1xuICBmb250LXNpemU6IDMzMCU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjA2ZW07XG4gIGh5cGhlbnM6IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgaGVhZGVyIGgxIHtcbiAgICBmb250LXNpemU6IDI4MCU7XG4gIH1cbn1cbi5jb250ZW50IGhlYWRlciBoMSBzdmcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuLmNvbnRlbnQgaGVhZGVyIGgxIHN2Zyxcbi5jb250ZW50IGhlYWRlciBoMSBpbWcge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IGhlYWRlciBoMSBzdmcsXG4gIC5jb250ZW50IGhlYWRlciBoMSBpbWcge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5jb250ZW50IGhlYWRlciAuaW1hZ2UtdGl0bGUge1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICBsaW5lLWhlaWdodDogMDtcbn1cbi5jb250ZW50IGhlYWRlciAubGF0ZXN0LXBvc3Qge1xuICBtYXJnaW4tdG9wOiAxNnZtaW47XG4gIGZvbnQtc2l6ZTogODAlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuLmNvbnRlbnQgaGVhZGVyIC5sYXRlc3QtcG9zdCBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY29udGVudCBoZWFkZXIgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMnZtaW47XG59XG4uY29udGVudCBoMixcbi5jb250ZW50IGgzLFxuLmNvbnRlbnQgaDQsXG4uY29udGVudCBoNSxcbi5jb250ZW50IGg2IHtcbiAgbWFyZ2luOiAxMHZtaW4gMCAxcmVtO1xuICBmb250LXNpemU6IDcyJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgb3BhY2l0eTogLjU7XG59XG4uY29udGVudCB1bCxcbi5jb250ZW50IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xuICBtYXJnaW4tbGVmdDogMS4yZW07XG59XG4uY29udGVudCB1bCBsaSxcbi5jb250ZW50IG9sIGxpIHtcbiAgbGluZS1oZWlnaHQ6IDEuNzE0Mjg1NzE7XG59XG4uY29udGVudCB1bCBsaSA+IHVsLFxuLmNvbnRlbnQgb2wgbGkgPiB1bCxcbi5jb250ZW50IHVsIGxpID4gb2wsXG4uY29udGVudCBvbCBsaSA+IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5jb250ZW50IG9sIHtcbiAgbWFyZ2luLWxlZnQ6IDEuNzVlbTtcbn1cbi5jb250ZW50IGltZyxcbi5jb250ZW50IHZpZGVvLFxuLmNvbnRlbnQgaWZyYW1lLFxuLmNvbnRlbnQgLmJyb3dzZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IGNhbGMoMTAwJSArICgxLjJ2dyAqIDIpICsgKDJweCAqIDIpKTtcbiAgbWFyZ2luOiAwIGNhbGMoLTEuMnZ3IC0gMnB4KSAxLjhyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gIC5jb250ZW50IGltZyxcbiAgLmNvbnRlbnQgdmlkZW8sXG4gIC5jb250ZW50IGlmcmFtZSxcbiAgLmNvbnRlbnQgLmJyb3dzZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAtOHZ3O1xuICAgIG1hcmdpbi1yaWdodDogLTh2dztcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDh2dyAqIDIpKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IGltZyxcbiAgLmNvbnRlbnQgdmlkZW8sXG4gIC5jb250ZW50IGlmcmFtZSxcbiAgLmNvbnRlbnQgLmJyb3dzZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAtNHZ3O1xuICAgIG1hcmdpbi1yaWdodDogLTR2dztcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDR2dyAqIDIpKTtcbiAgfVxufVxuLmNvbnRlbnQgaW1nLm5vLWVubGFyZ2UsXG4uY29udGVudCB2aWRlby5uby1lbmxhcmdlLFxuLmNvbnRlbnQgaWZyYW1lLm5vLWVubGFyZ2UsXG4uY29udGVudCAuYnJvd3Nlci5uby1lbmxhcmdlIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aWR0aDogYXV0bztcbn1cbi5jb250ZW50IGJsb2NrcXVvdGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDIuOHJlbTtcbiAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEuMnZ3IC0gMnB4KTtcbiAgZm9udC1zaXplOiA5MCU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgYmxvY2txdW90ZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgPiBwIHtcbiAgcGFkZGluZy1sZWZ0OiAxLjJ2dztcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZDtcbiAgcGFkZGluZy1ib3R0b206IDEuNnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgPiBwOmxhc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgYmxvY2txdW90ZSA+IHAge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg0dncgLSAycHgpO1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyOmJlZm9yZSxcbi5jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyOmFmdGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG4uY29udGVudCBibG9ja3F1b3RlIGZvb3RlcjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuLmNvbnRlbnQgYmxvY2txdW90ZSBjaXRlIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG4uY29udGVudCBibG9ja3F1b3RlIGNpdGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXDI1MDBcXDI1MDBcXDAwYTBcIjtcbn1cbi5jb250ZW50IGhyOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA0cHg7XG4gIGhlaWdodDogNHB4O1xuICBtYXJnaW46IDJlbSBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJveC1zaGFkb3c6IDIwcHggMCAwIDAgIzAwMCwgLTIwcHggMCAwIDAgIzAwMDtcbn1cbi5jb250ZW50IHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xufVxuLmNvbnRlbnQgY29kZSxcbi5jb250ZW50IHByZSB7XG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgbW9ub3NwYWNlO1xuICBjb2xvcjogIzAwY2M4MDtcbn1cbi5jb250ZW50IHAgY29kZSxcbi5jb250ZW50IGxpIGNvZGUge1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG4uY29udGVudCBwcmUge1xuICBwYWRkaW5nOiAxLjJ2dztcbiAgbWFyZ2luLWxlZnQ6IC0xLjJ2dztcbiAgbWFyZ2luLXJpZ2h0OiAtMS4ydnc7XG4gIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgZm9udC1zaXplOiA4MCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjcxNDI4NTcxO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEzNiwgMjU1LCAwLjA0KTtcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAuY29udGVudCBwcmUge1xuICAgIHBhZGRpbmctbGVmdDogOHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDh2dztcbiAgICBtYXJnaW4tbGVmdDogLTh2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC04dnc7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBwcmUge1xuICAgIHBhZGRpbmctbGVmdDogNHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGZvcm0gaW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDF2bWluIDA7XG4gIG1hcmdpbjogMCAwIDEuOHJlbTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBvdXRsaW5lOiBub25lO1xuICB0cmFuc2l0aW9uOiBwYWRkaW5nIC4ycyBlYXNlO1xufVxuLmNvbnRlbnQgZm9ybSBpbnB1dDpmb2N1cyB7XG4gIHBhZGRpbmc6IDF2bWluO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDIpO1xuICBib3JkZXItY29sb3I6ICMwMDA7XG59XG4uY29udGVudCBpbnB1dDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzLFxuLmNvbnRlbnQgdGV4dGFyZWE6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZDpmb2N1cyxcbi5jb250ZW50IHNlbGVjdDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDAsIDE4MCwgMC4wNSk7XG4gIGJvcmRlci1jb2xvcjogI2ZmMDBiNDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cbi5jb250ZW50IHRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIGZvbnQtc2l6ZTogOTAlO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xLjJ2dztcbiAgbWFyZ2luLXJpZ2h0OiAtMS4ydnc7XG4gIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbn1cbi5jb250ZW50IHRhYmxlIHRoLFxuLmNvbnRlbnQgdGFibGUgdGQge1xuICBwYWRkaW5nOiAwLjZlbSAxLjJ2dztcbn1cbi5jb250ZW50IHRhYmxlIHRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNik7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4uY29udGVudCB0YWJsZSB0ZCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xufVxuOmxhbmcoemgpLFxuOmxhbmcoamEpIHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbn1cbjpsYW5nKHpoKSBoZWFkZXIsXG46bGFuZyhqYSkgaGVhZGVyLFxuOmxhbmcoemgpIGhlYWRlciAqLFxuOmxhbmcoamEpIGhlYWRlciAqIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG59XG4ubGVhZGluZy1pbmRlbnQtZml4IHtcbiAgdGV4dC1pbmRlbnQ6IC0wLjM5ZW07XG59XG4ucG9zdC1tb2RpZmllZC1kYXRlIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIG9wYWNpdHk6IC41O1xufVxuLmxhcmdldHlwZSB7XG4gIGZvbnQtc2l6ZTogMzMwJTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDZlbTtcbiAgZm9udC1zaXplOiAyMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxLjhyZW0gIWltcG9ydGFudDtcbn1cbi5icm93c2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSwgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmJyb3dzZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIH1cbn1cbi5icm93c2VyOmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA4cHg7XG4gIGxlZnQ6IDEwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogOHB4O1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogI2ZjZGRkZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjb250ZW50OiBcIlwiO1xuICBib3gtc2hhZG93OiAxNnB4IDAgMCAwIHJnYmEoMjU0LCAyNDAsIDIwMywgMC45NiksIDMycHggMCAwIDAgcmdiYSgxNzcsIDI0NywgMTg1LCAwLjk2KSwgMCAwIDAgMXB4IHJnYmEoMTU2LCAxMSwgMjEsIDAuMyksIDE2cHggMCAwIDFweCByZ2JhKDE0NywgMTA4LCA0LCAwLjMpLCAzMnB4IDAgMCAxcHggcmdiYSgxMSwgMTA3LCAyMiwgMC4zKTtcbn1cbi5icm93c2VyIGltZyB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDAgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjA1KTtcbn1cbi5zY3JlZW5zaG90LW1hYyB7XG4gIG1hcmdpbi1sZWZ0OiAtNTZweDtcbiAgbWFyZ2luLXJpZ2h0OiAtNTZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpLCAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuc2NyZWVuc2hvdC1tYWMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuLm5vdGUsXG4uc3RvcmUsXG4uZG93bmxvYWQge1xuICBwYWRkaW5nLWxlZnQ6IDEuMnZ3O1xuICBtYXJnaW4tbGVmdDogY2FsYygtMS4ydncgLSAycHgpO1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZjAwYjQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLm5vdGUsXG4gIC5zdG9yZSxcbiAgLmRvd25sb2FkIHtcbiAgICBwYWRkaW5nLWxlZnQ6IGNhbGMoNHZ3IC0gMnB4KTtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0dnc7XG4gICAgbWFyZ2luLWxlZnQ6IC00dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNHZ3O1xuICB9XG59XG4uZm9vdG5vdGVzIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG4uZm9vdG5vdGVzOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA0cHg7XG4gIGhlaWdodDogNHB4O1xuICBtYXJnaW46IDJlbSBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJveC1zaGFkb3c6IDIwcHggMCAwIDAgIzAwMCwgLTIwcHggMCAwIDAgIzAwMDtcbn1cbjp0YXJnZXQgW3Jldj1mb290bm90ZV0sXG46dGFyZ2V0IFtyZWw9Zm9vdG5vdGVdLFxuOnRhcmdldCAucmV2ZXJzZWZvb3Rub3RlLFxuOnRhcmdldCAuZm9vdG5vdGUge1xuICBjb2xvcjogI2ZmMDBiNDtcbn1cbi5saXN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCAwIC40cmVtO1xufVxuLmxpc3QgaDEge1xuICBmb250LXNpemU6IDMzMCU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjA2ZW07XG4gIGZvbnQtc2l6ZTogMjAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgb3BhY2l0eTogMTtcbiAgbWFyZ2luOiAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5saXN0IGgxIHtcbiAgICBmb250LXNpemU6IDE4MCU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAubGlzdCAuZXh0ZXJuYWwge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5leHRlcm5hbCAuZG90IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogLjdyZW07XG4gIGhlaWdodDogLjdyZW07XG4gIG1hcmdpbjogMCAuMWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMgZWFzZTtcbn1cbi5leHRlcm5hbCAuZG90LS1wb3N0IHtcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG59XG4uZXh0ZXJuYWw6aG92ZXIgLmRvdCxcbi5leHRlcm5hbDpmb2N1cyAuZG90IHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xufVxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDAgMCAxNnZtaW47XG4gIGZvbnQtc2l6ZTogNzUlO1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xufVxuLmZvb3RlciB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cbi5mb290ZXIgdWwgbGk6YWZ0ZXIge1xuICBwYWRkaW5nOiAwIC42dnc7XG4gIGNvbnRlbnQ6IFwiIC8gXCI7XG4gIG9wYWNpdHk6IC4zO1xufVxuLmZvb3RlciB1bCBsaTpsYXN0LWNoaWxkOmFmdGVyIHtcbiAgY29udGVudDogbm9uZTtcbn1cbi5sb2FkZWQgLmludGVuc2Utd3JhcCBhcnRpY2xlIHAgPiBpbWc6bm90KC5uby1pbnRlbnNlKSB7XG4gIGN1cnNvcjogem9vbS1pbjtcbn1cbi5sb2FkZWQuaW50ZW5zZS1vcGVuIHtcbiAgY3Vyc29yOiB6b29tLW91dDtcbn1cbi5naXN0IHtcbiAgZm9udC1zaXplOiA4MCUgIWltcG9ydGFudDtcbn1cbi5naXN0IGNvZGUsXG4uZ2lzdCBwcmUge1xuICBwYWRkaW5nOiAwO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4uZ2lzdCAuZ2lzdC1kYXRhIHtcbiAgZm9udC1mYW1pbHk6IE1lbmxvLCBtb25vc3BhY2UgIWltcG9ydGFudDtcbn1cbi5naXN0IC5naXN0LWRhdGEgLmZpbGUtZGF0YSB7XG4gIGZvbnQtc2l6ZTogMTAwJSAhaW1wb3J0YW50O1xufVxuLmdpc3QgLmdpc3QtZGF0YSAuZmlsZS1kYXRhID4gdGFibGUge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uZ2lzdCAuaGlnaGxpZ2h0IHtcbiAgZm9udC1zaXplOiA5MCUgIWltcG9ydGFudDtcbn1cbi5naXN0IC5tYXJrZG93bi1ib2R5IHtcbiAgZm9udC1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDFlbSAhaW1wb3J0YW50O1xufVxuQG1lZGlhIHByaW50IHtcbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBib2R5IHtcbiAgICBwYWRkaW5nOiAxMG1tICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCxcbiAgLmNvbnRlbnQgLnBhZ2UtY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCBhW2hyZWZdOmFmdGVyLFxuICAuY29udGVudCAucGFnZS1jb250ZW50IGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIH1cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgLmNvbnRlbnQgLnBhZ2UtY29udGVudCBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQgYWJiclt0aXRsZV06YWZ0ZXIsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgcCxcbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG4gIC5uYXZpZ2F0aW9uLFxuICAuZm9vdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4vKiFcbiAqIFJhbmRvbWl6ZWRcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUgVHVuZ2hzaWFvIExpdVxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vc3BhcmFub2lkL3JhbmRvbWl6ZWQvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqL1xuLmhpZ2hsaWdodCA+IHByZSxcbi5oaWdobGlnaHRlci1yb3VnZSAuaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZDogcmdiYSg3NywgMCwgNTQsIDAuMDE1KTtcbn1cbi5oaWdobGlnaHQgY29kZSB7XG4gIGNvbG9yOiAjODY3OTgyO1xufVxuLmhpZ2hsaWdodCAuZXJyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDAsIDE4MCwgMC4xKTtcbn1cbi5oaWdobGlnaHQgLmMge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5jbSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLmNwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5jMSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLmNzIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLm5jIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5uZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAubmYge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLm8ge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5ncyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAuZ2Uge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5rIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5rdCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAua2Mge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmtkIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5rcCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAua3Ige1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmVyciB7XG4gIGNvbG9yOiAjMzNhMzk5O1xufVxuLmhpZ2hsaWdodCAueCB7XG4gIGNvbG9yOiAjMzNhM2E4O1xufVxuLmhpZ2hsaWdodCAubiB7XG4gIGNvbG9yOiAjMzNhM2I2O1xufVxuLmhpZ2hsaWdodCAubmEge1xuICBjb2xvcjogIzMzYTNjNTtcbn1cbi5oaWdobGlnaHQgLm5iIHtcbiAgY29sb3I6ICMzMzk3Yzc7XG59XG4uaGlnaGxpZ2h0IC5icCB7XG4gIGNvbG9yOiAjMzM4OGM3O1xufVxuLmhpZ2hsaWdodCAubmMge1xuICBjb2xvcjogIzMzN2FjNztcbn1cbi5oaWdobGlnaHQgLm5vIHtcbiAgY29sb3I6ICMzMzZiYzc7XG59XG4uaGlnaGxpZ2h0IC5uZCB7XG4gIGNvbG9yOiAjMzM1Y2M3O1xufVxuLmhpZ2hsaWdodCAubmkge1xuICBjb2xvcjogIzMzNGVjNztcbn1cbi5oaWdobGlnaHQgLm5lIHtcbiAgY29sb3I6ICMzMzNmYzc7XG59XG4uaGlnaGxpZ2h0IC5uZiB7XG4gIGNvbG9yOiAjMzMzMWM3O1xufVxuLmhpZ2hsaWdodCAubmwge1xuICBjb2xvcjogIzMzMjJjNztcbn1cbi5oaWdobGlnaHQgLm5uIHtcbiAgY29sb3I6ICMzMzEzYzc7XG59XG4uaGlnaGxpZ2h0IC5ueCB7XG4gIGNvbG9yOiAjMzMwNWM3O1xufVxuLmhpZ2hsaWdodCAubnQge1xuICBjb2xvcjogIzNkMDBjNztcbn1cbi5oaWdobGlnaHQgLm52IHtcbiAgY29sb3I6ICM0YjAwYzc7XG59XG4uaGlnaGxpZ2h0IC52YyB7XG4gIGNvbG9yOiAjNWEwMGM3O1xufVxuLmhpZ2hsaWdodCAudmcge1xuICBjb2xvcjogIzY5MDBjNztcbn1cbi5oaWdobGlnaHQgLnZpIHtcbiAgY29sb3I6ICM3NzAwYzc7XG59XG4uaGlnaGxpZ2h0IC5nIHtcbiAgY29sb3I6ICM4NjAwYzc7XG59XG4uaGlnaGxpZ2h0IC5nZCB7XG4gIGNvbG9yOiAjOTUwMGM3O1xufVxuLmhpZ2hsaWdodCAuZ2Uge1xuICBjb2xvcjogI2EzMDBjNztcbn1cbi5oaWdobGlnaHQgLmdyIHtcbiAgY29sb3I6ICNiMjAwYzc7XG59XG4uaGlnaGxpZ2h0IC5naCB7XG4gIGNvbG9yOiAjYzAwMGM3O1xufVxuLmhpZ2hsaWdodCAuZ2kge1xuICBjb2xvcjogI2NmMDBjNztcbn1cbi5oaWdobGlnaHQgLmdvIHtcbiAgY29sb3I6ICNkNjAwYzA7XG59XG4uaGlnaGxpZ2h0IC5ncCB7XG4gIGNvbG9yOiAjZDYwMGIxO1xufVxuLmhpZ2hsaWdodCAuZ3Mge1xuICBjb2xvcjogI2Q2MDBhMztcbn1cbi5oaWdobGlnaHQgLmd1IHtcbiAgY29sb3I6ICNkNjAwOTQ7XG59XG4uaGlnaGxpZ2h0IC5ndCB7XG4gIGNvbG9yOiAjZDYwMDg1O1xufVxuLmhpZ2hsaWdodCAuZ2wge1xuICBjb2xvcjogI2Q2MDA3Nztcbn1cbi5oaWdobGlnaHQgLmsge1xuICBjb2xvcjogI2Q2MDA2ODtcbn1cbi5oaWdobGlnaHQgLmtjIHtcbiAgY29sb3I6ICNkNjAwNTk7XG59XG4uaGlnaGxpZ2h0IC5rZCB7XG4gIGNvbG9yOiAjZDYwMDRiO1xufVxuLmhpZ2hsaWdodCAua24ge1xuICBjb2xvcjogI2Q2MDAzYztcbn1cbi5oaWdobGlnaHQgLmtwIHtcbiAgY29sb3I6ICNkNjAwMmU7XG59XG4uaGlnaGxpZ2h0IC5rciB7XG4gIGNvbG9yOiAjZDYwNTI0O1xufVxuLmhpZ2hsaWdodCAua3Qge1xuICBjb2xvcjogI2Q2MTQyNDtcbn1cbi5oaWdobGlnaHQgLmt2IHtcbiAgY29sb3I6ICNkNjIyMjQ7XG59XG4uaGlnaGxpZ2h0IC53IHtcbiAgY29sb3I6ICNkNjMxMjQ7XG59XG4uaGlnaGxpZ2h0IC5sIHtcbiAgY29sb3I6ICNkNjNmMjQ7XG59XG4uaGlnaGxpZ2h0IC5sZCB7XG4gIGNvbG9yOiAjZDY0ZTI0O1xufVxuLmhpZ2hsaWdodCAucyB7XG4gIGNvbG9yOiAjZDY1ZDI0O1xufVxuLmhpZ2hsaWdodCAuc2Ige1xuICBjb2xvcjogI2Q2NmIyNDtcbn1cbi5oaWdobGlnaHQgLnNjIHtcbiAgY29sb3I6ICNkNjdhMjQ7XG59XG4uaGlnaGxpZ2h0IC5zZCB7XG4gIGNvbG9yOiAjZDY4OTI0O1xufVxuLmhpZ2hsaWdodCAuczIge1xuICBjb2xvcjogI2Q2OTcyNDtcbn1cbi5oaWdobGlnaHQgLnNlIHtcbiAgY29sb3I6ICNkNGEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5zaCB7XG4gIGNvbG9yOiAjYzVhMzI0O1xufVxuLmhpZ2hsaWdodCAuc2kge1xuICBjb2xvcjogI2I2YTMyNDtcbn1cbi5oaWdobGlnaHQgLnN4IHtcbiAgY29sb3I6ICNhOGEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5zciB7XG4gIGNvbG9yOiAjOTlhMzI0O1xufVxuLmhpZ2hsaWdodCAuczEge1xuICBjb2xvcjogIzhiYTMyNDtcbn1cbi5oaWdobGlnaHQgLnNzIHtcbiAgY29sb3I6ICM3Y2EzMjQ7XG59XG4uaGlnaGxpZ2h0IC5tIHtcbiAgY29sb3I6ICM2ZGEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5tZiB7XG4gIGNvbG9yOiAjNWZhMzI0O1xufVxuLmhpZ2hsaWdodCAubWgge1xuICBjb2xvcjogIzUwYTMyNDtcbn1cbi5oaWdobGlnaHQgLm1pIHtcbiAgY29sb3I6ICM0MmEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5pbCB7XG4gIGNvbG9yOiAjMzNhMzI0O1xufVxuLmhpZ2hsaWdodCAubW8ge1xuICBjb2xvcjogIzMzYTMzMztcbn1cbi5oaWdobGlnaHQgLm1iIHtcbiAgY29sb3I6ICMzM2EzNDE7XG59XG4uaGlnaGxpZ2h0IC5teCB7XG4gIGNvbG9yOiAjMzNhMzUwO1xufVxuLmhpZ2hsaWdodCAubyB7XG4gIGNvbG9yOiAjMzNhMzVmO1xufVxuLmhpZ2hsaWdodCAub3cge1xuICBjb2xvcjogIzMzYTM2ZDtcbn1cbi5oaWdobGlnaHQgLnAge1xuICBjb2xvcjogIzMzYTM3Yztcbn1cbi5oaWdobGlnaHQgLnBpIHtcbiAgY29sb3I6ICMzM2EzOGE7XG59XG4uaGlnaGxpZ2h0IC5jIHtcbiAgY29sb3I6ICM1YTU1ODk7XG4gIG9wYWNpdHk6IC42O1xufVxuLmhpZ2hsaWdodCAuY2Qge1xuICBjb2xvcjogIzdjNDA4OTtcbiAgb3BhY2l0eTogLjY7XG59XG4uaGlnaGxpZ2h0IC5jbSB7XG4gIGNvbG9yOiAjOTE0MDY3O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmNwIHtcbiAgY29sb3I6ICM5MTYzNTI7XG4gIG9wYWNpdHk6IC42O1xufVxuLmhpZ2hsaWdodCAuYzEge1xuICBjb2xvcjogIzZlNzc1MjtcbiAgb3BhY2l0eTogLjY7XG59XG4uaGlnaGxpZ2h0IC5jcyB7XG4gIGNvbG9yOiAjNWE3Nzc1O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgdGFibGUsXG4uaGlnaGxpZ2h0IHRhYmxlIHRoLFxuLmhpZ2hsaWdodCB0YWJsZSB0ZCxcbi5oaWdobGlnaHQgdGFibGUgdGQgcHJlIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBmb250LXNpemU6IDEwMCU7XG59XG4uaGlnaGxpZ2h0IHRhYmxlIC5saW5lbm8ge1xuICBjb2xvcjogIzg2Nzk4MjtcbiAgb3BhY2l0eTogLjU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuLmhpZ2hsaWdodCB0YWJsZSAuY29kZSB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xufVxuLmNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxMHZtaW47XG59XG4uY29udGVudCBoMiB7XG4gIGZvbnQtc2l6ZTogMTA4JTtcbiAgb3BhY2l0eTogLjg7XG59XG4uY29udGVudCBoMyB7XG4gIGZvbnQtc2l6ZTogOTYlO1xuICBvcGFjaXR5OiAuNztcbn1cbi5jb250ZW50IGg0IHtcbiAgZm9udC1zaXplOiA4NCU7XG4gIG9wYWNpdHk6IC42O1xufVxuLmNvbnRlbnQgaDUge1xuICBmb250LXNpemU6IDcyJTtcbiAgb3BhY2l0eTogLjU7XG59XG4uY29udGVudCBoNiB7XG4gIGZvbnQtc2l6ZTogNjAlO1xuICBvcGFjaXR5OiAuNDtcbn1cbi5jb250ZW50IGgyLFxuLmNvbnRlbnQgaDMsXG4uY29udGVudCBoNCxcbi5jb250ZW50IGg1LFxuLmNvbnRlbnQgaDYge1xuICBtYXJnaW46IDZ2bWluIDAgMXJlbTtcbn1cbi5jb250ZW50IGhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiA4dm1pbjtcbn1cbi5uYXZpZ2F0aW9uIHtcbiAgbWFyZ2luOiAwIDAgMTB2bWluO1xufVxuLnBhcmVudC1saW5rIHtcbiAgc3Ryb2tlOiAjODg4O1xuICBzdHJva2Utd2lkdGg6IDFweDtcbn1cbi5jaGlsZHJlbi1saW5rIHtcbiAgc3Ryb2tlOiAjYWFhO1xuICBzdHJva2Utd2lkdGg6IDAuNXB4O1xufVxuLmltZy1waG9uZSB7XG4gIHdpZHRoOiBpbmhlcml0O1xuICBtYXJnaW46IGluaGVyaXQ7XG59XG4uYW1zZi1sb2dvIHtcbiAgd2lkdGg6IDgwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuLmFtc2YtdGl0bGUge1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICBsaW5lLWhlaWdodDogMCAhaW1wb3J0YW50O1xufVxuLypcbioge1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cbiovXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWw5aGNIQXZZWE56WlhSekwzUm9aVzFsY3k5amRYSjBZVzVoTDE5c1pYTnpMMjFwZUdsdWN5NXNaWE56SWl3aVgyRndjQzloYzNObGRITXZkR2hsYldWekwyTjFjblJoYm1FdlgyeGxjM012Y21WelpYUXViR1Z6Y3lJc0lsOWhjSEF2WVhOelpYUnpMMTlzWlhOekwzVnpaWEl1YkdWemN5SXNJbDloY0hBdllYTnpaWFJ6TDNSb1pXMWxjeTlqZFhKMFlXNWhMMTlzWlhOekwyTnZiVzF2Ymk1c1pYTnpJaXdpWDJGd2NDOWhjM05sZEhNdmRHaGxiV1Z6TDJOMWNuUmhibUV2WDJ4bGMzTXZjR3gxWjJsdWN5NXNaWE56SWl3aVgyRndjQzloYzNObGRITXZkR2hsYldWekwyTjFjblJoYm1FdlgyeGxjM012Y0hKcGJuUXViR1Z6Y3lJc0lsOWhjSEF2WVhOelpYUnpMM1JvWlcxbGN5OWpkWEowWVc1aEwxOXNaWE56TDJOdmJYQnZibVZ1ZEhNdmNtRnVaRzl0YVhwbFpDNXNaWE56SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3T3pzN096dEJRVlZGTEVkQlFVTTdRVUZCVXl4SFFVRkRPMFZCUTFRc1kwRkJRVHRGUVVOQkxGTkJRVk1zUlVGQlZEczdRVUZIUml4SFFVRkRPMFZCUTBNc1YwRkJRVHM3UVVOYVNqdEJRVU5CTEVOQlFVTTdRVUZEUkN4RFFVRkRPMFZCUTBNc1ZVRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeHpRa0ZCUVRzN1FVRkhSanRGUVVORkxHVkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR0ZETkVKeFFpeHJRa0ZCYTBJc2NVTkVOVUoyUXp0RlFVTkJMR2RDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc2EwTkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR2REUVVGQk8wVkJRMEVzZDBKQlFVRTdPMEZCVDBFc1VVRk1iVU03UlVGM1JuSkRPMGxFT1VWRkxHbENRVUZCTzBsQlEwRXNhMEpCUVVFN1NVTlVSU3hwUWtGQlFUczdPMEZCVVVZc1VVRk1iVU03UlVGdFJuSkRPMGxFT1VWRkxHbENRVUZCTzBsQlEwRXNhMEpCUVVFN1NVTktSU3hwUWtGQlFUczdPMEZCVVVZc1VVRk1iVU03UlVFNFJYSkRPMGxCTjBWSkxHbENRVUZCT3pzN1FVRlRSaXhSUVV4blF5d3lRa0ZCTmtJN1JVRjVSUzlFTzBsQmVFVkpMRGhDUVVGQk96czdRVUZKUml4SlFVRkRPMFZCUTBNc2EwSkJRVUU3UlVGRFFTeE5RVUZCTzBWQlEwRXNUMEZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeFRRVUZUTEVWQlFWUTdSVUZEUVN4WFFVRkJPenRCUVV0S08wRkJRMEU3UVVGRFFUdEJRVU5CTzBWQlEwVXNiMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEc5Q1FVRkJPenRCUVV0R08wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNDdSVUZEUlN4elFrRkJRVHM3UVVGSlJqdEJRVUZITzBWQlEwUXNWMEZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzTkVaQlFVRTdPMEZCUlVFc1EwRkJRenRCUVVGRUxFMUJRVU03UVVGRFJDeERRVUZETzBGQlFVUXNUVUZCUXp0RlFVTkRMRFJHUVVGQk8wVkJRMEVzTUVKQlFVRTdSVUZEUVN4NVFrRkJRVHM3UVVGSFJpeERRVUZETzBGQlFVUXNUVUZCUXp0RlFVTkRMRmRCUVVFN1JVRkRRU3h0UWtGQlFUczdRVUZKU2p0QlFVRkxPMFZCUTBnc1UwRkJRVHM3UVVGSFJqdEZRVU5GTERaQ1FVRkJPenRCUVVkR08wVkJRMFVzYTBOQlFVRTdPMEZCUjBZN1JVRkRSU3hYUVVGQk8wVkJRMEVzVjBGQlFUczdRVVY2UjBZN1JVRkRSU3hqUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeFZRVUZCT3p0QlFVVkJMRXRCUVVNN1FVRkRSQ3hMUVVGRE8wVkJRME1zT0VKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxGVkJRVUU3TzBGQldFb3NTMEZqUlR0RlFVTkZMRk5CUVVFN1JVRkRRU3h4UWtGQlFUczdRVUZMU2p0RlFVTkZMR3RDUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzZVVKQlFVRTdPMEZCVUVZc1YwRlRSVHRGUVVORkxIRkNRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMR2RDUVVGQk96dEJRVnBLTEZkQlUwVXNSMEZMUlR0RlFVTkZMRzFDUVVGQk96dEJRVVZCTEZkQlVrb3NSMEZMUlN4RlFVZEhPMEZCUTBRc1YwRlVTaXhIUVV0RkxFVkJTVWM3UlVGRFF5eGpRVUZCTzBWQlEwRXNjVUpCUVVFN08wRkJUMUlzVVVGRlJUdEZRVU5GTEdOQlFVRTdPMEZCUzBvc1NVRkJTU3hOUVVGUE8wVkJRMVFzWTBGQlFUczdRVUZKUml4UlFVRlRPMFZCUTFBc2FVSkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNhVUpCUVVFN08wRkJSVUVzVVVGTVR5eFJRVXRPTzBWQlJVTXNjVUpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc09FSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRk5CUVZNc1JVRkJWRHM3UVVGTFFTeFJRV3hDU3l4UlFXZENUaXhWUVVWRk8wVkJRME1zWjBKQlFVRTdPMEZCU0Vvc1VVRm9RazhzVVVGblFrNHNWVUZOUXp0RlFVTkZMRmRCUVVFN08wRkJUVVlzVVVFM1Frc3NVVUV5UWs0c1dVRkZSVHRGUVVORExHZENRVUZCT3p0QlFVaEtMRkZCTTBKUExGRkJNa0pPTEZsQlRVTTdSVUZEUlN4WFFVRkJPenRCUVUxT08wVkJRMFVzY1VKQlFVRTdPMEZJYWtkQkxGRkJRVU03UVVGQlV5eFJRVUZETzBWQlExUXNZMEZCUVR0RlFVTkJMRk5CUVZNc1JVRkJWRHM3UVVGSFJpeFJRVUZETzBWQlEwTXNWMEZCUVRzN1FVY3dSa29zVVVGUFJTeFJRVWRGTEVsQlFVYzdSVUZEUkN3eVFrRkJRVHM3UVVGWVRpeFJRVTlGTEZGQlIwVXNTVUZCUnl4WFFVbEVMRWxCUVVjN1JVRkRSQ3d5UWtGQlFUczdRVUZtVWl4UlFVOUZMRkZCUjBVc1NVRkJSeXhYUVVsRUxFbEJRVWNzVjBGSlJDeEpRVUZITzBWQlEwUXNNa0pCUVVFN08wRkJia0pXTEZGQlQwVXNVVUZIUlN4SlFVRkhMRmRCU1VRc1NVRkJSeXhYUVVsRUxFbEJRVWNzVjBGSlJDeEpRVUZITzBWQlEwUXNNa0pCUVVFN08wRkJka0phTEZGQkswSkZMR05CUjBVc1NVRkJSenRCUVd4RFVDeFJRV2REUlN4alFVVkZMRWxCUVVjN1JVRkRSQ3hoUVVGQk96dEJRVzVEVGl4UlFTdENSU3hqUVVkRkxFbEJRVWNzV1VGSFJDeEpRVUZITzBGQmNrTlVMRkZCWjBORkxHTkJSVVVzU1VGQlJ5eFpRVWRFTEVsQlFVYzdSVUZEUkN4aFFVRkJPenRCUVhSRFVpeFJRVEpEUlR0RlFVTkZMR2xDUVVGQk96dEJRVFZEU2l4UlFTdERSVHRGUVVORkxIRkNRVUZCTzBWQlEwRXNkVUpCUVVFN08wRkJha1JLTEZGQmIwUkZPMFZCUTBVc2MwSkJRVUU3TzBGQmNrUktMRkZCYjBSRkxFOUJSMFU3UlVGRFJTeG5Ra0ZCUVR0RlNEZEpTaXhsUVVGQk8wVkJRMEVzYlVOQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIVkNRVUZCTzBWSE5FbEpMR0ZCUVVFN1JVRkRRU3huUWtGQlFUczdRVUZQUVN4UlFVeHRRenRGUVhOamVrTXNVVUV2WTBVc1QwRkhSVHRKUVZGSkxHVkJRVUU3T3p0QlFTOUVVaXhSUVc5RVJTeFBRVWRGTEVkQlYwVTdSVUZEUlN4alFVRkJPMFZCUTBFc1pVRkJRVHM3UVVGd1JWSXNVVUZ2UkVVc1QwRkhSU3hIUVdsQ1JUdEJRWGhGVGl4UlFXOUVSU3hQUVVkRkxFZEJhMEpGTzBWQlJVVXNZMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3h0UWtGQlFUczdRVUZOUml4UlFVcHhRenRGUVc5aU0wTXNVVUV2WTBVc1QwRkhSU3hIUVdsQ1JUdEZRVEppVGl4UlFTOWpSU3hQUVVkRkxFZEJhMEpGTzBsQlQwa3NjMEpCUVVFN1NVRkRRU3gxUWtGQlFUczdPMEZCYWtaV0xGRkJiMFJGTEU5QmJVTkZPMFZCUTBVc2MwSkJRVUU3UlVGRFFTeGpRVUZCT3p0QlFYcEdUaXhSUVc5RVJTeFBRWGREUlR0RlFVTkZMR3RDUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc1owSkJRVUU3TzBGQmFFZE9MRkZCYjBSRkxFOUJkME5GTEdGQlRVVTdSVUZEUlN4cFFrRkJRVHM3UVVGdVIxSXNVVUZ2UkVVc1QwRnRSRVU3UlVGRFJTeGpRVUZCTzBWQlEwRXNhVUpCUVVFN08wRkJla2RPTEZGQk5rZEZPMEZCTjBkR0xGRkJPRWRGTzBGQk9VZEdMRkZCSzBkRk8wRkJMMGRHTEZGQlowaEZPMEZCYUVoR0xGRkJhVWhGTzBWQlEwVXNjVUpCUVVFN1JVaG9UVVlzWTBGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc1YwRkJRVHM3UVVjMFJVWXNVVUZ6U0VVN1FVRjBTRVlzVVVGMVNFVTdSVUZEUlN4eFFrRkJRVHRGUVVOQkxHdENRVUZCT3p0QlFYcElTaXhSUVhOSVJTeEhRVXRGTzBGQk0waEtMRkZCZFVoRkxFZEJTVVU3UlVGRFJTeDFRa0ZCUVRzN1FVRTFTRTRzVVVGelNFVXNSMEZMUlN4SFFVZEZPMEZCT1VoT0xGRkJkVWhGTEVkQlNVVXNSMEZIUlR0QlFUbElUaXhSUVhOSVJTeEhRVXRGTEVkQlNVVTdRVUV2U0U0c1VVRjFTRVVzUjBGSlJTeEhRVWxGTzBWQlEwVXNaMEpCUVVFN08wRkJhRWxTTEZGQmNVbEZPMFZCUTBVc2JVSkJRVUU3TzBGQmRFbEtMRkZCZVVsRk8wRkJla2xHTEZGQk1FbEZPMEZCTVVsR0xGRkJNa2xGTzBGQk0wbEdMRkZCTkVsRk8wVkJRMFVzWTBGQlFUdEZRVU5CTEU5QlFVOHNiME5CUVZBN1JVRkRRU3hWUVVGVkxIbENRVUZXT3p0QlFVOUJMRkZCVEcxRE8wVkJhMWgyUXl4UlFURllSVHRGUVRCWVJpeFJRWHBZUlR0RlFYbFlSaXhSUVhoWVJUdEZRWGRZUml4UlFYWllSVHRKU0M5TlFTeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk8wbEhjVTVKTEU5QlFVOHNjMEpCUVZBN096dEJRVk5HTEZGQlRtMURPMFZCTmxkMlF5eFJRVEZZUlR0RlFUQllSaXhSUVhwWVJUdEZRWGxZUml4UlFYaFlSVHRGUVhkWVJpeFJRWFpZUlR0SlNDOU5RU3hwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPMGxITUU1SkxFOUJRVThzYzBKQlFWQTdPenRCUVVsR0xGRkJia0pHTEVsQmJVSkhPMEZCUVVRc1VVRnNRa1lzVFVGclFrYzdRVUZCUkN4UlFXcENSaXhQUVdsQ1J6dEJRVUZFTEZGQmFFSkdMRk5CWjBKSE8wVkJRME1zWTBGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1YwRkJRVHM3UVVGb1MwNHNVVUZ2UzBVN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEhGQ1FVRkJPMFZCUTBFc1lVRkJZU3hyUWtGQllqdEZRVU5CTEdOQlFVRTdPMEZCVFVFc1VVRktiVU03UlVGNVZuWkRMRkZCTDFaRk8wbEJUMGtzWTBGQlFUczdPMEZCTTB0T0xGRkJiMHRGTEZkQlZVVTdSVUZEUlN4dFFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlNVRXNjMEpCUVVFN1JVRkZRU3huUWtGQlFUczdRVUZIUVN4UlFYSkNTaXhYUVZWRkxFbEJWMGM3UlVGRFF5eHBRa0ZCUVR0RlFVTkJMSEZDUVVGQk96dEJRVTlLTEZGQlNuRkRPMFZCY1ZWNlF5eFJRUzlXUlN4WFFWVkZPMGxJZEZCR0xHTkhkVkZ6UWl4bFNIWlJkRUk3U1VGRFFTeHJRa0ZCUVR0SlFVbEJMR2xDUVVGQk8wbEJRMEVzYTBKQlFVRTdPenRCUVRsQ1FTeFJSMjlSUVN4WFFXZERSU3hQU0hCVFJEdEJRVUZUTEZGSGIxRldMRmRCWjBORkxFOUljRk5UTzBWQlExUXNZMEZCUVR0RlFVTkJMRk5CUVZNc1JVRkJWRHM3UVVGSFJpeFJSeXRRUVN4WFFXZERSU3hQU0M5U1JEdEZRVU5ETEZkQlFVRTdPMEZITUVaS0xGRkJiMHRGTEZkQmIwTkZPMFZCUTBVc1dVRkJRVHRGUVVOQkxHdENRVUZCT3p0QlFVVkJMRkZCZUVOS0xGZEJiME5GTEV0QlNVYzdSVUZGUXl4VFFVRlRMR2xDUVVGVU96dEJTSHBSVGl4UlJ6aFJRU3hIU0RsUlF6dEZRVU5ETEdOQlFVRTdSVUZEUVN4VFFVRlRMRVZCUVZRN1JVRkRRU3hWUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRFpEUVVGQk96dEJSMjFFU2l4UlFYVk9SVHRGUVVORkxHTkJRVUU3TzBGQmVFNUtMRkZCTWs1Rk8wRkJNMDVHTEZGQk5FNUZPMFZCUTBVc05rSkJRVUU3UlVGRFFTeGpRVUZCT3p0QlFUbE9TaXhSUVd0UFJTeEZRVUZGTzBGQmJFOUtMRkZCYlU5RkxFZEJRVWM3UlVGRFJDeHhRa0ZCUVRzN1FVRndUMG9zVVVGMVQwVTdSVUZEUlN4alFVRkJPMFZJTTFOR0xHMUNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVYzBVMFVzY1VKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeDFRa0ZCUVR0RlFVTkJMRzFEUVVGQk8wVkJSVUVzYVVOQlFVRTdPMEZCVDBFc1VVRk1iVU03UlVGcFVuWkRMRkZCTlZKRk8wbElMMU5CTEdsQ1FVRkJPMGxCUTBFc2EwSkJRVUU3U1VGSlFTeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk96czdRVWMyVkVFc1VVRktjVU03UlVFMFVYWkRMRkZCTlZKRk8wbElMMU5CTEdsQ1FVRkJPMGxCUTBFc2EwSkJRVUU3U1VGSlFTeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk96czdRVWRyUlVZc1VVRTRVRVVzUzBGRlJUdEZRVU5GTEdOQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3d5UTBGQlFUdEZRVVZCTEdkQ1FVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxEUkNRVUZCT3p0QlFVVkJMRkZCWkVvc1MwRkZSU3hOUVZsSE8wVkJRME1zWTBGQlFUdEZRVU5CTEN0Q1FVRkJPMFZCUTBFc2EwSkJRVUU3TzBGQldVWXNVVUZPU2l4TlFVbEhMRTFCUVUwc1UwRkJVeXhSUVVWaU8wRkJRVVFzVVVGTVNpeFRRVWRITEUxQlFVMHNVMEZCVXl4UlFVVmlPMEZCUVVRc1VVRktTaXhQUVVWSExFMUJRVTBzVTBGQlV5eFJRVVZpTzBWQlEwTXNiVU5CUVVFN1JVRkRRU3h4UWtGQlFUdEZRVVZCTEdkQ1FVRkJPenRCUVM5U1VpeFJRVzlUUlR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc1YwRkJRVHRGU0ROWFJpeHRRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkhORmRGTEhGQ1FVRkJPenRCUVRGVFNpeFJRVzlUUlN4TlFWRkZPMEZCTlZOS0xGRkJiMU5GTEUxQlUwVTdSVUZEUlN4dlFrRkJRVHM3UVVFNVUwNHNVVUZ2VTBVc1RVRmhSVHRGUVVORkxEUkRRVUZCTzBWQlJVRXNaMEpCUVVFN08wRkJjRlJPTEZGQmIxTkZMRTFCYlVKRk8wVkJRMFVzZVVOQlFVRTdPMEZCVFU0c1MwRkJTenRCUVVOTUxFdEJRVXM3UlVGRFNDeHRRa0ZCUVRzN1FVRkpSU3hMUVU1RExFbEJTVWc3UVVGRlJTeExRVXhETEVsQlIwZzdRVUZIUlN4TFFWQkRMRWxCU1Vnc1QwRkhTVHRCUVVGR0xFdEJUa01zU1VGSFNDeFBRVWRKTzBWQlEwRXNhVUpCUVVFN08wRkJUVTQ3UlVGRFJTeHZRa0ZCUVRzN1FVRkpSanRGUVVORkxHTkJRVUU3UlVGRFFTeFhRVUZCT3p0QlFVbEdPMFZJTldGRkxHVkJRVUU3UlVGRFFTeHRRMEZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVWN5WVVFc1pVRkJRVHRGUVVOQkxHZERRVUZCT3p0QlFVbEdPMFZCUTBVc2EwSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMRzlEUVVGQk8wVkJRMEVzTUVKQlFVRTdSVUZEUVN4NVEwRkJRVHM3UVVGUFFTeFJRVXByUXl4eFFrRkJPRUk3UlVFMlNteEZPMGxCTlVwSkxHZENRVUZCT3pzN1FVRkhSaXhSUVVGRE8wVkJRME1zYTBKQlFVRTdSVUZEUVN4UlFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4VFFVRlRMRVZCUVZRN1JVRkRRU3hyVFVGQlFUczdRVUYwUWtvc1VVRXJRa1U3UlVGRlJTeGpRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzTUVOQlFVRTdPMEZCUzBvN1JVZ3pZMFVzYTBKQlFVRTdSVUZEUVN4dFFrRkJRVHM3UVVkcFpFWXNVVUZJYjBNc2NVSkJRVGhDTzBWQmRVaHNSVHRKU0hSclFrVXNZMEZCUVR0SlFVTkJMR1ZCUVVFN096dEJSMjlrUmp0QlFVTkJPMEZCUTBFN1JVRkRSU3h0UWtGQlFUdEZRVU5CTEdGQlFXRXNhMEpCUVdJN1JVRkRRU3c0UWtGQlFUczdRVUZOUml4UlFVcHhRenRGUVRCSGNrTTdSVUZCUVR0RlFVRkJPMGxJTTJ0Q1JTeGpSMnRsYTBJc1pVaHNaV3hDTzBsQlEwRXNhMEpCUVVFN1NVRkpRU3hwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPenM3UVVkclpVWTdSVUZGUlN4alFVRkJPenRCU0Rka1FTeFZRVUZETzBWQlEwTXNZMEZCUVR0RlFVTkJMRk5CUVZNc1JVRkJWRHRGUVVOQkxGVkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc05rTkJRVUU3TzBGSGQyUktMRTlCUjBVN1FVRklSaXhQUVVsRk8wRkJTa1lzVDBGUFJUdEJRVkJHTEU5QlVVVTdSVUZEUlN4alFVRkJPenRCUVV0S08wVkJRMFVzWTBGQlFUdEZRVU5CTEdsQ1FVRkJPenRCUVVaR0xFdEJTVVU3UlVnMVowSkJMR1ZCUVVFN1JVRkRRU3h0UTBGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2RVSkJRVUU3UlVjeVowSkZMR1ZCUVVFN1JVRkRRU3huUWtGQlFUdEZRVVZCTEZWQlFVRTdSVUZEUVN4VFFVRkJPenRCUVUxR0xGRkJTbkZETzBWQmIwVjJReXhMUVRWRlJUdEpRVlZKTEdWQlFVRTdPenRCUVZWS0xGRkJTbkZETzBWQk5FUjJReXhMUVRsRVJUdEpRVWxKTEdGQlFVRTdPenRCUVUxT0xGTkJSVVU3UlVGRFJTeHhRa0ZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRGhDUVVGQk96dEJRVWRCTEZOQldFWXNTMEZYUnp0RlFVTkRMR2xDUVVGQk96dEJRVWxLTEZOQlFVTXNUVUZIUXp0QlFVWkdMRk5CUVVNc1RVRkZRenRGUVVORkxGZEJRVmNzVlVGQldEczdRVUZMVGp0RlFVTkZMRzFDUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEhsQ1FVRkJPenRCUVVoR0xFOUJTMFVzUjBGRlJUdEZRVU5GTEdWQlFVRTdPMEZCUlVFc1QwRk1TaXhIUVVWRkxFZEJSMGM3UlVGRFF5eGxRVUZCTzBWQlEwRXNVMEZCVXl4TFFVRlVPMFZCUTBFc1YwRkJRVHM3UVVGTFFTeFBRV0pPTEVkQlJVVXNSMEZUUnl4WFFVVkZPMFZCUTBNc1lVRkJRVHM3UVVOb2JVSldMRTlCUlVVc1kwRkZSU3hSUVVGUkxFVkJRVVVzVFVGQlN5eEpRVUZKTzBWQlEycENMR1ZCUVVFN08wRkJTVW9zVDBGQlF6dEZRVU5ETEdkQ1FVRkJPenRCUVV0S08wVkJRMFVzZVVKQlFVRTdPMEZCUkVZc1MwRkhSVHRCUVVoR0xFdEJSMUU3UlVGRFNpeFZRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMRFpDUVVGQk96dEJRVTVLTEV0QlUwVTdSVUZEUlN3MlFrRkJRVHM3UVVGV1NpeExRVk5GTEZkQlIwVTdSVUZEUlN3d1FrRkJRVHM3UVVGaVRpeExRVk5GTEZkQlIwVXNWMEZIUlR0RlFVTkZMREpDUVVGQk96dEJRV2hDVWl4TFFYTkNSVHRGUVVORkxIbENRVUZCT3p0QlFYWkNTaXhMUVRCQ1JUdEZRVU5GTERCQ1FVRkJPMFZCUTBFc2RVSkJRVUU3TzBGRGNVTktPMFZCTDBWRk8wVkJRMEVzUTBGQlF6dEZRVU5FTEVOQlFVTTdTVUZEUXl4clEwRkJRVHRKUVVOQkxITkNRVUZCTzBsQlEwRXNNa0pCUVVFN1NVRkRRU3cwUWtGQlFUczdSVUZIUmp0SlFVTkZMSGRDUVVGQk8wbEJRMEVzYjBKQlFVRTdPMFZCUjBZN1JVRkRRU3hEUVVGRE8wbEJRME1zY1VKQlFVRTdPMFZCUjBZc1VVRkJVenRGUVVOVUxGRkJRVk03U1VGRFVDd3dRa0ZCUVRzN1JVRkdSaXhSUVVGVExHTkJTVkFzUlVGQlF5eE5RVUZOTzBWQlNGUXNVVUZCVXl4alFVZFFMRVZCUVVNc1RVRkJUVHRKUVVOTUxGTkJRVk1zUzBGQlN5eFhRVUZYTEVkQlFYcENPMGxCUTBFc2JVSkJRVUU3TzBWQlRrb3NVVUZCVXl4alFWZFFMRVZCUVVNc1YwRkJWenRGUVZaa0xGRkJRVk1zWTBGVlVDeEZRVUZETEZkQlFWYzdSVUZZWkN4UlFVRlRMR05CV1ZBc1JVRkJReXh4UWtGQmNVSTdSVUZZZUVJc1VVRkJVeXhqUVZkUUxFVkJRVU1zY1VKQlFYRkNPMGxCUTNCQ0xGTkJRVk1zUlVGQlZEczdSVUZpU2l4UlFVRlRMR05CWjBKUUxFdEJRVWtzVDBGQlR6dEZRV1ppTEZGQlFWTXNZMEZsVUN4TFFVRkpMRTlCUVU4N1NVRkRWQ3hUUVVGVExFdEJRVXNzV1VGQldTeEhRVUV4UWp0SlFVTkJMRzFDUVVGQk96dEZRVWxLTzBWQlEwRTdTVUZEUlN4M1FrRkJRVHM3UlVGSFJqdEpRVU5GTERKQ1FVRkJPenRGUVVkR08wVkJRMEU3U1VGRFJTeDNRa0ZCUVRzN1JVRkhSanRKUVVORkxEQkNRVUZCT3p0RlFVZEdPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEpRVU5GTEZWQlFVRTdTVUZEUVN4VFFVRkJPenRGUVVkR08wVkJRMEU3U1VGRFJTeDFRa0ZCUVRzN1JVRkhSanRGUVVOQk8wbEJRMFVzWVVGQlFUczdPenM3T3pzN1FVTnlSVW9zVlVGUFJUdEJRVU5CTEd0Q1FVRnRRanRGUVVWcVFpeHJRMEZCUVRzN1FVRldTaXhWUVdORk8wVkJRVThzWTBGQlFUczdRVUZrVkN4VlFXbENSVHRGUVVGUExIZERRVUZCT3p0QlFXcENWQ3hWUVcxQ1JUdEZRVUZQTEd0Q1FVRkJPenRCUVc1Q1ZDeFZRVzlDUlR0RlFVRlBMR3RDUVVGQk96dEJRWEJDVkN4VlFYRkNSVHRGUVVGUExHbENRVUZCT3p0QlFYSkNWQ3hWUVhOQ1JUdEZRVUZQTEd0Q1FVRkJPenRCUVhSQ1ZDeFZRWFZDUlR0RlFVRlBMR2xDUVVGQk8wVkJRVzFDTEd0Q1FVRkJPenRCUVhaQ05VSXNWVUY1UWtVN1JVRkJUeXhwUWtGQlFUczdRVUY2UWxRc1ZVRXdRa1U3UlVGQlR5eHBRa0ZCUVRzN1FVRXhRbFFzVlVFeVFrVTdSVUZCVHl4cFFrRkJRVHM3UVVFelFsUXNWVUUyUWtVN1JVRkJUeXhwUWtGQlFUczdRVUUzUWxRc1ZVRTRRa1U3UlVGQlR5eHBRa0ZCUVRzN1FVRTVRbFFzVlVGblEwVTdSVUZCVHl4cFFrRkJRVHM3UVVGb1ExUXNWVUZwUTBVN1JVRkJUeXhyUWtGQlFUczdRVUZxUTFRc1ZVRnRRMFU3UlVGQlR5eHBRa0ZCUVRzN1FVRnVRMVFzVlVGdlEwVTdSVUZCVHl4cFFrRkJRVHM3UVVGd1ExUXNWVUZ4UTBVN1JVRkJUeXhwUWtGQlFUczdRVUZ5UTFRc1ZVRnpRMFU3UlVGQlR5eHBRa0ZCUVRzN1FVRjBRMVFzVlVGMVEwVTdSVUZCVHl4cFFrRkJRVHM3UVVGMlExUXNWVUYzUTBVN1JVRkJUeXhwUWtGQlFUczdRVUY0UTFRc1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCYlVwSkxFVkJRVU03UlVGRFF5eGpRVUZCTzBWQlEwRXNWMEZCUVRzN1FVRnlTazRzVlVGdFNra3NSVUZCUXp0RlFVTkRMR05CUVVFN1JVRkRRU3hYUVVGQk96dEJRWEpLVGl4VlFXMUtTU3hGUVVGRE8wVkJRME1zWTBGQlFUdEZRVU5CTEZkQlFVRTdPMEZCY2twT0xGVkJiVXBKTEVWQlFVTTdSVUZEUXl4alFVRkJPMFZCUTBFc1YwRkJRVHM3UVVGeVNrNHNWVUZ0U2trc1JVRkJRenRGUVVORExHTkJRVUU3UlVGRFFTeFhRVUZCT3p0QlFYSktUaXhWUVcxS1NTeEZRVUZETzBWQlEwTXNZMEZCUVR0RlFVTkJMRmRCUVVFN08wRkJVMFlzVlVGR1JqdEJRVFZLUml4VlFUUktSU3hOUVVkRk8wRkJMMHBLTEZWQk5FcEZMRTFCU1VVN1FVRm9TMG9zVlVFMFNrVXNUVUZMUlN4SFFVRkhPMFZCUTBRc1ZVRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNkVUpCUVVFN1JVRkRRU3hsUVVGQk96dEJRWFJMVGl4VlFUUktSU3hOUVdGRk8wVkJRMFVzWTBGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4cFFrRkJRVHM3UVVFMVMwNHNWVUUwU2tVc1RVRnRRa1U3UlVGRFJTeHBRa0ZCUVRzN1FVb3pURTQ3UlVGalJTeHhRa0ZCUVRzN1FVRmtSaXhSUVVORk8wVkJRVXNzWlVGQlFUdEZRVUZwUWl4WFFVRkJPenRCUVVSNFFpeFJRVVZGTzBWQlFVc3NZMEZCUVR0RlFVRnBRaXhYUVVGQk96dEJRVVo0UWl4UlFVZEZPMFZCUVVzc1kwRkJRVHRGUVVGcFFpeFhRVUZCT3p0QlFVaDRRaXhSUVVsRk8wVkJRVXNzWTBGQlFUdEZRVUZwUWl4WFFVRkJPenRCUVVwNFFpeFJRVXRGTzBWQlFVc3NZMEZCUVR0RlFVRnBRaXhYUVVGQk96dEJRVXg0UWl4UlFVMUZPMEZCVGtZc1VVRlBSVHRCUVZCR0xGRkJVVVU3UVVGU1JpeFJRVk5GTzBGQlZFWXNVVUZWUlR0RlFVTkZMRzlDUVVGQk96dEJRVmhLTEZGQllVVTdSVUZCVXl4eFFrRkJRVHM3UVVGSldEdEZRVU5GTEd0Q1FVRkJPenRCUVVsR08wVkJRMGtzV1VGQlFUdEZRVU5CTEdsQ1FVRkJPenRCUVVWS08wVkJRMGtzV1VGQlFUdEZRVU5CTEcxQ1FVRkJPenRCUVVWS08wVkJRMGtzWTBGQlFUdEZRVU5CTEdWQlFVRTdPMEZCWlVvN1JVRkRSU3hWUVVGQk8wVkJRMEVzV1VGQlFUczdRVUZIUmp0RlFVTkZMSE5DUVVGQk8wVkJRMEVzZVVKQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2TDF4dUx5OGdUV2w0YVc1elhHNHZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzR2THlCSmJuWmxjblFnWTI5c2IzSWdjM2RwZEdOb1pYSWdabTl5SUdsdFlXZGxjeUJoYm1RZ2RtbGtaVzl6WEc0dkx5QTZjbTl2ZENCN0lHWnBiSFJsY2pvZ2FXNTJaWEowS0RFd01DVXBPeUI5WEc1Y2JpOHZJR2gwZEhBNkx5OXVhV052YkdGeloyRnNiR0ZuYUdWeUxtTnZiUzl0YVdOeWJ5MWpiR1ZoY21acGVDMW9ZV05yTDF4dUxtTm1JSHRjYmx4dUlDQW1PbUpsWm05eVpTd2dKanBoWm5SbGNpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1U3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdmVnh1WEc0Z0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUdOc1pXRnlPaUJpYjNSb08xeHVJQ0I5WEc1OVhHNWNiaTVvWldGa2FXNW5LQ2tnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRE16TUNVN1hHNGdJQzEzWldKcmFYUXRabTl1ZEMxemJXOXZkR2hwYm1jNklHRnVkR2xoYkdsaGMyVmtPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JpQWdiR1YwZEdWeUxYTndZV05wYm1jNklDMHVNRFpsYlR0Y2JuMWNibHh1TG5OMVlpMW9aV0ZrYVc1bktDa2dlMXh1SUNCbWIyNTBMWE5wZW1VNklEY3lKVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRzV2Y20xaGJEdGNiaUFnYjNCaFkybDBlVG9nTGpVN1hHNTlYRzVjYmk1d1lXUmthVzVuTFc5bVpuTmxkQ2hBY0dGa1pHbHVaeTFzWldaMExDQkFjR0ZrWkdsdVp5MXlhV2RvZENrZ2UxeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklFQndZV1JrYVc1bkxXeGxablE3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUVCd1lXUmthVzVuTFhKcFoyaDBPMXh1ZlZ4dVhHNHViV0Z5WjJsdUxXOW1abk5sZENoQWJXRnlaMmx1TFd4bFpuUXNJRUJ0WVhKbmFXNHRjbWxuYUhRcElIdGNiaUFnYldGeVoybHVMV3hsWm5RNklFQnRZWEpuYVc0dGJHVm1kRHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJBYldGeVoybHVMWEpwWjJoME8xeHVmVnh1WEc0dWMzQnNhWFJsY2lncElIdGNiaUFnUUhOcGVtVTZJRFJ3ZUR0Y2JpQWdRR052Ykc5eU9pQkFkR1Y0ZEMxamIyeHZjanRjYmx4dUlDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJR052Ym5SbGJuUTZJQ2NuTzF4dUlDQWdJSGRwWkhSb09pQkFjMmw2WlR0Y2JpQWdJQ0JvWldsbmFIUTZJRUJ6YVhwbE8xeHVJQ0FnSUcxaGNtZHBiam9nTW1WdElHRjFkRzg3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05UQWxPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJRUJqYjJ4dmNqdGNiaUFnSUNCaWIzZ3RjMmhoWkc5M09pQW9RSE5wZW1VZ0tpQTFLU0F3SURBZ01DQkFZMjlzYjNJc0lDaEFjMmw2WlNBcUlDMDFLU0F3SURBZ01DQkFZMjlzYjNJN1hHNGdJSDFjYm4xY2JpSXNJaTh2WEc0dkx5QlNaWE5sZEZ4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JseHVLaXhjYmlvNlltVm1iM0psTEZ4dUtqcGhablJsY2lCN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNibjFjYmx4dVltOWtlU0I3WEc0Z0lIQmhaR1JwYm1jNklEQWdRSE53WVdObExXeG5PMXh1SUNCdFlYSm5hVzQ2SURBZ1lYVjBieUF3TzF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nUUdadmJuUnpkR0ZqYXkxa1pXWmhkV3gwTzF4dUlDQm1iMjUwTFhOcGVtVTZJRUJtYjI1MExYTnBlbVU3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUJBYkdsdVpTMW9aV2xuYUhRN1hHNGdJR052Ykc5eU9pQkFkR1Y0ZEMxamIyeHZjanRjYmlBZ2RHVjRkQzF5Wlc1a1pYSnBibWM2SUc5d2RHbHRhWHBsYkdWbmFXSnBiR2wwZVR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nUUdKaFkydG5jbTkxYm1RdFkyOXNiM0k3WEc0Z0lHbHRZV2RsTFhKbGJtUmxjbWx1WnpvZ2IzQjBhVzFwZW1WeGRXRnNhWFI1TzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSnpJR1ZoYzJVN1hHNWNiaUFnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExXMWtLU0I3WEc0Z0lDQWdMbkJoWkdScGJtY3RiMlptYzJWMEtFQnpjR0ZqWlMxdFpDd2dRSE53WVdObExXMWtLVHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJQ2hBWm05dWRDMXphWHBsSUNvZ01TNDBLVHRjYmlBZ2ZWeHVYRzRnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQzV3WVdSa2FXNW5MVzltWm5ObGRDaEFjM0JoWTJVdGMyMHNJRUJ6Y0dGalpTMXpiU2s3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUFvUUdadmJuUXRjMmw2WlNBcUlESXVOQ2s3WEc0Z0lIMWNibHh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRlSE1wSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SUNoQVptOXVkQzF6YVhwbElDb2dNeTR5S1R0Y2JpQWdmVnh1WEc0Z0lDOHZJRUZzYkNCcFQxTWdaR1YyYVdObGN5d2dkR2hsSUdWaGMybGxjM1FnZDJGNVhHNGdJRUJ0WldScFlTQW9iV0Y0TFdSbGRtbGpaUzEzYVdSMGFEb2dORGd3Y0hncExDQW9iV0Y0TFdSbGRtbGpaUzEzYVdSMGFEb2dNVEF5TkhCNEtTQjdYRzRnSUNBZ0xYZGxZbXRwZEMxMFpYaDBMWE5wZW1VdFlXUnFkWE4wT2lCdWIyNWxPMXh1SUNCOVhHNWNiaUFnTHk4Z1FTQnpaVzFwZEhKaGJuTnNkV05sYm5RZ1ltRnlJR0YwSUhSb1pTQjBiM0FnYjJZZ2RHaGxJSEJoWjJWY2JpQWdKanBpWldadmNtVWdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNCNkxXbHVaR1Y0T2lBdE9UazVPVHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQm9aV2xuYUhRNklERjJiV0Y0TzF4dUlDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUVCc2FXNXJMV052Ykc5eU8xeHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYRzRnSUNBZ2IzQmhZMmwwZVRvZ0xqSTdYRzRnSUgxY2JuMWNibHh1THk4Z1VtVnpaWFFnWm05dWRITWdabTl5SUhKbGJHVjJZVzUwSUdWc1pXMWxiblJ6WEc1cGJuQjFkQ3hjYm1KMWRIUnZiaXhjYm5ObGJHVmpkQ3hjYm5SbGVIUmhjbVZoSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEc0Z0lHWnZiblF0YzJsNlpUb2dhVzVvWlhKcGREdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklHbHVhR1Z5YVhRN1hHNTlYRzVjYmk4dklGSmxjMlYwSUhWdWRYTjFZV3dnUm1seVpXWnZlQzF2YmkxQmJtUnliMmxrSUdSbFptRjFiSFFnYzNSNWJHVXVYRzR2THlCVFpXVWdhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMMjVsWTI5c1lYTXZibTl5YldGc2FYcGxMbU56Y3k5cGMzTjFaWE12TWpFMFhHNWlkWFIwYjI0c1hHNXBibkIxZEN4Y2JuTmxiR1ZqZEZ0dGRXeDBhWEJzWlYwc1hHNTBaWGgwWVhKbFlTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUc1dmJtVTdYRzU5WEc1Y2JpOHZJRkpsYzJWMElHTnZiVzF2YmlCbGJHVnRaVzUwYzF4dVlTd2dZblYwZEc5dUlIdGNiaUFnWTI5c2IzSTZJRUIwWlhoMExXTnZiRzl5TzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR052Ykc5eUlDNDFjeUJsWVhObExDQmliM0prWlhJdFkyOXNiM0lnTGpWeklHVmhjMlVzSUdKaFkydG5jbTkxYm1RZ0xqVnpJR1ZoYzJVc0lHOXdZV05wZEhrZ01TNDFjeUJsWVhObE8xeHVYRzRnSUNZNmFHOTJaWElzWEc0Z0lDWTZabTlqZFhNZ2UxeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklHTnZiRzl5SUM0eGN5QmxZWE5sTENCaWIzSmtaWEl0WTI5c2IzSWdMakZ6SUdWaGMyVXNJR0poWTJ0bmNtOTFibVFnTGpGeklHVmhjMlVzSUc5d1lXTnBkSGtnTGpGeklHVmhjMlU3WEc0Z0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQjFibVJsY214cGJtVTdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1TFhOcmFYQTZJR2x1YXp0Y2JpQWdmVnh1WEc0Z0lDWmJaR2x6WVdKc1pXUmRJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXVORHRjYmlBZ0lDQmpkWEp6YjNJNklHNXZkQzFoYkd4dmQyVmtPMXh1SUNCOVhHNTlYRzVjYm1sdFp5d2dhSElnZTF4dUlDQmliM0prWlhJNklEQTdYRzU5WEc1Y2JtUmxiQ0I3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JHbHVaUzEwYUhKdmRXZG9PMXh1ZlZ4dVhHNDZPbk5sYkdWamRHbHZiaUI3WEc0Z0lHSmhZMnRuY205MWJtUTZJR1poWkdVb1FHeHBibXN0WTI5c2IzSXNJREV3SlNrN1hHNTlYRzVjYmpvNkxYZGxZbXRwZEMxcGJuQjFkQzF3YkdGalpXaHZiR1JsY2lCN1hHNGdJR052Ykc5eU9pQkFkR1Y0ZEMxamIyeHZjanRjYmlBZ2IzQmhZMmwwZVRvZ0xqRTdYRzU5WEc0aUxDSXZMeUJWYzJWeUlHTjFjM1J2YlNCemRIbHNaWE5jYmx4dUx5OGdRV3gwWlhKdVlYUnBkbVVnZEdsMGJHVWdjMmw2WlZ4dUx5OGdRbmtnWkdWbVlYVnNkQ0JoYkd3Z2FHVmhaR2x1WnlCc1pYWmxiSE1nYUdGMlpTQjBhR1VnYzJGdFpTQm1iMjUwSUhOcGVtVXNJR0oxZENCdFlXNTVJSEJsYjNCc1pTQnRZWGtnYm05MElHeHBhMlVnZEdocGN5d2djMjhnYUdWeVpTZHpJR0Z1SUdGc2RHVnlibUYwYVhabElHWnZiblFnYzJsNlpTQnpkR0ZqYXpwY2JpNWpiMjUwWlc1MElIdGNiaUFnYURJZ2V5Qm1iMjUwTFhOcGVtVTZJREV3T0NVN0lHOXdZV05wZEhrNklDNDRPeUI5WEc0Z0lHZ3pJSHNnWm05dWRDMXphWHBsT2lBNU5pVTdJQ0J2Y0dGamFYUjVPaUF1TnpzZ2ZWeHVJQ0JvTkNCN0lHWnZiblF0YzJsNlpUb2dPRFFsT3lBZ2IzQmhZMmwwZVRvZ0xqWTdJSDFjYmlBZ2FEVWdleUJtYjI1MExYTnBlbVU2SURjeUpUc2dJRzl3WVdOcGRIazZJQzQxT3lCOVhHNGdJR2cySUhzZ1ptOXVkQzF6YVhwbE9pQTJNQ1U3SUNCdmNHRmphWFI1T2lBdU5Ec2dmVnh1SUNCb01peGNiaUFnYURNc1hHNGdJR2cwTEZ4dUlDQm9OU3hjYmlBZ2FEWWdlMXh1SUNBZ0lHMWhjbWRwYmpvZ05uWnRhVzRnTUNBeGNtVnRPMXh1SUNCOVhHNGdJR2hsWVdSbGNpQjdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTRkbTFwYmpzZ2ZWeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNSFp0YVc0N1hHNTlYRzVjYmk1dVlYWnBaMkYwYVc5dUlIdGNiaUFnYldGeVoybHVPaUF3SURBZ01UQjJiV2x1TzF4dWZWeHVYRzR2THlCRGIyNTBZV04wSUd4cGJtc2dZMjlzYjNKelhHNHVjR0Z5Wlc1MExXeHBibXNnZTF4dUlDQWdJSE4wY205clpUb2dJemc0T0R0Y2JpQWdJQ0J6ZEhKdmEyVXRkMmxrZEdnNklERndlRHRjYm4xY2JpNWphR2xzWkhKbGJpMXNhVzVySUh0Y2JpQWdJQ0J6ZEhKdmEyVTZJQ05oWVdFN1hHNGdJQ0FnYzNSeWIydGxMWGRwWkhSb09pQXdMalZ3ZUR0Y2JuMWNiaTVwYldjdGNHaHZibVVnZTF4dUlDQWdJSGRwWkhSb09pQnBibWhsY21sME8xeHVJQ0FnSUcxaGNtZHBiam9nYVc1b1pYSnBkRHRjYm4xY2JseHVMeThnUjI5dloyeGxJRVp2Ym5SelhHNUFhVzF3YjNKMElIVnliQ2hvZEhSd2N6b3ZMMlp2Ym5SekxtZHZiMmRzWldGd2FYTXVZMjl0TDJOemN6OW1ZVzFwYkhrOVZtOXNiR3R2Y200Nk5EQXdMRFF3TUdsMFlXeHBZeWs3WEc1Y2JpOHZJRU4xYzNSdmJTQjJZWEpwWVdKc1pYTmNia0JtYjI1MGMzUmhZMnN0YzJGdWN5MXpaWEpwWmpvZ1hDSklaV3gyWlhScFkyRWdUbVYxWlZ3aUxDQmNJa2hwY21GbmFXNXZJRk5oYm5NZ1IwSmNJaXdnUVhKcFlXd3NJSE5oYm5NdGMyVnlhV1k3WEc1QVptOXVkSE4wWVdOckxYTmxjbWxtT2lCY0lsWnZiR3hyYjNKdVhDSXNJSE5sY21sbU8xeHVRSFp2Ykd4cmIzSnVPaUJjSWxadmJHeHJiM0p1WENJc0lITmxjbWxtTzF4dVFHeHBibXN0WTI5c2IzSTZJQ05tWmpBd1lqUTdYRzVBWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJabVpqdGNia0IwWlhoMExXTnZiRzl5T2lBak1EQXdPMXh1WEc0dkx5QkliMjFsY0dGblpTQnpkSGxzWlZ4dUxtRnRjMll0Ykc5bmJ5QjdYRzRnSUhkcFpIUm9PaUE0TUNVN1hHNGdJR2hsYVdkb2REb2dZWFYwYnp0Y2JuMWNibHh1TG1GdGMyWXRkR2wwYkdVZ2UxeHVJQ0IwWlhoMExXbHVaR1Z1ZERvZ0xUazVPVGs1T1hCNE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01DQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dVhHNHZMeUJCYm5ScExXRnNhV0Z6SUhSbGVIUmNiaThxWEc0cUlIdGNiaUFnZEdWNGRDMXlaVzVrWlhKcGJtYzZJRzl3ZEdsdGFYcGxUR1ZuYVdKcGJHbDBlVHRjYmlBZ0xYZGxZbXRwZEMxbWIyNTBMWE50YjI5MGFHbHVaem9nWVc1MGFXRnNhV0Z6WldRN1hHNGdJQzF0YjNvdGIzTjRMV1p2Ym5RdGMyMXZiM1JvYVc1bk9pQm5jbUY1YzJOaGJHVTdYRzU5WEc0cUwxeHVJaXdpTHk5Y2JpOHZJRU52YlcxdmJseHVMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNibHh1THk4Z1UybDBaU0JzYjJkdlhHNHViRzluYnlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JvWldsbmFIUTZJREYyYldGNE8xeHVJQ0J0WVhKbmFXNDZJREFnTUNBeExqUjJiV0Y0TzF4dUlDQmlZV05yWjNKdmRXNWtPaUJBYkdsdWF5MWpiMnh2Y2p0Y2JpQWdiM0JoWTJsMGVUb2dNRHRjYmx4dUlDQW1PbWh2ZG1WeUxGeHVJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lCdWIyNWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nUUhSbGVIUXRZMjlzYjNJN1hHNGdJQ0FnYjNCaFkybDBlVG9nTVR0Y2JpQWdmVnh1WEc0Z0lHZ3hJSHRjYmlBZ0lDQm9aV2xuYUhRNklEQTdYRzRnSUNBZ2RHVjRkQzFwYm1SbGJuUTZJQzA1T1RrNU9XVnRPMXh1SUNCOVhHNTlYRzVjYmk4dklFMWhhVzRnYm1GMmFXZGhkR2x2Ymx4dUxtNWhkbWxuWVhScGIyNGdlMXh1SUNCdFlYSm5hVzQ2SURBZ01DQXhOblp0YVc0N1hHNGdJRzFoY21kcGJpMXlhV2RvZERvZ0xURXVNV1Z0TzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTFRFdU1XVnRPMXh1SUNCbWIyNTBMWE5wZW1VNklEWXdKVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRN1hHNGdJR3hsZEhSbGNpMXpjR0ZqYVc1bk9pQXVORFZsYlR0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNibHh1SUNCc2FTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF5TzF4dUlDQWdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYRzVjYmlBZ0lDQmhJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJQzQxWlcwZ01TNHlaVzA3WEc1Y2JpQWdJQ0FnSUNZNmFHOTJaWElzWEc0Z0lDQWdJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJRUJzYVc1ckxXTnZiRzl5TzF4dUlDQWdJQ0FnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTh2SUVOMWNuSmxiblJzZVNCaFkzUnBkbUYwWldRZ2NHRm5aU0J2Y2lCallYUmxaMjl5ZVNCamJHRnpjMXh1TG1OMWNuSmxiblFnZTF4dVhHNGdJR0VnZTF4dUlDQWdJR052Ykc5eU9pQkFiR2x1YXkxamIyeHZjanRjYmlBZ2ZWeHVmVnh1WEc0dkx5Qk1ZWFJsYzNRZ2QyOXlheUJzYVc1clhHNWliMlI1T21odmRtVnlJQzVzWVhSbGMzUWdlMXh1SUNCamIyeHZjam9nUUd4cGJtc3RZMjlzYjNJZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUx5OGdVR1Z5YzI5dUlITjBZWFIxYzF4dUxtTnZiblJsYm5RZ0xuTjBZWFIxY3lCN1hHNGdJRzFoY21kcGJqb2dNWFp0YVc0Z01DQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklEYzFKVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRN1hHNWNiaUFnSmpwaVpXWnZjbVVnZTF4dUlDQWdJRUJ6YVhwbE9pQXVPR1Z0TzF4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0IzYVdSMGFEb2dRSE5wZW1VN1hHNGdJQ0FnYUdWcFoyaDBPaUJBYzJsNlpUdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJQzQ0ZG5jN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ1ptRmtaU2hBZEdWNGRDMWpiMnh2Y2l3Z01qQWxLVHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBMU1DVTdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNJanRjYmlBZ2ZWeHVYRzRnSUNZdVlYWmhhV3hoWW14bElIdGNibHh1SUNBZ0lDWTZZbVZtYjNKbElIdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ013WTJZN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWVNCN1hHNGdJQ0FnSUNCamIyeHZjam9nSXpCalpqdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQW1MblZ1WVhaaGFXeGhZbXhsSUh0Y2JseHVJQ0FnSUNZNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDTmpZMk03WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZU0I3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dJMk5qWXp0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUx5OGdUV0ZwYmlCamIyNTBaVzUwWEc0dVkyOXVkR1Z1ZENCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERTJkbTFwYmp0Y2JseHVJQ0F2THlCR2IzSWdjMjl0WlNCemNHVmphV1pwWldRZ2NHOXpkSE1nYVc0Z2QyOXlheUJqWVhSbFoyOXllVnh1SUNBdVkyWTdYRzVjYmlBZ0x5OGdVbVZ0YjNabElHVjRkSEpoSUhOd1lXTmxJR1p2Y2lCMGFHVWdiR0Z6ZENCd1lYSmhaM0poY0dnZ2FXNGdkR2hsSUdOdmJuUmhhVzVsY2x4dUlDQmhjblJwWTJ4bElIdGNibHh1SUNBZ0lDOHZJR0Z5ZEdsamJHVWdQaUJ3WEc0Z0lDQWdQaUFxT214aGMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUNBaGFXMXdiM0owWVc1ME8xeHVYRzRnSUNBZ0lDQXZMeUJoY25ScFkyeGxJRDRnZFd3Z1BpQnNhU3dnWVhKMGFXTnNaU0ErSUM1bWIyOTBibTkwWlhNZ1BpQnZiRnh1SUNBZ0lDQWdQaUFxT214aGMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1lYSjBhV05zWlNBK0lIVnNJRDRnYkdrZ1BpQndMQ0JoY25ScFkyeGxJRDRnTG1admIzUnViM1JsY3lBK0lHOXNJRDRnYkdsY2JpQWdJQ0FnSUNBZ1BpQXFPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBZ0lXbHRjRzl5ZEdGdWREdGNibHh1SUNBZ0lDQWdJQ0FnSUM4dklHRnlkR2xqYkdVZ1BpQXVabTl2ZEc1dmRHVnpJRDRnYjJ3Z1BpQnNhU0ErSUhCY2JpQWdJQ0FnSUNBZ0lDQStJQ282YkdGemRDMWphR2xzWkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMeThnVUc5emRDQXZJSEJoWjJVZ1kyOXVkR1Z1ZENCbWFYSnpkQ0JsYkdWdFpXNTBJR1pwZUZ4dUlDQXVjRzl6ZEMxamIyNTBaVzUwTEZ4dUlDQXVjR0ZuWlMxamIyNTBaVzUwSUh0Y2JseHVJQ0FnSUQ0Z0tqcG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd08xeHVYRzRnSUNBZ0lDQStJQ282Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF3TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUdFZ2UxeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dUlDQjlYRzVjYmlBZ2NDQjdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVM0MmNtVnRPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUFvUUd4cGJtVXRhR1ZwWjJoMElDb2dNUzR5S1R0Y2JpQWdmVnh1WEc0Z0lHaGxZV1JsY2lCN1hHNGdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREUyZG0xcGJqdGNibHh1SUNBZ0lHZ3hJSHRjYmlBZ0lDQWdJRzFoY21kcGJqb2dNQ0F3SUM0eFpXMDdYRzRnSUNBZ0lDQXVhR1ZoWkdsdVp5Z3BPMXh1SUNBZ0lDQWdhSGx3YUdWdWN6b2dibTl1WlR0Y2JpQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMakU3WEc1Y2JpQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQ0FnSUNBdkx5QlBkbVZ5Y21sa1pTQjJhV1YzY0c5eWRDQjFibWwwY3lCa1pXWnBibVZrSUdsdUlIQnZjM1F1YUhSdGJGeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREk0TUNVN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lITjJaeUI3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQzh2SUU5MlpYSnlhV1JsSUcxaGNtZHBiaUJtY205dElHRnlkR2xqYkdVZ2FXMW5YRzRnSUNBZ0lDQnpkbWNzWEc0Z0lDQWdJQ0JwYldjZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJoZG05cFpDQm9aV0ZrWlhJZ2MzUnlaWFJqYUdWa0lHSjVJR2RzYjJKaGJDQnBiV2NnYzNSNWJHVnpYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURBN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUM0elpXMDdYRzVjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExYTnRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUVocFpHVWdZV04wZFdGc0lIUmxlSFFnYVdZZ2NHOXpkQ0IwYVhSc1pTQnBjeUJwYldGblpTQnZjaUJUVmtjc0lIUm9aU0JoWTNSMVlXd2dkR1Y0ZENCb1pXeHdjeUJUWVdaaGNta2daMlYwSUhSb1pTQnlaV0ZzSUhCdmMzUWdkR2wwYkdVZ2FXNGdVbVZoWkdWeUlHMXZaR1V1WEc0Z0lDQWdMbWx0WVdkbExYUnBkR3hsSUh0Y2JpQWdJQ0FnSUhSbGVIUXRhVzVrWlc1ME9pQXRPVGs1T1RrNWNIZzdYRzRnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F1YkdGMFpYTjBMWEJ2YzNRZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNVFoyYldsdU8xeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQTRNQ1U3WEc0Z0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ2JtOXliV0ZzTzF4dUlDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVNanRjYmx4dUlDQWdJQ0FnWVNCN1hHNGdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhOdFlXeHNJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNblp0YVc0N1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FESXNYRzRnSUdnekxGeHVJQ0JvTkN4Y2JpQWdhRFVzWEc0Z0lHZzJJSHRjYmlBZ0lDQnRZWEpuYVc0NklERXdkbTFwYmlBd0lERnlaVzA3WEc0Z0lDQWdMbk4xWWkxb1pXRmthVzVuS0NrN1hHNGdJSDFjYmx4dUlDQjFiQ3hjYmlBZ2Iyd2dlMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU9ISmxiVHRjYmlBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTVM0eVpXMDdYRzVjYmlBZ0lDQnNhU0I3WEc0Z0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ0tFQnNhVzVsTFdobGFXZG9kQ0FxSURFdU1pazdYRzVjYmlBZ0lDQWdJRDRnZFd3c1hHNGdJQ0FnSUNBK0lHOXNJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J2YkNCN1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklERXVOelZsYlR0Y2JpQWdmVnh1WEc0Z0lHbHRaeXhjYmlBZ2RtbGtaVzhzWEc0Z0lHbG1jbUZ0WlN4Y2JpQWdMbUp5YjNkelpYSWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJSGRwWkhSb09pQmpZV3hqS0RFd01DVWdLeUFvUUhOd1lXTmxMWGh6SUNvZ01pa2dLeUFvUUdKdmNtUmxjaTFrWldaaGRXeDBJQ29nTWlrcE8xeHVJQ0FnSUcxaGNtZHBiam9nTUNCallXeGpLQzFBYzNCaFkyVXRlSE1nTFNCQVltOXlaR1Z5TFdSbFptRjFiSFFwSURFdU9ISmxiVHRjYmx4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxdFpDa2dlMXh1SUNBZ0lDQWdMbTFoY21kcGJpMXZabVp6WlhRb0xVQnpjR0ZqWlMxdFpDd2dMVUJ6Y0dGalpTMXRaQ2s3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dZMkZzWXlneE1EQWxJQ3NnS0VCemNHRmpaUzF0WkNBcUlESXBLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lDNXRZWEpuYVc0dGIyWm1jMlYwS0MxQWMzQmhZMlV0YzIwc0lDMUFjM0JoWTJVdGMyMHBPMXh1SUNBZ0lDQWdkMmxrZEdnNklHTmhiR01vTVRBd0pTQXJJQ2hBYzNCaFkyVXRjMjBnS2lBeUtTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdZWFp2YVdRZ2FXMWhaMlZ6SUhkcGRHZ2dZQzV1YnkxbGJteGhjbWRsWUNCemRISmxkR05vWldRZ1lua2daMnh2WW1Gc0lHbHRaeUJ6ZEhsc1pYTmNiaUFnSUNBbUxtNXZMV1Z1YkdGeVoyVWdlMXh1SUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SURBN1hHNGdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEc0Z0lDQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUNBZ0lDQjNhV1IwYURvZ1lYVjBienRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JpYkc5amEzRjFiM1JsSUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01pNDRjbVZ0TzF4dUlDQWdJRzFoY21kcGJpMXNaV1owT2lCallXeGpLQzFBYzNCaFkyVXRlSE1nTFNCQVltOXlaR1Z5TFdSbFptRjFiSFFwTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nT1RBbE8xeHVYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklFQmljbVZoYTNCdmFXNTBMWE50S1NCN1hHNGdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQStJSEFnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQkFjM0JoWTJVdGVITTdYRzRnSUNBZ0lDQmliM0prWlhJdGJHVm1kRG9nUUdKdmNtUmxjaTFrWldaaGRXeDBJSE52Ykdsa08xeHVJQ0FnSUNBZ0x5OGdWRTlFVHpvZ1RtVmxaQ0JpWlhSMFpYSWdjMjlzZFhScGIyNWNiaUFnSUNBZ0lDOHZJRmRsSUhkcGJHd2djbVZ6WlhRZ2RHaGxJR052YlcxdmJpQnRZWEpuYVc0dFltOTBiM1J0SUhSdklHZGxkQ0JuWVhCc1pYTnpJR0p2Y21SbGNuTWdabTl5SUdKc2IyTnJjWFZ2ZEdWelhHNGdJQ0FnSUNBdkx5QlVhR2x6SUdOdmRXeGtJR2hsYkhBZ1ptbDRJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzloYlhObUwyRnRjMll0WTNWeWRHRnVZUzlwYzNOMVpYTXZORnh1SUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERXVObkpsYlR0Y2JpQWdJQ0FnSUM4dklFNXZkeUJ5WlhObGRDQmtaV1poZFd4MElHMWhjbWRwYmlCaWRYUjBiMjRnWm5KdmJTQm5iRzlpWVd3Z1pHVm1hVzVsWEc0Z0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdPMXh1WEc0Z0lDQWdJQ0F2THlCU1pXMXZkbVVnWlhoMGNtRWdjR0ZrWkdsdVp5Qm1iM0lnZEdobElHeGhjM1FnWld4bGJXVnVkQ3dnY21VdFlYQndiSGtnYldGeVoybHVYRzRnSUNBZ0lDQW1PbXhoYzNRdGIyWXRkSGx3WlNCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBd08xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeExqWnlaVzA3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQ0FnSUNBdWNHRmtaR2x1WnkxdlptWnpaWFFvWTJGc1l5aEFjM0JoWTJVdGMyMGdMU0JBWW05eVpHVnlMV1JsWm1GMWJIUXBMQ0JBYzNCaFkyVXRjMjBwTzF4dUlDQWdJQ0FnSUNBdWJXRnlaMmx1TFc5bVpuTmxkQ2d0UUhOd1lXTmxMWE50TENBdFFITndZV05sTFhOdEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCbWIyOTBaWElnZTF4dUlDQWdJQ0FnTG1ObU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOcGRHVWdlMXh1SUNBZ0lDQWdabXh2WVhRNklISnBaMmgwTzF4dUlDQWdJQ0FnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dVhHNGdJQ0FnSUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDOHZJR2gwZEhBNkx5OTNkM2N1Wm1sc1pXWnZjbTFoZEM1cGJtWnZMMmx1Wm04dmRXNXBZMjlrWlM5amFHRnlMekkxTURBdmFXNWtaWGd1YUhSdFhHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lYRnd5TlRBd1hGd3lOVEF3WEZ3d01HRXdYQ0pjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JvY2lCN1hHNGdJQ0FnTG5Od2JHbDBaWElvS1R0Y2JpQWdmVnh1WEc0Z0lITjFjQ0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUEzTlNVN1hHNGdJSDFjYmx4dUlDQmpiMlJsTEZ4dUlDQndjbVVnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCQVptOXVkSE4wWVdOckxXMXZibTl6Y0dGalpUdGNiaUFnSUNCamIyeHZjam9nUUdOdlpHVXRZMjlzYjNJN1hHNGdJSDFjYmx4dUlDQXZMeUJQYm14NUlHRndjR3g1SUhkdmNtUWdZbkpsWVd0cGJtY2djblZzWlNCbWIzSWdZMjlrWlhNZ2FXNGdjR0Z5WVdkeVlYQm9jMXh1SUNCd0lHTnZaR1VzWEc0Z0lHeHBJR052WkdVZ2UxeHVJQ0FnSUhkdmNtUXRZbkpsWVdzNklHSnlaV0ZyTFdGc2JEdGNiaUFnZlZ4dVhHNGdJSEJ5WlNCN1hHNGdJQ0FnY0dGa1pHbHVaem9nUUhOd1lXTmxMWGh6TzF4dUlDQWdJQzV0WVhKbmFXNHRiMlptYzJWMEtDMUFjM0JoWTJVdGVITXNJQzFBYzNCaFkyVXRlSE1wTzF4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXVPSEpsYlR0Y2JpQWdJQ0J2ZG1WeVpteHZkeTE0T2lCaGRYUnZPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dPREFsTzF4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBb1FHeHBibVV0YUdWcFoyaDBJQ29nTVM0eUtUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQm1ZV1JsS0NNd09HWXNJRFFsS1R0Y2JpQWdJQ0F2THlCQ2IzVnVZMmx1WnlCelkzSnZiR3dnWm1sNElHWnZjaUJwVDFOY2JpQWdJQ0F0ZDJWaWEybDBMVzkyWlhKbWJHOTNMWE5qY205c2JHbHVaem9nZEc5MVkyZzdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YldRcElIdGNiaUFnSUNBZ0lDNXdZV1JrYVc1bkxXOW1abk5sZENoQWMzQmhZMlV0YldRc0lFQnpjR0ZqWlMxdFpDazdYRzRnSUNBZ0lDQXViV0Z5WjJsdUxXOW1abk5sZENndFFITndZV05sTFcxa0xDQXRRSE53WVdObExXMWtLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lDNXdZV1JrYVc1bkxXOW1abk5sZENoQWMzQmhZMlV0YzIwc0lFQnpjR0ZqWlMxemJTazdYRzRnSUNBZ0lDQXViV0Z5WjJsdUxXOW1abk5sZENndFFITndZV05sTFhOdExDQXRRSE53WVdObExYTnRLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0F2THlCT1pYZHpiR1YwZEdWeUlITjFZbk5qY21sd2RHbHZiaUJtYjNKdElHbHVJSEJoWjJVZ1hDSnpkRzl5WlZ3aVhHNGdJR1p2Y20wZ2UxeHVYRzRnSUNBZ2FXNXdkWFFnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREYyYldsdUlEQTdYRzRnSUNBZ0lDQnRZWEpuYVc0NklEQWdNQ0F4TGpoeVpXMDdYRzRnSUNBZ0lDQmliM0prWlhJNklHNXZibVU3WEc0Z0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdabUZrWlNoQWRHVjRkQzFqYjJ4dmNpd2dNakFsS1R0Y2JpQWdJQ0FnSUM4dklGSmxiVzkyWlNCaWIzSmtaWEl0Y21Ga2FYVnpJR1p2Y2lCcFQxTWdaR1YyYVdObGMxeHVJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUR0Y2JpQWdJQ0FnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ3WVdSa2FXNW5JQzR5Y3lCbFlYTmxPMXh1WEc0Z0lDQWdJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVhadGFXNDdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUdaaFpHVW9RSFJsZUhRdFkyOXNiM0lzSURJbEtUdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lCQWRHVjRkQzFqYjJ4dmNqdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXZMeUJTWlhOMElHWnZjbTBnZG1Gc2FXUmhkR2x2YmlCemRIbHNaWE1zSUdKdmNuSnZkMlZrSUdaeWIyMGdRbTl2ZEhOMGNtRndYRzRnSUdsdWNIVjBMRnh1SUNCMFpYaDBZWEpsWVN4Y2JpQWdjMlZzWldOMElIdGNibHh1SUNBZ0lDWTZabTlqZFhNNmNtVnhkV2x5WldRNmFXNTJZV3hwWkNCN1hHNWNiaUFnSUNBZ0lDWTZabTlqZFhNZ2UxeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUJtWVdSbEtFQnNhVzVyTFdOdmJHOXlMQ0ExSlNrN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nUUd4cGJtc3RZMjlzYjNJN1hHNGdJQ0FnSUNBZ0lDOHZJRTkyWlhKeWFXUmxJRVpwY21WbWIzZ2daR1ZtWVhWc2RDQnpkSGxzWlhOY2JpQWdJQ0FnSUNBZ1ltOTRMWE5vWVdSdmR6b2dibTl1WlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCMFlXSnNaU0I3WEc0Z0lDQWdZbTl5WkdWeUxXTnZiR3hoY0hObE9pQmpiMnhzWVhCelpUdGNiaUFnSUNCaWIzSmtaWEl0YzNCaFkybHVaem9nTUR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURrd0pUdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBdWJXRnlaMmx1TFc5bVpuTmxkQ2d0UUhOd1lXTmxMWGh6TENBdFFITndZV05sTFhoektUdGNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TGpoeVpXMDdYRzVjYmlBZ0lDQjBhQ3hjYmlBZ0lDQjBaQ0I3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5PaUF1Tm1WdElFQnpjR0ZqWlMxNGN6dGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFDQjdYRzRnSUNBZ0lDQmliM0prWlhJdFltOTBkRzl0T2lCQVltOXlaR1Z5TFdSbFptRjFiSFFnYzI5c2FXUWdabUZrWlNoQWRHVjRkQzFqYjJ4dmNpd2dOaVVwTzF4dUlDQWdJQ0FnTHk4Z1QzWmxjbkpwWkdVZ1pHVm1ZWFZzZENCMWMyVnlJR0ZuWlc1MElITjBlV3hsYzJobFpYUmNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5RN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEdRZ2UxeHVJQ0FnSUNBZ1ltOXlaR1Z5TFhSdmNEb2dRR0p2Y21SbGNpMXpiU0J6YjJ4cFpDQm1ZV1JsS0VCMFpYaDBMV052Ykc5eUxDQTBKU2s3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmk4dklGQnZjM1J6SUhkcGRHZ2dRWE5wWVc0Z1kyaGhjbUZqZEdWeWMxeHVPbXhoYm1jb2VtZ3BMRnh1T214aGJtY29hbUVwSUh0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nYW5WemRHbG1lVHRjYmx4dUlDQm9aV0ZrWlhJZ2UxeHVYRzRnSUNBZ0ppeGNiaUFnSUNBbUlDb2dlMXh1SUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nYzNSaGNuUTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTh2SUVacGVDQmxiWEIwZVNCemNHRmpaU0IzYUdWdUlHRWdjR0Z5WVdkeVlYQm9JSE4wWVhKMGN5QjNhWFJvSUhGMWIzUmxJRzFoY210eklHRnVaQ0J6YjIxbElHRnphV0Z1SUhCMWJtTjBkV0YwYVc5dUlHMWhjbXR6WEc0dWJHVmhaR2x1WnkxcGJtUmxiblF0Wm1sNElIdGNiaUFnZEdWNGRDMXBibVJsYm5RNklDMHVNemxsYlR0Y2JuMWNibHh1THk4Z1ZIZGxaWFFnWW5WMGRHOXVJRzFoY21kcGJpQm1hWGhjYmk1d2IzTjBMVzF2WkdsbWFXVmtMV1JoZEdVZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnYjNCaFkybDBlVG9nTGpVN1hHNTlYRzVjYmk4dklFeGhjbWRsZEhsd1pTQnpkSGxzWlhNZ0tISmxjR3hoWTJWeklHSjFkSFJ2YmlCemRIbHNaWE1wWEc0dWJHRnlaMlYwZVhCbElIdGNiaUFnTG1obFlXUnBibWNvS1R0Y2JpQWdabTl1ZEMxemFYcGxPaUF5TURBbE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhMamh5WlcwZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUx5OGdRbkp2YzJWeUlHWnlZVzFsSUdadmNpQnBiV0ZuWlhNZ2FXNGdZMkYwWldkdmNua2dYQ0ozYjNKclhDSmNiaTVpY205M2MyVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01qUndlRHRjYmlBZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNneU5UVXNJREkxTlN3Z01qVTFMQ0F1TVNrN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVndlQ0ExY0hnZ01DQXdPMXh1SUNCaWIzZ3RjMmhoWkc5M09pQXdJREFnTUNBeGNIZ2djbWRpWVNnd0xDQXdMQ0F3TENBdU1EVXBPMXh1WEc0Z0lDOHZJRkpsYzJWMElHSnliM2R6WlhJZ1ltOXlaR1Z5TFhKaFpHbDFjeUJtYjNJZ2MyMWhiR3dnYzJOeVpXVnVjMXh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRiV1FwTENBb2JXRjRMWGRwWkhSb09pQkFZbkpsWVd0d2IybHVkQzF6YlNrZ2UxeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREE3WEc0Z0lIMWNibHh1SUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSFJ2Y0RvZ09IQjRPMXh1SUNBZ0lHeGxablE2SURFd2NIZzdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdkMmxrZEdnNklEaHdlRHRjYmlBZ0lDQm9aV2xuYUhRNklEaHdlRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUJzYVdkb2RHVnVLQ05tTWpSbE5Ua3NJRE13SlNrN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpwY2JpQWdJQ0FnSUNBZ01UWndlQ0F3SURBZ01DQWdJR1poWkdVb2JHbG5hSFJsYmlnalptRmpOVE0yTENBek1DVXBMQ0E1TmlVcFhHNGdJQ0FnSUNBc0lETXljSGdnTUNBd0lEQWdJQ0JtWVdSbEtHeHBaMmgwWlc0b0l6STJaVGt6WkN3Z016QWxLU3dnT1RZbEtWeHVJQ0FnSUNBZ0xDQWdJQ0F3SURBZ01DQXhjSGdnWm1Ga1pTaGtZWEpyWlc0b0kyWXlOR1UxT1N3Z016QWxLU3dnTXpBbEtWeHVJQ0FnSUNBZ0xDQXhObkI0SURBZ01DQXhjSGdnWm1Ga1pTaGtZWEpyWlc0b0kyWmhZelV6Tml3Z016QWxLU3dnTXpBbEtWeHVJQ0FnSUNBZ0xDQXpNbkI0SURBZ01DQXhjSGdnWm1Ga1pTaGtZWEpyWlc0b0l6STJaVGt6WkN3Z016QWxLU3dnTXpBbEtWeHVJQ0FnSUR0Y2JpQWdmVnh1WEc0Z0lHbHRaeUI3WEc0Z0lDQWdMeThnWVhadmFXUWdhVzFoWjJWeklHbHVjMmxrWlNBdVluSnZkM05sY2lCemRISmxkR05vWldRZ1lua2daMnh2WW1Gc0lHbHRaeUJ6ZEhsc1pYTmNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURBN1hHNGdJQ0FnZDJsa2RHZzZJR0YxZEc4N1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZJREFnTFRGd2VDQXdJREFnY21kaVlTZ3dMQ0F3TENBd0xDQXVNRFVwTzF4dUlDQjlYRzU5WEc1Y2JpOHZJRVY0ZEhKaElHOW1abk5sZENCbWIzSWdUMU1nV0NCelkzSmxaVzV6YUc5MGMxeHVMbk5qY21WbGJuTm9iM1F0YldGaklIdGNiaUFnUUc5emVDMXphR0ZrYjNjdGMybDZaVG9nTlRad2VEdGNiaUFnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ2YzNndGMyaGhaRzkzTFhOcGVtVXNJQzFBYjNONExYTm9ZV1J2ZHkxemFYcGxLVHRjYmx4dUlDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YldRcExDQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxemJTa2dlMXh1SUNBZ0lDNXRZWEpuYVc0dGIyWm1jMlYwS0RBc0lEQXBPMXh1SUNCOVhHNTlYRzVjYmk4dklGTndaV05wWVd3Z2NHRnlZV2R5WVhCb0lIZHBkR2dnWW05eVpHVnlJR3hwYm1WY2JpNXViM1JsTEZ4dUxuTjBiM0psTEZ4dUxtUnZkMjVzYjJGa0lIdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQkFjM0JoWTJVdGVITTdYRzRnSUcxaGNtZHBiaTFzWldaME9pQmpZV3hqS0MxQWMzQmhZMlV0ZUhNZ0xTQkFZbTl5WkdWeUxXUmxabUYxYkhRcE8xeHVJQ0JpYjNKa1pYSXRiR1ZtZERvZ1FHSnZjbVJsY2kxa1pXWmhkV3gwSUhOdmJHbGtJRUJzYVc1ckxXTnZiRzl5TzF4dVhHNGdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxemJTa2dlMXh1SUNBZ0lDNXdZV1JrYVc1bkxXOW1abk5sZENoallXeGpLRUJ6Y0dGalpTMXpiU0F0SUVCaWIzSmtaWEl0WkdWbVlYVnNkQ2tzSUVCemNHRmpaUzF6YlNrN1hHNGdJQ0FnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ6Y0dGalpTMXpiU3dnTFVCemNHRmpaUzF6YlNrN1hHNGdJSDFjYm4xY2JseHVMeThnVW1WbVpYSmxibU5sSUc1dmRHVnpJR0Z1WkNCc2FXNXJjeUJwYmlCd2IzTjBYRzR1Wm05dmRHNXZkR1Z6SUh0Y2JpQWdMbk53YkdsMFpYSW9LVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTRNQ1U3WEc1OVhHNWNianAwWVhKblpYUWdlMXh1WEc0Z0lDOHZJRkpsWkdOaGNuQmxkQzF6ZEhsc1pWeHVJQ0JiY21WMlBXWnZiM1J1YjNSbFhTeGNiaUFnVzNKbGJEMW1iMjkwYm05MFpWMHNYRzVjYmlBZ0x5OGdTM0poYldSdmQyNHRjM1I1YkdWY2JpQWdMbkpsZG1WeWMyVm1iMjkwYm05MFpTeGNiaUFnTG1admIzUnViM1JsSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dRR3hwYm1zdFkyOXNiM0k3WEc0Z0lIMWNibjFjYmx4dUx5OGdVRzl6ZENCc2FYTjBJR2x1SUZ3aWQyOXlhMXdpSUdGdVpDQmNJbTV2ZEdWY0lseHVMbXhwYzNRZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnYldGeVoybHVPaUF3SURBZ0xqUnlaVzA3WEc1Y2JpQWdhREVnZTF4dUlDQWdJQzVvWldGa2FXNW5LQ2s3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TURBbE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMakU3WEc0Z0lDQWdMeThnVDNabGNuSnBaR1VnYUdWaFpHbHVaeUJrWldacGJtVnpJR2x1SUM1amIyNTBaVzUwWEc0Z0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ0lDQnRZWEpuYVc0NklEQTdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lDOHZJRWhwWkdVZ1pYaDBaWEp1WVd3Z2JHbHVheUJtYjNJZ2NHOXpkQ0JzYVhOMFhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERTRNQ1U3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTG1WNGRHVnlibUZzSUh0Y2JseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQ0FnTHk4Z1NHbGtaU0JsZUhSbGNtNWhiQ0JzYVc1cklHWnZjaUJ3YjNOMElHeHBjM1JjYmlBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpOHZJRUVnWkc5MElITjViV0p2YkNCbWIzSWdaWGgwWlhKdVlXd2diR2x1YTNOY2JpNWxlSFJsY201aGJDQjdYRzVjYmlBZ0xtUnZkQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQWdJSGRwWkhSb09pQXVOM0psYlR0Y2JpQWdJQ0JvWldsbmFIUTZJQzQzY21WdE8xeHVJQ0FnSUcxaGNtZHBiam9nTUNBdU1XVnRPMXh1SUNBZ0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1U3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nUUhSbGVIUXRZMjlzYjNJN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBdU5ITWdaV0Z6WlR0Y2JseHVJQ0FnSUM4dklFVjRkSEpoSUcxaGNtZHBiaUJtYjNJZ1pYaDBaWEp1WVd3Z2MzbHRZbTlzSUdsdUlITnBibWQxYkdGeVhHNGdJQ0FnSmkwdGNHOXpkQ0I3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ01YSmxiVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0FtT21odmRtVnlMRnh1SUNBbU9tWnZZM1Z6SUh0Y2JseHVJQ0FnSUM1a2IzUWdlMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ6WTJGc1pTZ3hMalFwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc0dVptOXZkR1Z5SUh0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0F3SURFMmRtMXBianRjYmlBZ1ptOXVkQzF6YVhwbE9pQTNOU1U3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCc2IzZGxjbU5oYzJVN1hHNWNiaUFnZFd3Z2UxeHVYRzRnSUNBZ2JHa2dlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bE8xeHVYRzRnSUNBZ0lDQW1PbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQ0F1Tm5aM08xeHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJaUF2SUZ3aU8xeHVJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVNenRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNibHh1SUNBZ0lDQWdJQ0FtT21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzRpTENJdkwxeHVMeThnVUd4MVoybHVjMXh1THk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmx4dUx5OGdVM1I1YkdVZ1ptbDRaWE1nWm05eUlIQnNkV2RwYm5OY2JseHVMeThnYVc1MFpXNXpaUzVxYzF4dUxteHZZV1JsWkNCN1hHNWNiaUFnTG1sdWRHVnVjMlV0ZDNKaGNDQjdYRzVjYmlBZ0lDQmhjblJwWTJ4bElIQWdQaUJwYldjNmJtOTBLQzV1YnkxcGJuUmxibk5sS1NCN1hHNGdJQ0FnSUNCamRYSnpiM0k2SUhwdmIyMHRhVzQ3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnSmk1cGJuUmxibk5sTFc5d1pXNGdlMXh1SUNBZ0lHTjFjbk52Y2pvZ2VtOXZiUzF2ZFhRN1hHNGdJSDFjYm4xY2JseHVMeThnUjJsMFNIVmlJRWRwYzNSY2JpNW5hWE4wSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUE0TUNVZ0lXbHRjRzl5ZEdGdWREdGNibHh1SUNCamIyUmxMQ0J3Y21VZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURBN1hHNGdJQ0FnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUgxY2JseHVJQ0F1WjJsemRDMWtZWFJoSUh0Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ1FHWnZiblJ6ZEdGamF5MXRiMjV2YzNCaFkyVWdJV2x0Y0c5eWRHRnVkRHRjYmx4dUlDQWdJQzVtYVd4bExXUmhkR0VnZTF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE1EQWxJQ0ZwYlhCdmNuUmhiblE3WEc1Y2JpQWdJQ0FnSUQ0Z2RHRmliR1VnZTF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5OGdUVzl1YjNOd1lXTmxJR1p2Ym5SeklHeHZiMnNnWW1sbloyVnlJSFJvWVc0Z2JtOXliV0ZzSUdadmJuUnpMQ0J6YnlCdFlXdGxJR2wwSUhOdFlXeHNaWEl1WEc0Z0lDNW9hV2RvYkdsbmFIUWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dPVEFsSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYmx4dUlDQXViV0Z5YTJSdmQyNHRZbTlrZVNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeE1EQWxJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNV1Z0SUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYm4xY2JpSXNJaTh2WEc0dkx5QlFjbWx1ZEZ4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JseHVMeThnVTNSNWJHVWdabWw0WlhNZ1ptOXlJSEJ5YVhScGJtZGNibHh1UUcxbFpHbGhJSEJ5YVc1MElIdGNibHh1SUNBcUxGeHVJQ0FxT21KbFptOXlaU3hjYmlBZ0tqcGhablJsY2lCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQmpiMnh2Y2pvZ0l6QXdNQ0FoYVcxd2IzSjBZVzUwT3lBdkx5QkNiR0ZqYXlCd2NtbHVkSE1nWm1GemRHVnlPaUJvTldKd0xtTnZiUzl6WEc0Z0lDQWdZbTk0TFhOb1lXUnZkem9nYm05dVpTQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lIUmxlSFF0YzJoaFpHOTNPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JseHVJQ0JpYjJSNUlIdGNiaUFnSUNCd1lXUmthVzVuT2lBeE1HMXRJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lIMWNibHh1SUNCaExGeHVJQ0JoT25acGMybDBaV1FnZTF4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdmVnh1WEc0Z0lDNWpiMjUwWlc1MElDNXdiM04wTFdOdmJuUmxiblFzWEc0Z0lDNWpiMjUwWlc1MElDNXdZV2RsTFdOdmJuUmxiblFnZTF4dUlDQWdJRzFoZUMxM2FXUjBhRG9nTVRBd0pTQWhhVzF3YjNKMFlXNTBPMXh1WEc0Z0lDQWdZVnRvY21WbVhUcGhablJsY2lCN1hHNGdJQ0FnSUNCamIyNTBaVzUwT2lCY0lpQW9YQ0lnWVhSMGNpaG9jbVZtS1NCY0lpbGNJanRjYmlBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCdWIzSnRZV3c3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnUkc5dUozUWdjMmh2ZHlCc2FXNXJjeUIwYUdGMElHRnlaU0JtY21GbmJXVnVkQ0JwWkdWdWRHbG1hV1Z5Y3l4Y2JpQWdJQ0F2THlCdmNpQjFjMlVnZEdobElHQnFZWFpoYzJOeWFYQjBPbUFnY0hObGRXUnZJSEJ5YjNSdlkyOXNYRzRnSUNBZ1lWdG9jbVZtWGoxY0lpTmNJbDA2WVdaMFpYSXNYRzRnSUNBZ1lWdG9jbVZtWGoxY0ltcGhkbUZ6WTNKcGNIUTZYQ0pkT21GbWRHVnlJSHRjYmlBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWVdKaWNsdDBhWFJzWlYwNllXWjBaWElnZTF4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nWENJZ0tGd2lJR0YwZEhJb2RHbDBiR1VwSUZ3aUtWd2lPMXh1SUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SUc1dmNtMWhiRHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J3Y21Vc1hHNGdJR0pzYjJOcmNYVnZkR1VnZTF4dUlDQWdJSEJoWjJVdFluSmxZV3N0YVc1emFXUmxPaUJoZG05cFpEdGNiaUFnZlZ4dVhHNGdJSFJvWldGa0lIdGNiaUFnSUNCa2FYTndiR0Y1T2lCMFlXSnNaUzFvWldGa1pYSXRaM0p2ZFhBN1hHNGdJSDFjYmx4dUlDQjBjaXhjYmlBZ2FXMW5JSHRjYmlBZ0lDQndZV2RsTFdKeVpXRnJMV2x1YzJsa1pUb2dZWFp2YVdRN1hHNGdJSDFjYmx4dUlDQnBiV2NnZTF4dUlDQWdJRzFoZUMxM2FXUjBhRG9nTVRBd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnY0N4Y2JpQWdhRElzWEc0Z0lHZ3pMRnh1SUNCb05DeGNiaUFnYURVc1hHNGdJR2cySUh0Y2JpQWdJQ0J2Y25Cb1lXNXpPaUF6TzF4dUlDQWdJSGRwWkc5M2N6b2dNenRjYmlBZ2ZWeHVYRzRnSUdneUxGeHVJQ0JvTXlCN1hHNGdJQ0FnY0dGblpTMWljbVZoYXkxaFpuUmxjam9nWVhadmFXUTdYRzRnSUgxY2JseHVJQ0F1Ym1GMmFXZGhkR2x2Yml4Y2JpQWdMbVp2YjNSbGNpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1SWl3aUx5b2hYRzRnS2lCU1lXNWtiMjFwZW1Wa1hHNGdLaUJEYjNCNWNtbG5hSFFnTWpBeE5DMHlNREUxSUZSMWJtZG9jMmxoYnlCTWFYVmNiaUFxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzTndZWEpoYm05cFpDOXlZVzVrYjIxcGVtVmtMMkpzYjJJdmJXRnpkR1Z5TDB4SlEwVk9VMFVwWEc0Z0tpOWNibHh1THk4Z1EyRnNZM1ZzWVhSbElHTnZaR1VnWW1GamEyZHliM1Z1WkNCamIyeHZjaUJpWVhObFpDQnZiaUIwYUdVZ2JHbG5hSFJ1WlhOeklHOW1JR3hwYm1zZ1kyOXNiM0pjYmk1allXeGpMV0puSUNoQWRpa2dkMmhsYmlBb2JHbG5hSFJ1WlhOektFQjJLU0ErUFNBNE1DVXBJSHRjYmlBZ1FHTmhiR010WW1jNklHMXBlQ2dqWm1abUxDQkFkaXdnT1RBbEtUdGNibjFjYmx4dUxtTmhiR010WW1jZ0tFQjJLU0IzYUdWdUlDaHNhV2RvZEc1bGMzTW9RSFlwSUR3Z09EQWxLU0I3WEc0Z0lFQmpZV3hqTFdKbk9pQnRhWGdvSXpBd01Dd2dRSFlzSURjd0pTazdYRzU5WEc1Y2JpNW9hV2RvYkdsbmFIUWdlMXh1WEc0Z0lDOHZJRkpsYzJWMElHSmhZMnRuY205MWJtUmNiaUFnTHk4Z0xtaHBaMmhzYVdkb2RDQStJSEJ5WlNCbWIzSWdZMjl0Ylc5dUlHeHBjWFZwWkNCdFpYUm9iMlJjYmlBZ0x5OGdMbWhwWjJoc2FXZG9kR1Z5TFhKdmRXZGxJQzVvYVdkb2JHbG5hSFFnWm05eUlFZEdUU0J0WlhSb2IyUmNiaUFnTHk4Z1VtVm1PaUJvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2YW1WcmVXeHNMMnBsYTNsc2JDOXdkV3hzTHpRd05UTmNiaUFnUUdocFoyaHNhV2RvZEdWeUxYUnBiblE2SUVCc2FXNXJMV052Ykc5eU8xeHVJQ0ErSUhCeVpTeGNiaUFnTG1ocFoyaHNhV2RvZEdWeUxYSnZkV2RsSUNZZ2UxeHVJQ0FnSUM1allXeGpMV0puS0VCb2FXZG9iR2xuYUhSbGNpMTBhVzUwS1R0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCbVlXUmxLRUJqWVd4akxXSm5MQ0F4TGpVbEtUdGNiaUFnZlZ4dVhHNGdJQzh2SUZKbGMyVjBJR1JsWm1GMWJIUWdZR052WkdWZ1hHNGdJR052WkdVZ2V5QmpiMnh2Y2pvZ1pHVnpZWFIxY21GMFpTaEFiR2x1YXkxamIyeHZjaXdnT1RVbEtUc2dmU0F2THlCT2IzSnRZV3dnWTI5a1pWeHVYRzRnSUM4dklGTndaV05wWVd3Z1ltRmphMmR5YjNWdVpDQm1iM0lnYzNsdWRHRjRJR1Z5Y205eWMxeHVJQ0F1WlhKeUlIc2dZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dabUZrWlNoellYUjFjbUYwWlNoQWFHbG5hR3hwWjJoMFpYSXRkR2x1ZEN3Z01UQWxLU3dnTVRBbEtTQjlJQzh2SUVWeWNtOXlYRzVjYmlBZ0xtTWdJQ0I3SUdadmJuUXRjM1I1YkdVNklHbDBZV3hwWXlCOUlDOHZJRU52YlcxbGJuUmNiaUFnTG1OdElDQjdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZeUI5SUM4dklFTnZiVzFsYm5RdVRYVnNkR2xzYVc1bFhHNGdJQzVqY0NBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUVOdmJXMWxiblF1VUhKbGNISnZZMXh1SUNBdVl6RWdJSHNnWm05dWRDMXpkSGxzWlRvZ2FYUmhiR2xqSUgwZ0x5OGdRMjl0YldWdWRDNVRhVzVuYkdWY2JpQWdMbU56SUNCN0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a095Qm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTWdmU0F2THlCRGIyMXRaVzUwTGxOd1pXTnBZV3hjYmx4dUlDQXVibU1nSUhzZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRZ2ZTQXZMeUJPWVcxbExrTnNZWE56WEc0Z0lDNXVaU0FnZXlCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkNCOUlDOHZJRTVoYldVdVJYaGpaWEIwYVc5dVhHNGdJQzV1WmlBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUU1aGJXVXVSblZ1WTNScGIyNWNibHh1SUNBdWJ5QWdJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5QlBjR1Z5WVhSdmNseHVJQ0F1YjNjZ0lIc2dabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUWdmU0F2THlCUGNHVnlZWFJ2Y2k1WGIzSmtYRzVjYmlBZ0xtZHpJQ0I3SUdadmJuUXRkMlZwWjJoME9pQmliMnhrSUgwZ0x5OGdSMlZ1WlhKcFl5NVRkSEp2Ym1kY2JpQWdMbWRsSUNCN0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFl5QjlJQzh2SUVkbGJtVnlhV011Ulcxd2FGeHVYRzRnSUM1cklDQWdleUJtYjI1MExYZGxhV2RvZERvZ1ltOXNaQ0I5SUM4dklFdGxlWGR2Y21SY2JpQWdMbXQwSUNCN0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a0lIMGdMeThnUzJWNWQyOXlaQzVVZVhCbFhHNGdJQzVyWXlBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUV0bGVYZHZjbVF1UTI5dWMzUmhiblJjYmlBZ0xtdGtJQ0I3SUdadmJuUXRkMlZwWjJoME9pQmliMnhrSUgwZ0x5OGdTMlY1ZDI5eVpDNUVaV05zWVhKaGRHbHZibHh1SUNBdWEzQWdJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5QkxaWGwzYjNKa0xsQnpaWFZrYjF4dUlDQXVhM0lnSUhzZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRZ2ZTQXZMeUJMWlhsM2IzSmtMbEpsYzJWeWRtVmtYRzVjYmlBZ1FIUnZhMlZ1TFcxaGFXNDZYRzRnSUNBZ1pYSnlJQzh2SUVWeWNtOXlYRzRnSUNBZ2VDQXZMeUJQZEdobGNseHVYRzRnSUNBZ2JpQXZMeUJPWVcxbFhHNGdJQ0FnYm1FZ0x5OGdUbUZ0WlM1QmRIUnlhV0oxZEdWY2JpQWdJQ0J1WWlBdkx5Qk9ZVzFsTGtKMWFXeDBhVzVjYmlBZ0lDQmljQ0F2THlCT1lXMWxMa0oxYVd4MGFXNHVVSE5sZFdSdlhHNGdJQ0FnYm1NZ0x5OGdUbUZ0WlM1RGJHRnpjMXh1SUNBZ0lHNXZJQzh2SUU1aGJXVXVRMjl1YzNSaGJuUmNiaUFnSUNCdVpDQXZMeUJPWVcxbExrUmxZMjl5WVhSdmNseHVJQ0FnSUc1cElDOHZJRTVoYldVdVJXNTBhWFI1WEc0Z0lDQWdibVVnTHk4Z1RtRnRaUzVGZUdObGNIUnBiMjVjYmlBZ0lDQnVaaUF2THlCT1lXMWxMa1oxYm1OMGFXOXVYRzRnSUNBZ2Jtd2dMeThnVG1GdFpTNU1ZV0psYkZ4dUlDQWdJRzV1SUM4dklFNWhiV1V1VG1GdFpYTndZV05sWEc0Z0lDQWdibmdnTHk4Z1RtRnRaUzVQZEdobGNseHVJQ0FnSUc1MElDOHZJRTVoYldVdVZHRm5YRzRnSUNBZ2JuWWdMeThnVG1GdFpTNVdZWEpwWVdKc1pWeHVJQ0FnSUhaaklDOHZJRTVoYldVdVZtRnlhV0ZpYkdVdVEyeGhjM05jYmlBZ0lDQjJaeUF2THlCT1lXMWxMbFpoY21saFlteGxMa2RzYjJKaGJGeHVJQ0FnSUhacElDOHZJRTVoYldVdVZtRnlhV0ZpYkdVdVNXNXpkR0Z1WTJWY2JseHVJQ0FnSUdjZ0x5OGdSMlZ1WlhKcFkxeHVJQ0FnSUdka0lDOHZJRWRsYm1WeWFXTXVSR1ZzWlhSbFpGeHVJQ0FnSUdkbElDOHZJRWRsYm1WeWFXTXVSVzF3YUZ4dUlDQWdJR2R5SUM4dklFZGxibVZ5YVdNdVJYSnliM0pjYmlBZ0lDQm5hQ0F2THlCSFpXNWxjbWxqTGtobFlXUnBibWRjYmlBZ0lDQm5hU0F2THlCSFpXNWxjbWxqTGtsdWMyVnlkR1ZrWEc0Z0lDQWdaMjhnTHk4Z1IyVnVaWEpwWXk1UGRYUndkWFJjYmlBZ0lDQm5jQ0F2THlCSFpXNWxjbWxqTGxCeWIyMXdkRnh1SUNBZ0lHZHpJQzh2SUVkbGJtVnlhV011VTNSeWIyNW5YRzRnSUNBZ1ozVWdMeThnUjJWdVpYSnBZeTVUZFdKb1pXRmthVzVuWEc0Z0lDQWdaM1FnTHk4Z1IyVnVaWEpwWXk1VWNtRmpaV0poWTJ0Y2JpQWdJQ0JuYkNBdkx5QkhaVzVsY21sakxreHBibVZ1YjF4dVhHNGdJQ0FnYXlBdkx5QkxaWGwzYjNKa1hHNGdJQ0FnYTJNZ0x5OGdTMlY1ZDI5eVpDNURiMjV6ZEdGdWRGeHVJQ0FnSUd0a0lDOHZJRXRsZVhkdmNtUXVSR1ZqYkdGeVlYUnBiMjVjYmlBZ0lDQnJiaUF2THlCTFpYbDNiM0prTGs1aGJXVnpjR0ZqWlZ4dUlDQWdJR3R3SUM4dklFdGxlWGR2Y21RdVVITmxkV1J2WEc0Z0lDQWdhM0lnTHk4Z1MyVjVkMjl5WkM1U1pYTmxjblpsWkZ4dUlDQWdJR3QwSUM4dklFdGxlWGR2Y21RdVZIbHdaVnh1SUNBZ0lHdDJJQzh2SUV0bGVYZHZjbVF1Vm1GeWFXRmliR1ZjYmx4dUlDQWdJSGNnTHk4Z1ZHVjRkQzVYYUdsMFpYTndZV05sWEc1Y2JpQWdJQ0JzSUM4dklFeHBkR1Z5WVd4Y2JseHVJQ0FnSUd4a0lDOHZJRXhwZEdWeVlXd3VSR0YwWlZ4dVhHNGdJQ0FnY3lBdkx5Qk1hWFJsY21Gc0xsTjBjbWx1WjF4dUlDQWdJSE5pSUM4dklFeHBkR1Z5WVd3dVUzUnlhVzVuTGtKaFkydDBhV05yWEc0Z0lDQWdjMk1nTHk4Z1RHbDBaWEpoYkM1VGRISnBibWN1UTJoaGNseHVJQ0FnSUhOa0lDOHZJRXhwZEdWeVlXd3VVM1J5YVc1bkxrUnZZMXh1SUNBZ0lITXlJQzh2SUV4cGRHVnlZV3d1VTNSeWFXNW5Ma1J2ZFdKc1pWeHVJQ0FnSUhObElDOHZJRXhwZEdWeVlXd3VVM1J5YVc1bkxrVnpZMkZ3WlZ4dUlDQWdJSE5vSUM4dklFeHBkR1Z5WVd3dVUzUnlhVzVuTGtobGNtVmtiMk5jYmlBZ0lDQnphU0F2THlCTWFYUmxjbUZzTGxOMGNtbHVaeTVKYm5SbGNuQnZiRnh1SUNBZ0lITjRJQzh2SUV4cGRHVnlZV3d1VTNSeWFXNW5MazkwYUdWeVhHNGdJQ0FnYzNJZ0x5OGdUR2wwWlhKaGJDNVRkSEpwYm1jdVVtVm5aWGhjYmlBZ0lDQnpNU0F2THlCTWFYUmxjbUZzTGxOMGNtbHVaeTVUYVc1bmJHVmNiaUFnSUNCemN5QXZMeUJNYVhSbGNtRnNMbE4wY21sdVp5NVRlVzFpYjJ4Y2JseHVJQ0FnSUcwZ0x5OGdUR2wwWlhKaGJDNU9kVzFpWlhKY2JpQWdJQ0J0WmlBdkx5Qk1hWFJsY21Gc0xrNTFiV0psY2k1R2JHOWhkRnh1SUNBZ0lHMW9JQzh2SUV4cGRHVnlZV3d1VG5WdFltVnlMa2hsZUZ4dUlDQWdJRzFwSUM4dklFeHBkR1Z5WVd3dVRuVnRZbVZ5TGtsdWRHVm5aWEpjYmlBZ0lDQnBiQ0F2THlCTWFYUmxjbUZzTGs1MWJXSmxjaTVKYm5SbFoyVnlMa3h2Ym1kY2JpQWdJQ0J0YnlBdkx5Qk1hWFJsY21Gc0xrNTFiV0psY2k1UFkzUmNiaUFnSUNCdFlpQXZMeUJNYVhSbGNtRnNMazUxYldKbGNpNUNhVzVjYmlBZ0lDQnRlQ0F2THlCTWFYUmxjbUZzTGs1MWJXSmxjaTVQZEdobGNseHVYRzRnSUNBZ2J5QXZMeUJQY0dWeVlYUnZjbHh1SUNBZ0lHOTNJQzh2SUU5d1pYSmhkRzl5TGxkdmNtUmNibHh1SUNBZ0lIQWdMeThnVUhWdVkzUjFZWFJwYjI1Y2JpQWdJQ0J3YVNBdkx5QlFkVzVqZEhWaGRHbHZiaTVKYm1ScFkyRjBiM0pjYmlBZ08xeHVYRzRnSUM4dklFZGxibVZ5WVhSbElHMWhhVzRnYUdsbmFHeHBaMmgwYzF4dUlDQXZMeUJTWldZNklHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOXNaWE56TDJ4bGMzTXVhbk12YVhOemRXVnpMekl3TnpGY2JpQWdMbXh2YjNBdGJXRnBiaUFvUUdrcElIZG9aVzRnS0VCcElEd2dLR3hsYm1kMGFDaEFkRzlyWlc0dGJXRnBiaWtnS3lBeEtTa2dlMXh1SUNBZ0lFQjBiMnRsYmpvZ1pYaDBjbUZqZENoQWRHOXJaVzR0YldGcGJpd2dRR2twTzF4dVhHNGdJQ0FnTGtCN2RHOXJaVzU5SUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUJ0YVhnb2MzQnBiaWhBWTI5a1pTMWpiMnh2Y2l3Z0tFQnBJQ29nTXpZd0lDOGdiR1Z1WjNSb0tFQjBiMnRsYmkxdFlXbHVLU2twTENCQWJHbHVheTFqYjJ4dmNpd2dPREFsS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdMbXh2YjNBdGJXRnBiaWdvUUdrZ0t5QXhLU2s3WEc0Z0lIMWNiaUFnTG14dmIzQXRiV0ZwYmlneEtUdGNibHh1SUNCQWRHOXJaVzR0WTI5dGJXVnVkSE02WEc0Z0lDQWdZeUF2THlCRGIyMXRaVzUwWEc0Z0lDQWdZMlFnTHk4Z1EyOXRiV1Z1ZEM1TmRXeDBhV3hwYm1WY2JpQWdJQ0JqYlNBdkx5QkRiMjF0Wlc1MExrMTFiSFJwYkdsdVpWeHVJQ0FnSUdOd0lDOHZJRU52YlcxbGJuUXVVSEpsY0hKdlkxeHVJQ0FnSUdNeElDOHZJRU52YlcxbGJuUXVVMmx1WjJ4bFhHNGdJQ0FnWTNNZ0x5OGdRMjl0YldWdWRDNVRjR1ZqYVdGc1hHNGdJRHRjYmx4dUlDQXZMeUJIWlc1bGNtRjBaU0JvYVdkb2JHbG5hSFFnWm05eUlHTnZiVzFsYm5SelhHNGdJQzVzYjI5d0xXTnZiVzFsYm5SeklDaEFhU2tnZDJobGJpQW9RR2tnUENBb2JHVnVaM1JvS0VCMGIydGxiaTFqYjIxdFpXNTBjeWtnS3lBeEtTa2dlMXh1SUNBZ0lFQjBiMnRsYmpvZ1pYaDBjbUZqZENoQWRHOXJaVzR0WTI5dGJXVnVkSE1zSUVCcEtUdGNibHh1SUNBZ0lDNUFlM1J2YTJWdWZTQjdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ2JXbDRLR1JsYzJGMGRYSmhkR1VvYzNCcGJpaEFZMjlrWlMxamIyeHZjaXdnS0VCcElDb2dNell3SUM4Z2JHVnVaM1JvS0VCMGIydGxiaTFqYjIxdFpXNTBjeWtwS1N3Z056QWxLU3dnUUd4cGJtc3RZMjlzYjNJc0lEa3dKU2s3WEc0Z0lDQWdJQ0J2Y0dGamFYUjVPaUF1Tmp0Y2JpQWdJQ0I5WEc0Z0lDQWdMbXh2YjNBdFkyOXRiV1Z1ZEhNb0tFQnBJQ3NnTVNrcE8xeHVJQ0I5WEc0Z0lDNXNiMjl3TFdOdmJXMWxiblJ6S0RFcE8xeHVYRzRnSUM4dklGSmxjMlYwSUdOdlpHVWdZbXh2WTJ0eklHRndjR1ZoY21GdVkyVWdkMmwwYUNCc2FXNWxJRzUxYldKbGNuTmNiaUFnZEdGaWJHVWdlMXh1WEc0Z0lDQWdKaXhjYmlBZ0lDQjBhQ3hjYmlBZ0lDQjBaQ3hjYmlBZ0lDQjBaQ0J3Y21VZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnSUNBZ0lHMWhjbWRwYmpvZ01EdGNiaUFnSUNBZ0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNREFsTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzVzYVc1bGJtOGdlMXh1SUNBZ0lDQWdZMjlzYjNJNklHUmxjMkYwZFhKaGRHVW9RR3hwYm1zdFkyOXNiM0lzSURrMUpTazdYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVOVHRjYmlBZ0lDQWdJSFZ6WlhJdGMyVnNaV04wT2lCdWIyNWxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDNWpiMlJsSUh0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dNV1Z0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWwxOSAqLyIsIi8vXG4vLyBNaXhpbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEludmVydCBjb2xvciBzd2l0Y2hlciBmb3IgaW1hZ2VzIGFuZCB2aWRlb3Ncbi8vIDpyb290IHsgZmlsdGVyOiBpbnZlcnQoMTAwJSk7IH1cblxuLy8gaHR0cDovL25pY29sYXNnYWxsYWdoZXIuY29tL21pY3JvLWNsZWFyZml4LWhhY2svXG4uY2Yge1xuXG4gICY6YmVmb3JlLCAmOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG5cbiAgJjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cblxuLmhlYWRpbmcoKSB7XG4gIGZvbnQtc2l6ZTogMzMwJTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBsZXR0ZXItc3BhY2luZzogLS4wNmVtO1xufVxuXG4uc3ViLWhlYWRpbmcoKSB7XG4gIGZvbnQtc2l6ZTogNzIlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLnBhZGRpbmctb2Zmc2V0KEBwYWRkaW5nLWxlZnQsIEBwYWRkaW5nLXJpZ2h0KSB7XG4gIHBhZGRpbmctbGVmdDogQHBhZGRpbmctbGVmdDtcbiAgcGFkZGluZy1yaWdodDogQHBhZGRpbmctcmlnaHQ7XG59XG5cbi5tYXJnaW4tb2Zmc2V0KEBtYXJnaW4tbGVmdCwgQG1hcmdpbi1yaWdodCkge1xuICBtYXJnaW4tbGVmdDogQG1hcmdpbi1sZWZ0O1xuICBtYXJnaW4tcmlnaHQ6IEBtYXJnaW4tcmlnaHQ7XG59XG5cbi5zcGxpdGVyKCkge1xuICBAc2l6ZTogNHB4O1xuICBAY29sb3I6IEB0ZXh0LWNvbG9yO1xuXG4gICY6OmJlZm9yZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IEBzaXplO1xuICAgIGhlaWdodDogQHNpemU7XG4gICAgbWFyZ2luOiAyZW0gYXV0bztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYmFja2dyb3VuZDogQGNvbG9yO1xuICAgIGJveC1zaGFkb3c6IChAc2l6ZSAqIDUpIDAgMCAwIEBjb2xvciwgKEBzaXplICogLTUpIDAgMCAwIEBjb2xvcjtcbiAgfVxufVxuIiwiLy9cbi8vIFJlc2V0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgcGFkZGluZzogMCBAc3BhY2UtbGc7XG4gIG1hcmdpbjogMCBhdXRvIDA7XG4gIGZvbnQtZmFtaWx5OiBAZm9udHN0YWNrLWRlZmF1bHQ7XG4gIGZvbnQtc2l6ZTogQGZvbnQtc2l6ZTtcbiAgbGluZS1oZWlnaHQ6IEBsaW5lLWhlaWdodDtcbiAgY29sb3I6IEB0ZXh0LWNvbG9yO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVsZWdpYmlsaXR5O1xuICBiYWNrZ3JvdW5kOiBAYmFja2dyb3VuZC1jb2xvcjtcbiAgaW1hZ2UtcmVuZGVyaW5nOiBvcHRpbWl6ZXF1YWxpdHk7XG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTtcblxuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpIHtcbiAgICAucGFkZGluZy1vZmZzZXQoQHNwYWNlLW1kLCBAc3BhY2UtbWQpO1xuICAgIGZvbnQtc2l6ZTogKEBmb250LXNpemUgKiAxLjQpO1xuICB9XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgLnBhZGRpbmctb2Zmc2V0KEBzcGFjZS1zbSwgQHNwYWNlLXNtKTtcbiAgICBmb250LXNpemU6IChAZm9udC1zaXplICogMi40KTtcbiAgfVxuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC14cykge1xuICAgIGZvbnQtc2l6ZTogKEBmb250LXNpemUgKiAzLjIpO1xuICB9XG5cbiAgLy8gQWxsIGlPUyBkZXZpY2VzLCB0aGUgZWFzaWVzdCB3YXlcbiAgQG1lZGlhIChtYXgtZGV2aWNlLXdpZHRoOiA0ODBweCksIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG4gIH1cblxuICAvLyBBIHNlbWl0cmFuc2x1Y2VudCBiYXIgYXQgdGhlIHRvcCBvZiB0aGUgcGFnZVxuICAmOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IC05OTk5O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMXZtYXg7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogQGxpbmstY29sb3I7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBvcGFjaXR5OiAuMjtcbiAgfVxufVxuXG4vLyBSZXNldCBmb250cyBmb3IgcmVsZXZhbnQgZWxlbWVudHNcbmlucHV0LFxuYnV0dG9uLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbn1cblxuLy8gUmVzZXQgdW51c3VhbCBGaXJlZm94LW9uLUFuZHJvaWQgZGVmYXVsdCBzdHlsZS5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzL2lzc3Vlcy8yMTRcbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0W211bHRpcGxlXSxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbn1cblxuLy8gUmVzZXQgY29tbW9uIGVsZW1lbnRzXG5hLCBidXR0b24ge1xuICBjb2xvcjogQHRleHQtY29sb3I7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgLjVzIGVhc2UsIGJvcmRlci1jb2xvciAuNXMgZWFzZSwgYmFja2dyb3VuZCAuNXMgZWFzZSwgb3BhY2l0eSAxLjVzIGVhc2U7XG5cbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgLjFzIGVhc2UsIGJvcmRlci1jb2xvciAuMXMgZWFzZSwgYmFja2dyb3VuZCAuMXMgZWFzZSwgb3BhY2l0eSAuMXMgZWFzZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB0ZXh0LWRlY29yYXRpb24tc2tpcDogaW5rO1xuICB9XG5cbiAgJltkaXNhYmxlZF0ge1xuICAgIG9wYWNpdHk6IC40O1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIH1cbn1cblxuaW1nLCBociB7XG4gIGJvcmRlcjogMDtcbn1cblxuZGVsIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogZmFkZShAbGluay1jb2xvciwgMTAlKTtcbn1cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IEB0ZXh0LWNvbG9yO1xuICBvcGFjaXR5OiAuMTtcbn1cbiIsIi8vXG4vLyBDb21tb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFNpdGUgbG9nb1xuLmxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxdm1heDtcbiAgbWFyZ2luOiAwIDAgMS40dm1heDtcbiAgYmFja2dyb3VuZDogQGxpbmstY29sb3I7XG4gIG9wYWNpdHk6IDA7XG5cbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQ6IEB0ZXh0LWNvbG9yO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICBoMSB7XG4gICAgaGVpZ2h0OiAwO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OTllbTtcbiAgfVxufVxuXG4vLyBNYWluIG5hdmlnYXRpb25cbi5uYXZpZ2F0aW9uIHtcbiAgbWFyZ2luOiAwIDAgMTZ2bWluO1xuICBtYXJnaW4tcmlnaHQ6IC0xLjFlbTtcbiAgbWFyZ2luLWxlZnQ6IC0xLjFlbTtcbiAgZm9udC1zaXplOiA2MCU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBsZXR0ZXItc3BhY2luZzogLjQ1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBsaW5lLWhlaWdodDogMjtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgYSB7XG4gICAgICBwYWRkaW5nOiAuNWVtIDEuMmVtO1xuXG4gICAgICAmOmhvdmVyLFxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIGNvbG9yOiBAbGluay1jb2xvcjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBDdXJyZW50bHkgYWN0aXZhdGVkIHBhZ2Ugb3IgY2F0ZWdvcnkgY2xhc3Ncbi5jdXJyZW50IHtcblxuICBhIHtcbiAgICBjb2xvcjogQGxpbmstY29sb3I7XG4gIH1cbn1cblxuLy8gTGF0ZXN0IHdvcmsgbGlua1xuYm9keTpob3ZlciAubGF0ZXN0IHtcbiAgY29sb3I6IEBsaW5rLWNvbG9yICFpbXBvcnRhbnQ7XG59XG5cbi8vIFBlcnNvbiBzdGF0dXNcbi5jb250ZW50IC5zdGF0dXMge1xuICBtYXJnaW46IDF2bWluIDAgMDtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuXG4gICY6YmVmb3JlIHtcbiAgICBAc2l6ZTogLjhlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IEBzaXplO1xuICAgIGhlaWdodDogQHNpemU7XG4gICAgbWFyZ2luLXJpZ2h0OiAuOHZ3O1xuICAgIGJhY2tncm91bmQ6IGZhZGUoQHRleHQtY29sb3IsIDIwJSk7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cblxuICAmLmF2YWlsYWJsZSB7XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMGNmO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgY29sb3I6ICMwY2Y7XG4gICAgfVxuICB9XG5cbiAgJi51bmF2YWlsYWJsZSB7XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjY2NjO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgfVxuICB9XG59XG5cbi8vIE1haW4gY29udGVudFxuLmNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxNnZtaW47XG5cbiAgLy8gRm9yIHNvbWUgc3BlY2lmaWVkIHBvc3RzIGluIHdvcmsgY2F0ZWdvcnlcbiAgLmNmO1xuXG4gIC8vIFJlbW92ZSBleHRyYSBzcGFjZSBmb3IgdGhlIGxhc3QgcGFyYWdyYXBoIGluIHRoZSBjb250YWluZXJcbiAgYXJ0aWNsZSB7XG5cbiAgICAvLyBhcnRpY2xlID4gcFxuICAgID4gKjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcblxuICAgICAgLy8gYXJ0aWNsZSA+IHVsID4gbGksIGFydGljbGUgPiAuZm9vdG5vdGVzID4gb2xcbiAgICAgID4gKjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuXG4gICAgICAgIC8vIGFydGljbGUgPiB1bCA+IGxpID4gcCwgYXJ0aWNsZSA+IC5mb290bm90ZXMgPiBvbCA+IGxpXG4gICAgICAgID4gKjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgICAvLyBhcnRpY2xlID4gLmZvb3Rub3RlcyA+IG9sID4gbGkgPiBwXG4gICAgICAgICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFBvc3QgLyBwYWdlIGNvbnRlbnQgZmlyc3QgZWxlbWVudCBmaXhcbiAgLnBvc3QtY29udGVudCxcbiAgLnBhZ2UtY29udGVudCB7XG5cbiAgICA+ICo6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXRvcDogMDtcblxuICAgICAgPiAqOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4gIHAge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNnJlbTtcbiAgICBsaW5lLWhlaWdodDogKEBsaW5lLWhlaWdodCAqIDEuMik7XG4gIH1cblxuICBoZWFkZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnZtaW47XG5cbiAgICBoMSB7XG4gICAgICBtYXJnaW46IDAgMCAuMWVtO1xuICAgICAgLmhlYWRpbmcoKTtcbiAgICAgIGh5cGhlbnM6IG5vbmU7XG4gICAgICBsaW5lLWhlaWdodDogMS4xO1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgICAgLy8gT3ZlcnJpZGUgdmlld3BvcnQgdW5pdHMgZGVmaW5lZCBpbiBwb3N0Lmh0bWxcbiAgICAgICAgZm9udC1zaXplOiAyODAlO1xuICAgICAgfVxuXG4gICAgICBzdmcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgfVxuXG4gICAgICAvLyBPdmVycmlkZSBtYXJnaW4gZnJvbSBhcnRpY2xlIGltZ1xuICAgICAgc3ZnLFxuICAgICAgaW1nIHtcbiAgICAgICAgLy8gYXZvaWQgaGVhZGVyIHN0cmV0Y2hlZCBieSBnbG9iYWwgaW1nIHN0eWxlc1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAuM2VtO1xuXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIaWRlIGFjdHVhbCB0ZXh0IGlmIHBvc3QgdGl0bGUgaXMgaW1hZ2Ugb3IgU1ZHLCB0aGUgYWN0dWFsIHRleHQgaGVscHMgU2FmYXJpIGdldCB0aGUgcmVhbCBwb3N0IHRpdGxlIGluIFJlYWRlciBtb2RlLlxuICAgIC5pbWFnZS10aXRsZSB7XG4gICAgICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgfVxuXG4gICAgLmxhdGVzdC1wb3N0IHtcbiAgICAgIG1hcmdpbi10b3A6IDE2dm1pbjtcbiAgICAgIGZvbnQtc2l6ZTogODAlO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG5cbiAgICAgIGEge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzbWFsbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi10b3A6IDJ2bWluO1xuICAgIH1cbiAgfVxuXG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNiB7XG4gICAgbWFyZ2luOiAxMHZtaW4gMCAxcmVtO1xuICAgIC5zdWItaGVhZGluZygpO1xuICB9XG5cbiAgdWwsXG4gIG9sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjhyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDEuMmVtO1xuXG4gICAgbGkge1xuICAgICAgbGluZS1oZWlnaHQ6IChAbGluZS1oZWlnaHQgKiAxLjIpO1xuXG4gICAgICA+IHVsLFxuICAgICAgPiBvbCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgb2wge1xuICAgIG1hcmdpbi1sZWZ0OiAxLjc1ZW07XG4gIH1cblxuICBpbWcsXG4gIHZpZGVvLFxuICBpZnJhbWUsXG4gIC5icm93c2VyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS14cyAqIDIpICsgKEBib3JkZXItZGVmYXVsdCAqIDIpKTtcbiAgICBtYXJnaW46IDAgY2FsYygtQHNwYWNlLXhzIC0gQGJvcmRlci1kZWZhdWx0KSAxLjhyZW07XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpIHtcbiAgICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2UtbWQsIC1Ac3BhY2UtbWQpO1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSArIChAc3BhY2UtbWQgKiAyKSk7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXNtLCAtQHNwYWNlLXNtKTtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoQHNwYWNlLXNtICogMikpO1xuICAgIH1cblxuICAgIC8vIGF2b2lkIGltYWdlcyB3aXRoIGAubm8tZW5sYXJnZWAgc3RyZXRjaGVkIGJ5IGdsb2JhbCBpbWcgc3R5bGVzXG4gICAgJi5uby1lbmxhcmdlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxuICB9XG5cbiAgYmxvY2txdW90ZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDIuOHJlbTtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygtQHNwYWNlLXhzIC0gQGJvcmRlci1kZWZhdWx0KTtcbiAgICBmb250LXNpemU6IDkwJTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgPiBwIHtcbiAgICAgIHBhZGRpbmctbGVmdDogQHNwYWNlLXhzO1xuICAgICAgYm9yZGVyLWxlZnQ6IEBib3JkZXItZGVmYXVsdCBzb2xpZDtcbiAgICAgIC8vIFRPRE86IE5lZWQgYmV0dGVyIHNvbHV0aW9uXG4gICAgICAvLyBXZSB3aWxsIHJlc2V0IHRoZSBjb21tb24gbWFyZ2luLWJvdG90bSB0byBnZXQgZ2FwbGVzcyBib3JkZXJzIGZvciBibG9ja3F1b3Rlc1xuICAgICAgLy8gVGhpcyBjb3VsZCBoZWxwIGZpeCBodHRwczovL2dpdGh1Yi5jb20vYW1zZi9hbXNmLWN1cnRhbmEvaXNzdWVzLzRcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxLjZyZW07XG4gICAgICAvLyBOb3cgcmVzZXQgZGVmYXVsdCBtYXJnaW4gYnV0dG9uIGZyb20gZ2xvYmFsIGRlZmluZVxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICAgLy8gUmVtb3ZlIGV4dHJhIHBhZGRpbmcgZm9yIHRoZSBsYXN0IGVsZW1lbnQsIHJlLWFwcGx5IG1hcmdpblxuICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS42cmVtO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgICAgLnBhZGRpbmctb2Zmc2V0KGNhbGMoQHNwYWNlLXNtIC0gQGJvcmRlci1kZWZhdWx0KSwgQHNwYWNlLXNtKTtcbiAgICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSwgLUBzcGFjZS1zbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9vdGVyIHtcbiAgICAgIC5jZjtcbiAgICB9XG5cbiAgICBjaXRlIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxuICAgICAgJjpiZWZvcmUge1xuICAgICAgICAvLyBodHRwOi8vd3d3LmZpbGVmb3JtYXQuaW5mby9pbmZvL3VuaWNvZGUvY2hhci8yNTAwL2luZGV4Lmh0bVxuICAgICAgICBjb250ZW50OiBcIlxcMjUwMFxcMjUwMFxcMDBhMFwiXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaHIge1xuICAgIC5zcGxpdGVyKCk7XG4gIH1cblxuICBzdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICB9XG5cbiAgY29kZSxcbiAgcHJlIHtcbiAgICBmb250LWZhbWlseTogQGZvbnRzdGFjay1tb25vc3BhY2U7XG4gICAgY29sb3I6IEBjb2RlLWNvbG9yO1xuICB9XG5cbiAgLy8gT25seSBhcHBseSB3b3JkIGJyZWFraW5nIHJ1bGUgZm9yIGNvZGVzIGluIHBhcmFncmFwaHNcbiAgcCBjb2RlLFxuICBsaSBjb2RlIHtcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4gIH1cblxuICBwcmUge1xuICAgIHBhZGRpbmc6IEBzcGFjZS14cztcbiAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXhzLCAtQHNwYWNlLXhzKTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjhyZW07XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBmb250LXNpemU6IDgwJTtcbiAgICBsaW5lLWhlaWdodDogKEBsaW5lLWhlaWdodCAqIDEuMik7XG4gICAgYmFja2dyb3VuZDogZmFkZSgjMDhmLCA0JSk7XG4gICAgLy8gQm91bmNpbmcgc2Nyb2xsIGZpeCBmb3IgaU9TXG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSB7XG4gICAgICAucGFkZGluZy1vZmZzZXQoQHNwYWNlLW1kLCBAc3BhY2UtbWQpO1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1tZCwgLUBzcGFjZS1tZCk7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICAucGFkZGluZy1vZmZzZXQoQHNwYWNlLXNtLCBAc3BhY2Utc20pO1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSwgLUBzcGFjZS1zbSk7XG4gICAgfVxuICB9XG5cbiAgLy8gTmV3c2xldHRlciBzdWJzY3JpcHRpb24gZm9ybSBpbiBwYWdlIFwic3RvcmVcIlxuICBmb3JtIHtcblxuICAgIGlucHV0IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAxdm1pbiAwO1xuICAgICAgbWFyZ2luOiAwIDAgMS44cmVtO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGZhZGUoQHRleHQtY29sb3IsIDIwJSk7XG4gICAgICAvLyBSZW1vdmUgYm9yZGVyLXJhZGl1cyBmb3IgaU9TIGRldmljZXNcbiAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgdHJhbnNpdGlvbjogcGFkZGluZyAuMnMgZWFzZTtcblxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIHBhZGRpbmc6IDF2bWluO1xuICAgICAgICBiYWNrZ3JvdW5kOiBmYWRlKEB0ZXh0LWNvbG9yLCAyJSk7XG4gICAgICAgIGJvcmRlci1jb2xvcjogQHRleHQtY29sb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gUmVzdCBmb3JtIHZhbGlkYXRpb24gc3R5bGVzLCBib3Jyb3dlZCBmcm9tIEJvb3RzdHJhcFxuICBpbnB1dCxcbiAgdGV4dGFyZWEsXG4gIHNlbGVjdCB7XG5cbiAgICAmOmZvY3VzOnJlcXVpcmVkOmludmFsaWQge1xuXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgYmFja2dyb3VuZDogZmFkZShAbGluay1jb2xvciwgNSUpO1xuICAgICAgICBib3JkZXItY29sb3I6IEBsaW5rLWNvbG9yO1xuICAgICAgICAvLyBPdmVycmlkZSBGaXJlZm94IGRlZmF1bHQgc3R5bGVzXG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdGFibGUge1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gICAgZm9udC1zaXplOiA5MCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS14cywgLUBzcGFjZS14cyk7XG4gICAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xuXG4gICAgdGgsXG4gICAgdGQge1xuICAgICAgcGFkZGluZzogLjZlbSBAc3BhY2UteHM7XG4gICAgfVxuXG4gICAgdGgge1xuICAgICAgYm9yZGVyLWJvdHRvbTogQGJvcmRlci1kZWZhdWx0IHNvbGlkIGZhZGUoQHRleHQtY29sb3IsIDYlKTtcbiAgICAgIC8vIE92ZXJyaWRlIGRlZmF1bHQgdXNlciBhZ2VudCBzdHlsZXNoZWV0XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cblxuICAgIHRkIHtcbiAgICAgIGJvcmRlci10b3A6IEBib3JkZXItc20gc29saWQgZmFkZShAdGV4dC1jb2xvciwgNCUpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBQb3N0cyB3aXRoIEFzaWFuIGNoYXJhY3RlcnNcbjpsYW5nKHpoKSxcbjpsYW5nKGphKSB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG5cbiAgaGVhZGVyIHtcblxuICAgICYsXG4gICAgJiAqIHtcbiAgICAgIHRleHQtYWxpZ246IHN0YXJ0O1xuICAgIH1cbiAgfVxufVxuXG4vLyBGaXggZW1wdHkgc3BhY2Ugd2hlbiBhIHBhcmFncmFwaCBzdGFydHMgd2l0aCBxdW90ZSBtYXJrcyBhbmQgc29tZSBhc2lhbiBwdW5jdHVhdGlvbiBtYXJrc1xuLmxlYWRpbmctaW5kZW50LWZpeCB7XG4gIHRleHQtaW5kZW50OiAtLjM5ZW07XG59XG5cbi8vIFR3ZWV0IGJ1dHRvbiBtYXJnaW4gZml4XG4ucG9zdC1tb2RpZmllZC1kYXRlIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4vLyBMYXJnZXR5cGUgc3R5bGVzIChyZXBsYWNlcyBidXR0b24gc3R5bGVzKVxuLmxhcmdldHlwZSB7XG4gIC5oZWFkaW5nKCk7XG4gIGZvbnQtc2l6ZTogMjAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtICFpbXBvcnRhbnQ7XG59XG5cbi8vIEJyb3NlciBmcmFtZSBmb3IgaW1hZ2VzIGluIGNhdGVnb3J5IFwid29ya1wiXG4uYnJvd3NlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjEpO1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgLjA1KTtcblxuICAvLyBSZXNldCBicm93c2VyIGJvcmRlci1yYWRpdXMgZm9yIHNtYWxsIHNjcmVlbnNcbiAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSwgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG5cbiAgJjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDhweDtcbiAgICBsZWZ0OiAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA4cHg7XG4gICAgaGVpZ2h0OiA4cHg7XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigjZjI0ZTU5LCAzMCUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJveC1zaGFkb3c6XG4gICAgICAgIDE2cHggMCAwIDAgICBmYWRlKGxpZ2h0ZW4oI2ZhYzUzNiwgMzAlKSwgOTYlKVxuICAgICAgLCAzMnB4IDAgMCAwICAgZmFkZShsaWdodGVuKCMyNmU5M2QsIDMwJSksIDk2JSlcbiAgICAgICwgICAgMCAwIDAgMXB4IGZhZGUoZGFya2VuKCNmMjRlNTksIDMwJSksIDMwJSlcbiAgICAgICwgMTZweCAwIDAgMXB4IGZhZGUoZGFya2VuKCNmYWM1MzYsIDMwJSksIDMwJSlcbiAgICAgICwgMzJweCAwIDAgMXB4IGZhZGUoZGFya2VuKCMyNmU5M2QsIDMwJSksIDMwJSlcbiAgICA7XG4gIH1cblxuICBpbWcge1xuICAgIC8vIGF2b2lkIGltYWdlcyBpbnNpZGUgLmJyb3dzZXIgc3RyZXRjaGVkIGJ5IGdsb2JhbCBpbWcgc3R5bGVzXG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBib3gtc2hhZG93OiAwIC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgLjA1KTtcbiAgfVxufVxuXG4vLyBFeHRyYSBvZmZzZXQgZm9yIE9TIFggc2NyZWVuc2hvdHNcbi5zY3JlZW5zaG90LW1hYyB7XG4gIEBvc3gtc2hhZG93LXNpemU6IDU2cHg7XG4gIC5tYXJnaW4tb2Zmc2V0KC1Ab3N4LXNoYWRvdy1zaXplLCAtQG9zeC1zaGFkb3ctc2l6ZSk7XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSwgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAubWFyZ2luLW9mZnNldCgwLCAwKTtcbiAgfVxufVxuXG4vLyBTcGVjaWFsIHBhcmFncmFwaCB3aXRoIGJvcmRlciBsaW5lXG4ubm90ZSxcbi5zdG9yZSxcbi5kb3dubG9hZCB7XG4gIHBhZGRpbmctbGVmdDogQHNwYWNlLXhzO1xuICBtYXJnaW4tbGVmdDogY2FsYygtQHNwYWNlLXhzIC0gQGJvcmRlci1kZWZhdWx0KTtcbiAgYm9yZGVyLWxlZnQ6IEBib3JkZXItZGVmYXVsdCBzb2xpZCBAbGluay1jb2xvcjtcblxuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAucGFkZGluZy1vZmZzZXQoY2FsYyhAc3BhY2Utc20gLSBAYm9yZGVyLWRlZmF1bHQpLCBAc3BhY2Utc20pO1xuICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2Utc20sIC1Ac3BhY2Utc20pO1xuICB9XG59XG5cbi8vIFJlZmVyZW5jZSBub3RlcyBhbmQgbGlua3MgaW4gcG9zdFxuLmZvb3Rub3RlcyB7XG4gIC5zcGxpdGVyKCk7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG46dGFyZ2V0IHtcblxuICAvLyBSZWRjYXJwZXQtc3R5bGVcbiAgW3Jldj1mb290bm90ZV0sXG4gIFtyZWw9Zm9vdG5vdGVdLFxuXG4gIC8vIEtyYW1kb3duLXN0eWxlXG4gIC5yZXZlcnNlZm9vdG5vdGUsXG4gIC5mb290bm90ZSB7XG4gICAgY29sb3I6IEBsaW5rLWNvbG9yO1xuICB9XG59XG5cbi8vIFBvc3QgbGlzdCBpbiBcIndvcmtcIiBhbmQgXCJub3RlXCJcbi5saXN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCAwIC40cmVtO1xuXG4gIGgxIHtcbiAgICAuaGVhZGluZygpO1xuICAgIGZvbnQtc2l6ZTogMjAwJTtcbiAgICBsaW5lLWhlaWdodDogMS4xO1xuICAgIC8vIE92ZXJyaWRlIGhlYWRpbmcgZGVmaW5lcyBpbiAuY29udGVudFxuICAgIG9wYWNpdHk6IDE7XG4gICAgbWFyZ2luOiAwO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICAvLyBIaWRlIGV4dGVybmFsIGxpbmsgZm9yIHBvc3QgbGlzdFxuICAgICAgZm9udC1zaXplOiAxODAlO1xuICAgIH1cbiAgfVxuXG4gIC5leHRlcm5hbCB7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIC8vIEhpZGUgZXh0ZXJuYWwgbGluayBmb3IgcG9zdCBsaXN0XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufVxuXG4vLyBBIGRvdCBzeW1ib2wgZm9yIGV4dGVybmFsIGxpbmtzXG4uZXh0ZXJuYWwge1xuXG4gIC5kb3Qge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogLjdyZW07XG4gICAgaGVpZ2h0OiAuN3JlbTtcbiAgICBtYXJnaW46IDAgLjFlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGJhY2tncm91bmQ6IEB0ZXh0LWNvbG9yO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjRzIGVhc2U7XG5cbiAgICAvLyBFeHRyYSBtYXJnaW4gZm9yIGV4dGVybmFsIHN5bWJvbCBpbiBzaW5ndWxhclxuICAgICYtLXBvc3Qge1xuICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgfVxuICB9XG5cbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG5cbiAgICAuZG90IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS40KTtcbiAgICB9XG4gIH1cbn1cblxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDAgMCAxNnZtaW47XG4gIGZvbnQtc2l6ZTogNzUlO1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xuXG4gIHVsIHtcblxuICAgIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcblxuICAgICAgJjphZnRlciB7XG4gICAgICAgIHBhZGRpbmc6IDAgLjZ2dztcbiAgICAgICAgY29udGVudDogXCIgLyBcIjtcbiAgICAgICAgb3BhY2l0eTogLjM7XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgY29udGVudDogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy9cbi8vIFBsdWdpbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFN0eWxlIGZpeGVzIGZvciBwbHVnaW5zXG5cbi8vIGludGVuc2UuanNcbi5sb2FkZWQge1xuXG4gIC5pbnRlbnNlLXdyYXAge1xuXG4gICAgYXJ0aWNsZSBwID4gaW1nOm5vdCgubm8taW50ZW5zZSkge1xuICAgICAgY3Vyc29yOiB6b29tLWluO1xuICAgIH1cbiAgfVxuXG4gICYuaW50ZW5zZS1vcGVuIHtcbiAgICBjdXJzb3I6IHpvb20tb3V0O1xuICB9XG59XG5cbi8vIEdpdEh1YiBHaXN0XG4uZ2lzdCB7XG4gIGZvbnQtc2l6ZTogODAlICFpbXBvcnRhbnQ7XG5cbiAgY29kZSwgcHJlIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG5cbiAgLmdpc3QtZGF0YSB7XG4gICAgZm9udC1mYW1pbHk6IEBmb250c3RhY2stbW9ub3NwYWNlICFpbXBvcnRhbnQ7XG5cbiAgICAuZmlsZS1kYXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTAwJSAhaW1wb3J0YW50O1xuXG4gICAgICA+IHRhYmxlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIE1vbm9zcGFjZSBmb250cyBsb29rIGJpZ2dlciB0aGFuIG5vcm1hbCBmb250cywgc28gbWFrZSBpdCBzbWFsbGVyLlxuICAuaGlnaGxpZ2h0IHtcbiAgICBmb250LXNpemU6IDkwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLm1hcmtkb3duLWJvZHkge1xuICAgIGZvbnQtc2l6ZTogMTAwJSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDFlbSAhaW1wb3J0YW50O1xuICB9XG59XG4iLCIvL1xuLy8gUHJpbnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFN0eWxlIGZpeGVzIGZvciBwcml0aW5nXG5cbkBtZWRpYSBwcmludCB7XG5cbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDsgLy8gQmxhY2sgcHJpbnRzIGZhc3RlcjogaDVicC5jb20vc1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgYm9keSB7XG4gICAgcGFkZGluZzogMTBtbSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICB9XG5cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cblxuICAuY29udGVudCAucG9zdC1jb250ZW50LFxuICAuY29udGVudCAucGFnZS1jb250ZW50IHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcblxuICAgIGFbaHJlZl06YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cblxuICAgIC8vIERvbid0IHNob3cgbGlua3MgdGhhdCBhcmUgZnJhZ21lbnQgaWRlbnRpZmllcnMsXG4gICAgLy8gb3IgdXNlIHRoZSBgamF2YXNjcmlwdDpgIHBzZXVkbyBwcm90b2NvbFxuICAgIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICAgIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cblxuICAgIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuICB9XG5cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cblxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICB9XG5cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIHAsXG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNiB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7XG4gIH1cblxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG5cbiAgLm5hdmlnYXRpb24sXG4gIC5mb290ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbiIsIi8qIVxuICogUmFuZG9taXplZFxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSBUdW5naHNpYW8gTGl1XG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9zcGFyYW5vaWQvcmFuZG9taXplZC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICovXG5cbi8vIENhbGN1bGF0ZSBjb2RlIGJhY2tncm91bmQgY29sb3IgYmFzZWQgb24gdGhlIGxpZ2h0bmVzcyBvZiBsaW5rIGNvbG9yXG4uY2FsYy1iZyAoQHYpIHdoZW4gKGxpZ2h0bmVzcyhAdikgPj0gODAlKSB7XG4gIEBjYWxjLWJnOiBtaXgoI2ZmZiwgQHYsIDkwJSk7XG59XG5cbi5jYWxjLWJnIChAdikgd2hlbiAobGlnaHRuZXNzKEB2KSA8IDgwJSkge1xuICBAY2FsYy1iZzogbWl4KCMwMDAsIEB2LCA3MCUpO1xufVxuXG4uaGlnaGxpZ2h0IHtcblxuICAvLyBSZXNldCBiYWNrZ3JvdW5kXG4gIC8vIC5oaWdobGlnaHQgPiBwcmUgZm9yIGNvbW1vbiBsaXF1aWQgbWV0aG9kXG4gIC8vIC5oaWdobGlnaHRlci1yb3VnZSAuaGlnaGxpZ2h0IGZvciBHRk0gbWV0aG9kXG4gIC8vIFJlZjogaHR0cHM6Ly9naXRodWIuY29tL2pla3lsbC9qZWt5bGwvcHVsbC80MDUzXG4gIEBoaWdobGlnaHRlci10aW50OiBAbGluay1jb2xvcjtcbiAgPiBwcmUsXG4gIC5oaWdobGlnaHRlci1yb3VnZSAmIHtcbiAgICAuY2FsYy1iZyhAaGlnaGxpZ2h0ZXItdGludCk7XG4gICAgYmFja2dyb3VuZDogZmFkZShAY2FsYy1iZywgMS41JSk7XG4gIH1cblxuICAvLyBSZXNldCBkZWZhdWx0IGBjb2RlYFxuICBjb2RlIHsgY29sb3I6IGRlc2F0dXJhdGUoQGxpbmstY29sb3IsIDk1JSk7IH0gLy8gTm9ybWFsIGNvZGVcblxuICAvLyBTcGVjaWFsIGJhY2tncm91bmQgZm9yIHN5bnRheCBlcnJvcnNcbiAgLmVyciB7IGJhY2tncm91bmQtY29sb3I6IGZhZGUoc2F0dXJhdGUoQGhpZ2hsaWdodGVyLXRpbnQsIDEwJSksIDEwJSkgfSAvLyBFcnJvclxuXG4gIC5jICAgeyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBDb21tZW50XG4gIC5jbSAgeyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBDb21tZW50Lk11bHRpbGluZVxuICAuY3AgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBDb21tZW50LlByZXByb2NcbiAgLmMxICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnQuU2luZ2xlXG4gIC5jcyAgeyBmb250LXdlaWdodDogYm9sZDsgZm9udC1zdHlsZTogaXRhbGljIH0gLy8gQ29tbWVudC5TcGVjaWFsXG5cbiAgLm5jICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gTmFtZS5DbGFzc1xuICAubmUgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBOYW1lLkV4Y2VwdGlvblxuICAubmYgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBOYW1lLkZ1bmN0aW9uXG5cbiAgLm8gICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gT3BlcmF0b3JcbiAgLm93ICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gT3BlcmF0b3IuV29yZFxuXG4gIC5ncyAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEdlbmVyaWMuU3Ryb25nXG4gIC5nZSAgeyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBHZW5lcmljLkVtcGhcblxuICAuayAgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBLZXl3b3JkXG4gIC5rdCAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEtleXdvcmQuVHlwZVxuICAua2MgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBLZXl3b3JkLkNvbnN0YW50XG4gIC5rZCAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEtleXdvcmQuRGVjbGFyYXRpb25cbiAgLmtwICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gS2V5d29yZC5Qc2V1ZG9cbiAgLmtyICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gS2V5d29yZC5SZXNlcnZlZFxuXG4gIEB0b2tlbi1tYWluOlxuICAgIGVyciAvLyBFcnJvclxuICAgIHggLy8gT3RoZXJcblxuICAgIG4gLy8gTmFtZVxuICAgIG5hIC8vIE5hbWUuQXR0cmlidXRlXG4gICAgbmIgLy8gTmFtZS5CdWlsdGluXG4gICAgYnAgLy8gTmFtZS5CdWlsdGluLlBzZXVkb1xuICAgIG5jIC8vIE5hbWUuQ2xhc3NcbiAgICBubyAvLyBOYW1lLkNvbnN0YW50XG4gICAgbmQgLy8gTmFtZS5EZWNvcmF0b3JcbiAgICBuaSAvLyBOYW1lLkVudGl0eVxuICAgIG5lIC8vIE5hbWUuRXhjZXB0aW9uXG4gICAgbmYgLy8gTmFtZS5GdW5jdGlvblxuICAgIG5sIC8vIE5hbWUuTGFiZWxcbiAgICBubiAvLyBOYW1lLk5hbWVzcGFjZVxuICAgIG54IC8vIE5hbWUuT3RoZXJcbiAgICBudCAvLyBOYW1lLlRhZ1xuICAgIG52IC8vIE5hbWUuVmFyaWFibGVcbiAgICB2YyAvLyBOYW1lLlZhcmlhYmxlLkNsYXNzXG4gICAgdmcgLy8gTmFtZS5WYXJpYWJsZS5HbG9iYWxcbiAgICB2aSAvLyBOYW1lLlZhcmlhYmxlLkluc3RhbmNlXG5cbiAgICBnIC8vIEdlbmVyaWNcbiAgICBnZCAvLyBHZW5lcmljLkRlbGV0ZWRcbiAgICBnZSAvLyBHZW5lcmljLkVtcGhcbiAgICBnciAvLyBHZW5lcmljLkVycm9yXG4gICAgZ2ggLy8gR2VuZXJpYy5IZWFkaW5nXG4gICAgZ2kgLy8gR2VuZXJpYy5JbnNlcnRlZFxuICAgIGdvIC8vIEdlbmVyaWMuT3V0cHV0XG4gICAgZ3AgLy8gR2VuZXJpYy5Qcm9tcHRcbiAgICBncyAvLyBHZW5lcmljLlN0cm9uZ1xuICAgIGd1IC8vIEdlbmVyaWMuU3ViaGVhZGluZ1xuICAgIGd0IC8vIEdlbmVyaWMuVHJhY2ViYWNrXG4gICAgZ2wgLy8gR2VuZXJpYy5MaW5lbm9cblxuICAgIGsgLy8gS2V5d29yZFxuICAgIGtjIC8vIEtleXdvcmQuQ29uc3RhbnRcbiAgICBrZCAvLyBLZXl3b3JkLkRlY2xhcmF0aW9uXG4gICAga24gLy8gS2V5d29yZC5OYW1lc3BhY2VcbiAgICBrcCAvLyBLZXl3b3JkLlBzZXVkb1xuICAgIGtyIC8vIEtleXdvcmQuUmVzZXJ2ZWRcbiAgICBrdCAvLyBLZXl3b3JkLlR5cGVcbiAgICBrdiAvLyBLZXl3b3JkLlZhcmlhYmxlXG5cbiAgICB3IC8vIFRleHQuV2hpdGVzcGFjZVxuXG4gICAgbCAvLyBMaXRlcmFsXG5cbiAgICBsZCAvLyBMaXRlcmFsLkRhdGVcblxuICAgIHMgLy8gTGl0ZXJhbC5TdHJpbmdcbiAgICBzYiAvLyBMaXRlcmFsLlN0cmluZy5CYWNrdGlja1xuICAgIHNjIC8vIExpdGVyYWwuU3RyaW5nLkNoYXJcbiAgICBzZCAvLyBMaXRlcmFsLlN0cmluZy5Eb2NcbiAgICBzMiAvLyBMaXRlcmFsLlN0cmluZy5Eb3VibGVcbiAgICBzZSAvLyBMaXRlcmFsLlN0cmluZy5Fc2NhcGVcbiAgICBzaCAvLyBMaXRlcmFsLlN0cmluZy5IZXJlZG9jXG4gICAgc2kgLy8gTGl0ZXJhbC5TdHJpbmcuSW50ZXJwb2xcbiAgICBzeCAvLyBMaXRlcmFsLlN0cmluZy5PdGhlclxuICAgIHNyIC8vIExpdGVyYWwuU3RyaW5nLlJlZ2V4XG4gICAgczEgLy8gTGl0ZXJhbC5TdHJpbmcuU2luZ2xlXG4gICAgc3MgLy8gTGl0ZXJhbC5TdHJpbmcuU3ltYm9sXG5cbiAgICBtIC8vIExpdGVyYWwuTnVtYmVyXG4gICAgbWYgLy8gTGl0ZXJhbC5OdW1iZXIuRmxvYXRcbiAgICBtaCAvLyBMaXRlcmFsLk51bWJlci5IZXhcbiAgICBtaSAvLyBMaXRlcmFsLk51bWJlci5JbnRlZ2VyXG4gICAgaWwgLy8gTGl0ZXJhbC5OdW1iZXIuSW50ZWdlci5Mb25nXG4gICAgbW8gLy8gTGl0ZXJhbC5OdW1iZXIuT2N0XG4gICAgbWIgLy8gTGl0ZXJhbC5OdW1iZXIuQmluXG4gICAgbXggLy8gTGl0ZXJhbC5OdW1iZXIuT3RoZXJcblxuICAgIG8gLy8gT3BlcmF0b3JcbiAgICBvdyAvLyBPcGVyYXRvci5Xb3JkXG5cbiAgICBwIC8vIFB1bmN0dWF0aW9uXG4gICAgcGkgLy8gUHVuY3R1YXRpb24uSW5kaWNhdG9yXG4gIDtcblxuICAvLyBHZW5lcmF0ZSBtYWluIGhpZ2hsaWdodHNcbiAgLy8gUmVmOiBodHRwczovL2dpdGh1Yi5jb20vbGVzcy9sZXNzLmpzL2lzc3Vlcy8yMDcxXG4gIC5sb29wLW1haW4gKEBpKSB3aGVuIChAaSA8IChsZW5ndGgoQHRva2VuLW1haW4pICsgMSkpIHtcbiAgICBAdG9rZW46IGV4dHJhY3QoQHRva2VuLW1haW4sIEBpKTtcblxuICAgIC5Ae3Rva2VufSB7XG4gICAgICBjb2xvcjogbWl4KHNwaW4oQGNvZGUtY29sb3IsIChAaSAqIDM2MCAvIGxlbmd0aChAdG9rZW4tbWFpbikpKSwgQGxpbmstY29sb3IsIDgwJSk7XG4gICAgfVxuICAgIC5sb29wLW1haW4oKEBpICsgMSkpO1xuICB9XG4gIC5sb29wLW1haW4oMSk7XG5cbiAgQHRva2VuLWNvbW1lbnRzOlxuICAgIGMgLy8gQ29tbWVudFxuICAgIGNkIC8vIENvbW1lbnQuTXVsdGlsaW5lXG4gICAgY20gLy8gQ29tbWVudC5NdWx0aWxpbmVcbiAgICBjcCAvLyBDb21tZW50LlByZXByb2NcbiAgICBjMSAvLyBDb21tZW50LlNpbmdsZVxuICAgIGNzIC8vIENvbW1lbnQuU3BlY2lhbFxuICA7XG5cbiAgLy8gR2VuZXJhdGUgaGlnaGxpZ2h0IGZvciBjb21tZW50c1xuICAubG9vcC1jb21tZW50cyAoQGkpIHdoZW4gKEBpIDwgKGxlbmd0aChAdG9rZW4tY29tbWVudHMpICsgMSkpIHtcbiAgICBAdG9rZW46IGV4dHJhY3QoQHRva2VuLWNvbW1lbnRzLCBAaSk7XG5cbiAgICAuQHt0b2tlbn0ge1xuICAgICAgY29sb3I6IG1peChkZXNhdHVyYXRlKHNwaW4oQGNvZGUtY29sb3IsIChAaSAqIDM2MCAvIGxlbmd0aChAdG9rZW4tY29tbWVudHMpKSksIDcwJSksIEBsaW5rLWNvbG9yLCA5MCUpO1xuICAgICAgb3BhY2l0eTogLjY7XG4gICAgfVxuICAgIC5sb29wLWNvbW1lbnRzKChAaSArIDEpKTtcbiAgfVxuICAubG9vcC1jb21tZW50cygxKTtcblxuICAvLyBSZXNldCBjb2RlIGJsb2NrcyBhcHBlYXJhbmNlIHdpdGggbGluZSBudW1iZXJzXG4gIHRhYmxlIHtcblxuICAgICYsXG4gICAgdGgsXG4gICAgdGQsXG4gICAgdGQgcHJlIHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICB9XG5cbiAgICAubGluZW5vIHtcbiAgICAgIGNvbG9yOiBkZXNhdHVyYXRlKEBsaW5rLWNvbG9yLCA5NSUpO1xuICAgICAgb3BhY2l0eTogLjU7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICB9XG5cbiAgICAuY29kZSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vIFVzZXIgY3VzdG9tIHN0eWxlc1xuXG4vLyBBbHRlcm5hdGl2ZSB0aXRsZSBzaXplXG4vLyBCeSBkZWZhdWx0IGFsbCBoZWFkaW5nIGxldmVscyBoYXZlIHRoZSBzYW1lIGZvbnQgc2l6ZSwgYnV0IG1hbnkgcGVvcGxlIG1heSBub3QgbGlrZSB0aGlzLCBzbyBoZXJlJ3MgYW4gYWx0ZXJuYXRpdmUgZm9udCBzaXplIHN0YWNrOlxuLmNvbnRlbnQge1xuICBoMiB7IGZvbnQtc2l6ZTogMTA4JTsgb3BhY2l0eTogLjg7IH1cbiAgaDMgeyBmb250LXNpemU6IDk2JTsgIG9wYWNpdHk6IC43OyB9XG4gIGg0IHsgZm9udC1zaXplOiA4NCU7ICBvcGFjaXR5OiAuNjsgfVxuICBoNSB7IGZvbnQtc2l6ZTogNzIlOyAgb3BhY2l0eTogLjU7IH1cbiAgaDYgeyBmb250LXNpemU6IDYwJTsgIG9wYWNpdHk6IC40OyB9XG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNiB7XG4gICAgbWFyZ2luOiA2dm1pbiAwIDFyZW07XG4gIH1cbiAgaGVhZGVyIHsgcGFkZGluZy1ib3R0b206IDh2bWluOyB9XG4gIG1hcmdpbi1ib3R0b206IDEwdm1pbjtcbn1cblxuLm5hdmlnYXRpb24ge1xuICBtYXJnaW46IDAgMCAxMHZtaW47XG59XG5cbi8vIENvbnRhY3QgbGluayBjb2xvcnNcbi5wYXJlbnQtbGluayB7XG4gICAgc3Ryb2tlOiAjODg4O1xuICAgIHN0cm9rZS13aWR0aDogMXB4O1xufVxuLmNoaWxkcmVuLWxpbmsge1xuICAgIHN0cm9rZTogI2FhYTtcbiAgICBzdHJva2Utd2lkdGg6IDAuNXB4O1xufVxuLmltZy1waG9uZSB7XG4gICAgd2lkdGg6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiBpbmhlcml0O1xufVxuXG4vLyBHb29nbGUgRm9udHNcbkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Wb2xsa29ybjo0MDAsNDAwaXRhbGljKTtcblxuLy8gQ3VzdG9tIHZhcmlhYmxlc1xuQGZvbnRzdGFjay1zYW5zLXNlcmlmOiBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGlyYWdpbm8gU2FucyBHQlwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbkBmb250c3RhY2stc2VyaWY6IFwiVm9sbGtvcm5cIiwgc2VyaWY7XG5Adm9sbGtvcm46IFwiVm9sbGtvcm5cIiwgc2VyaWY7XG5AbGluay1jb2xvcjogI2ZmMDBiNDtcbkBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuQHRleHQtY29sb3I6ICMwMDA7XG5cbi8vIEhvbWVwYWdlIHN0eWxlXG4uYW1zZi1sb2dvIHtcbiAgd2lkdGg6IDgwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4uYW1zZi10aXRsZSB7XG4gIHRleHQtaW5kZW50OiAtOTk5OTk5cHg7XG4gIGxpbmUtaGVpZ2h0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi8vIEFudGktYWxpYXMgdGV4dFxuLypcbioge1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cbiovXG4iXX0= */