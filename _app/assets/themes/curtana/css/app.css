/*!
 * Curtana for Almace Scaffolding
 * Copyright 2005-2015 Tunghsiao Liu
 * Licensed under MIT (https://github.com/amsf/amsf-curtana/blob/master/LICENSE)
 */
@import url(https://fonts.googleapis.com/css?family=Vollkorn:400,400italic);
.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  padding: 0 22vw;
  margin: 0 auto 0;
  font-family: "Helvetica Neue", "Hiragino Sans GB", Arial, sans-serif;
  font-size: 1.6vw;
  line-height: 1.42857143;
  color: #000;
  text-rendering: optimizelegibility;
  background: #fff;
  image-rendering: optimizequality;
  transition: all .2s ease;
}
@media (max-width: 1000px) {
  body {
    padding-left: 8vw;
    padding-right: 8vw;
    font-size: 2.24vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4vw;
    padding-right: 4vw;
    font-size: 3.84vw;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.12vw;
  }
}
@media (max-device-width: 480px), (max-device-width: 1024px) {
  body {
    -webkit-text-size-adjust: none;
  }
}
body:before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -9999;
  width: 100%;
  height: 1vmax;
  pointer-events: none;
  background: #ff00b4;
  content: "";
  opacity: .2;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
  text-decoration: underline;
  text-decoration-skip: ink;
}
a[disabled],
button[disabled] {
  opacity: .4;
  cursor: not-allowed;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-moz-selection {
  background: rgba(255, 0, 180, 0.1);
}
::selection {
  background: rgba(255, 0, 180, 0.1);
}
::-webkit-input-placeholder {
  color: #000;
  opacity: .1;
}
.logo {
  display: block;
  height: 1vmax;
  margin: 0 0 1.4vmax;
  background: #ff00b4;
  opacity: 0;
}
.logo:hover,
.logo:focus {
  border-bottom: none !important;
  background: #000;
  opacity: 1;
}
.logo h1 {
  height: 0;
  text-indent: -99999em;
}
.navigation {
  margin: 0 0 16vmin;
  margin-right: -1.1em;
  margin-left: -1.1em;
  font-size: 60%;
  font-weight: bold;
  letter-spacing: .45em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: .5em 1.2em;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #ff00b4;
  text-decoration: none;
}
.current a {
  color: #ff00b4;
}
body:hover .latest {
  color: #ff00b4 !important;
}
.content .status {
  margin: 1vmin 0 0;
  font-size: 75%;
  font-weight: bold;
}
.content .status:before {
  display: inline-block;
  width: 0.8em;
  height: 0.8em;
  margin-right: .8vw;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  content: "";
}
.content .status.available:before {
  background: #0cf;
}
.content .status.available a {
  color: #0cf;
}
.content .status.unavailable:before {
  background: #ccc;
}
.content .status.unavailable a {
  color: #ccc;
}
.content {
  margin-bottom: 16vmin;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content p {
  margin-bottom: 1.6rem;
  line-height: 1.71428571;
}
.content header {
  padding-bottom: 16vmin;
}
.content header h1 {
  margin: 0 0 .1em;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
@media (max-width: 640px) {
  .content header h1 {
    font-size: 280%;
  }
}
.content header h1 svg {
  display: block;
  max-width: 100%;
}
.content header h1 svg,
.content header h1 img {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: .3em;
}
@media (max-width: 640px) {
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
}
.content header .image-title {
  text-indent: -999999px;
  line-height: 0;
}
.content header .latest-post {
  margin-top: 16vmin;
  font-size: 80%;
  font-weight: normal;
  line-height: 1.2;
}
.content header .latest-post a {
  font-weight: bold;
}
.content header small {
  display: block;
  margin-top: 2vmin;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-size: 72%;
  font-weight: normal;
  opacity: .5;
}
.content ul,
.content ol {
  margin-bottom: 1.8rem;
  margin-left: 1.2em;
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li > ul,
.content ol li > ul,
.content ul li > ol,
.content ol li > ol {
  margin-bottom: 0;
}
.content ol {
  margin-left: 1.75em;
}
.content img,
.content video,
.content iframe,
.content .browser {
  display: block;
  width: calc(100% + (1.2vw * 2) + (2px * 2));
  margin: 0 calc(-1.2vw - 2px) 1.8rem;
}
@media (max-width: 1000px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    margin-left: -8vw;
    margin-right: -8vw;
    width: calc(100% + (8vw * 2));
  }
}
@media (max-width: 640px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    margin-left: -4vw;
    margin-right: -4vw;
    width: calc(100% + (4vw * 2));
  }
}
.content img.no-enlarge,
.content video.no-enlarge,
.content iframe.no-enlarge,
.content .browser.no-enlarge {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  width: auto;
}
.content blockquote {
  position: relative;
  margin-bottom: 2.8rem;
  margin-left: calc(-1.2vw - 2px);
  font-size: 90%;
}
@media (max-width: 640px) {
  .content blockquote {
    margin-left: 0;
  }
}
.content blockquote > p {
  padding-left: 1.2vw;
  border-left: 2px solid;
  padding-bottom: 1.6rem;
  margin-bottom: 0;
}
.content blockquote > p:last-of-type {
  padding-bottom: 0;
  margin-bottom: 1.6rem;
}
@media (max-width: 640px) {
  .content blockquote > p {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content hr::before {
  display: block;
  content: '';
  width: 4px;
  height: 4px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 20px 0 0 0 #000, -20px 0 0 0 #000;
}
.content sup {
  font-size: 75%;
}
.content code,
.content pre {
  font-family: Menlo, monospace;
  color: #00cc80;
}
.content p code,
.content li code {
  word-break: break-all;
}
.content pre {
  padding: 1.2vw;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  overflow-x: auto;
  font-size: 80%;
  line-height: 1.71428571;
  background: rgba(0, 136, 255, 0.04);
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 1000px) {
  .content pre {
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content pre {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1.8rem;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(255, 0, 180, 0.05);
  border-color: #ff00b4;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
}
.content table th,
.content table td {
  padding: 0.6em 1.2vw;
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
:lang(zh),
:lang(ja) {
  text-align: justify;
}
:lang(zh) header,
:lang(ja) header,
:lang(zh) header *,
:lang(ja) header * {
  text-align: start;
}
.leading-indent-fix {
  text-indent: -0.39em;
}
.post-modified-date {
  font-size: 75%;
  opacity: .5;
}
.largetype {
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  margin-bottom: 1.8rem !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
@media (max-width: 1000px), (max-width: 640px) {
  .browser {
    border-radius: 0;
  }
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  max-width: 100%;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
}
.screenshot-mac {
  margin-left: -56px;
  margin-right: -56px;
}
@media (max-width: 1000px), (max-width: 640px) {
  .screenshot-mac {
    margin-left: 0;
    margin-right: 0;
  }
}
.note,
.store,
.download {
  padding-left: 1.2vw;
  margin-left: calc(-1.2vw - 2px);
  border-left: 2px solid #ff00b4;
}
@media (max-width: 640px) {
  .note,
  .store,
  .download {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.footnotes {
  font-size: 80%;
}
.footnotes::before {
  display: block;
  content: '';
  width: 4px;
  height: 4px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 20px 0 0 0 #000, -20px 0 0 0 #000;
}
:target [rev=footnote],
:target [rel=footnote],
:target .reversefootnote,
:target .footnote {
  color: #ff00b4;
}
.list {
  display: block;
  margin: 0 0 .4rem;
}
.list h1 {
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  line-height: 1.1;
  opacity: 1;
  margin: 0;
}
@media (max-width: 640px) {
  .list h1 {
    font-size: 180%;
  }
}
@media (max-width: 640px) {
  .list .external {
    display: none;
  }
}
.external .dot {
  display: inline-block;
  width: .7rem;
  height: .7rem;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000;
  border-radius: 50%;
  transition: transform .4s ease;
}
.external .dot--post {
  margin-left: 1rem;
}
.external:hover .dot,
.external:focus .dot {
  transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 75%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 .6vw;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
.loaded .intense-wrap article p > img:not(.no-intense) {
  cursor: zoom-in;
}
.loaded.intense-open {
  cursor: zoom-out;
}
.gist {
  font-size: 80% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .highlight {
  font-size: 90% !important;
}
.gist .markdown-body {
  font-size: 100% !important;
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
/*!
 * Randomized
 * Copyright 2014-2015 Tunghsiao Liu
 * Licensed under MIT (https://github.com/sparanoid/randomized/blob/master/LICENSE)
 */
.highlight > pre,
.highlighter-rouge .highlight {
  background: rgba(77, 0, 54, 0.015);
}
.highlight code {
  color: #867982;
}
.highlight .err {
  background-color: rgba(255, 0, 180, 0.1);
}
.highlight .c {
  font-style: italic;
}
.highlight .cm {
  font-style: italic;
}
.highlight .cp {
  font-weight: bold;
}
.highlight .c1 {
  font-style: italic;
}
.highlight .cs {
  font-weight: bold;
  font-style: italic;
}
.highlight .nc {
  font-weight: bold;
}
.highlight .ne {
  font-weight: bold;
}
.highlight .nf {
  font-weight: bold;
}
.highlight .o {
  font-weight: bold;
}
.highlight .ow {
  font-weight: bold;
}
.highlight .gs {
  font-weight: bold;
}
.highlight .ge {
  font-style: italic;
}
.highlight .k {
  font-weight: bold;
}
.highlight .kt {
  font-weight: bold;
}
.highlight .kc {
  font-weight: bold;
}
.highlight .kd {
  font-weight: bold;
}
.highlight .kp {
  font-weight: bold;
}
.highlight .kr {
  font-weight: bold;
}
.highlight .err {
  color: #33a399;
}
.highlight .x {
  color: #33a3a8;
}
.highlight .n {
  color: #33a3b6;
}
.highlight .na {
  color: #33a3c5;
}
.highlight .nb {
  color: #3397c7;
}
.highlight .bp {
  color: #3388c7;
}
.highlight .nc {
  color: #337ac7;
}
.highlight .no {
  color: #336bc7;
}
.highlight .nd {
  color: #335cc7;
}
.highlight .ni {
  color: #334ec7;
}
.highlight .ne {
  color: #333fc7;
}
.highlight .nf {
  color: #3331c7;
}
.highlight .nl {
  color: #3322c7;
}
.highlight .nn {
  color: #3313c7;
}
.highlight .nx {
  color: #3305c7;
}
.highlight .nt {
  color: #3d00c7;
}
.highlight .nv {
  color: #4b00c7;
}
.highlight .vc {
  color: #5a00c7;
}
.highlight .vg {
  color: #6900c7;
}
.highlight .vi {
  color: #7700c7;
}
.highlight .g {
  color: #8600c7;
}
.highlight .gd {
  color: #9500c7;
}
.highlight .ge {
  color: #a300c7;
}
.highlight .gr {
  color: #b200c7;
}
.highlight .gh {
  color: #c000c7;
}
.highlight .gi {
  color: #cf00c7;
}
.highlight .go {
  color: #d600c0;
}
.highlight .gp {
  color: #d600b1;
}
.highlight .gs {
  color: #d600a3;
}
.highlight .gu {
  color: #d60094;
}
.highlight .gt {
  color: #d60085;
}
.highlight .gl {
  color: #d60077;
}
.highlight .k {
  color: #d60068;
}
.highlight .kc {
  color: #d60059;
}
.highlight .kd {
  color: #d6004b;
}
.highlight .kn {
  color: #d6003c;
}
.highlight .kp {
  color: #d6002e;
}
.highlight .kr {
  color: #d60524;
}
.highlight .kt {
  color: #d61424;
}
.highlight .kv {
  color: #d62224;
}
.highlight .w {
  color: #d63124;
}
.highlight .l {
  color: #d63f24;
}
.highlight .ld {
  color: #d64e24;
}
.highlight .s {
  color: #d65d24;
}
.highlight .sb {
  color: #d66b24;
}
.highlight .sc {
  color: #d67a24;
}
.highlight .sd {
  color: #d68924;
}
.highlight .s2 {
  color: #d69724;
}
.highlight .se {
  color: #d4a324;
}
.highlight .sh {
  color: #c5a324;
}
.highlight .si {
  color: #b6a324;
}
.highlight .sx {
  color: #a8a324;
}
.highlight .sr {
  color: #99a324;
}
.highlight .s1 {
  color: #8ba324;
}
.highlight .ss {
  color: #7ca324;
}
.highlight .m {
  color: #6da324;
}
.highlight .mf {
  color: #5fa324;
}
.highlight .mh {
  color: #50a324;
}
.highlight .mi {
  color: #42a324;
}
.highlight .il {
  color: #33a324;
}
.highlight .mo {
  color: #33a333;
}
.highlight .mb {
  color: #33a341;
}
.highlight .mx {
  color: #33a350;
}
.highlight .o {
  color: #33a35f;
}
.highlight .ow {
  color: #33a36d;
}
.highlight .p {
  color: #33a37c;
}
.highlight .pi {
  color: #33a38a;
}
.highlight .c {
  color: #5a5589;
  opacity: .6;
}
.highlight .cd {
  color: #7c4089;
  opacity: .6;
}
.highlight .cm {
  color: #914067;
  opacity: .6;
}
.highlight .cp {
  color: #916352;
  opacity: .6;
}
.highlight .c1 {
  color: #6e7752;
  opacity: .6;
}
.highlight .cs {
  color: #5a7775;
  opacity: .6;
}
.highlight table,
.highlight table th,
.highlight table td,
.highlight table td pre {
  padding: 0;
  margin: 0;
  border: none;
  background: transparent;
  font-size: 100%;
}
.highlight table .lineno {
  color: #867982;
  opacity: .5;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.highlight table .code {
  padding-left: 1em;
}
.content {
  margin-bottom: 10vmin;
}
.content h2 {
  font-size: 108%;
  opacity: .8;
}
.content h3 {
  font-size: 96%;
  opacity: .7;
}
.content h4 {
  font-size: 84%;
  opacity: .6;
}
.content h5 {
  font-size: 72%;
  opacity: .5;
}
.content h6 {
  font-size: 60%;
  opacity: .4;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 6vmin 0 1rem;
}
.content header {
  padding-bottom: 8vmin;
}
.navigation {
  margin: 0 0 10vmin;
}
.amsf-logo {
  width: 80%;
  height: auto;
}
.amsf-title {
  text-indent: -999999px;
  line-height: 0 !important;
}
/*
* {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
*/
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9taXhpbnMubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3Jlc2V0Lmxlc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9jb21tb24ubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3BsdWdpbnMubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3ByaW50Lmxlc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9jb21wb25lbnRzL3JhbmRvbWl6ZWQubGVzcyIsIl9hcHAvYXNzZXRzL19sZXNzL3VzZXIubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBQ0gsNEVBQTRFO0FDSzFFOztFQUNFLGVBQUE7RUFDQSxZQUFBO0NERkg7QUNLQztFQUNFLFlBQUE7Q0RISDtBRVREOzs7RUFHRSxXQUFBO0VBQ0EsVUFBQTtFQUNBLHVCQUFBO0NGV0Q7QUVSRDtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxxRUFBQTtFQUNBLGlCQUFBO0VBQ0Esd0JBQUE7RUFDQSxZQUFBO0VBQ0EsbUNBQUE7RUFDQSxpQkFBQTtFQUNBLGlDQUFBO0VBQ0EseUJBQUE7Q0ZVRDtBRUhDO0VBbUZGO0lEOUVFLGtCQUFBO0lBQ0EsbUJBQUE7SUNURSxrQkFBQTtHRllEO0NBQ0Y7QUVMQztFQThFRjtJRDlFRSxrQkFBQTtJQUNBLG1CQUFBO0lDSkUsa0JBQUE7R0ZjRDtDQUNGO0FFUEM7RUF5RUY7SUE3RUksa0JBQUE7R0ZlRDtDQUNGO0FFUEM7RUFvRUY7SUF4RUksK0JBQUE7R0ZlRDtDQUNGO0FFWkM7RUFDRSxtQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0EscUJBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7RUFD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TnF0Qkw7QU1yMUJEO0VBZ0lNLGVBQUE7Q053dEJMO0FNeDFCRDtFQWdJTSxlQUFBO0NOMnRCTDtBTTMxQkQ7RUFnSU0sZUFBQTtDTjh0Qkw7QU05MUJEO0VBZ0lNLGVBQUE7Q05pdUJMO0FNajJCRDtFQWdJTSxlQUFBO0NOb3VCTDtBTXAyQkQ7RUFnSU0sZUFBQTtDTnV1Qkw7QU12MkJEO0VBZ0lNLGVBQUE7Q04wdUJMO0FNMTJCRDtFQWdJTSxlQUFBO0NONnVCTDtBTTcyQkQ7RUFnSU0sZUFBQTtDTmd2Qkw7QU1oM0JEO0VBZ0lNLGVBQUE7Q05tdkJMO0FNbjNCRDtFQWdJTSxlQUFBO0NOc3ZCTDtBTXQzQkQ7RUFnSU0sZUFBQTtDTnl2Qkw7QU16M0JEO0VBZ0lNLGVBQUE7Q040dkJMO0FNNTNCRDtFQWdJTSxlQUFBO0NOK3ZCTDtBTS8zQkQ7RUFnSU0sZUFBQTtDTmt3Qkw7QU1sNEJEO0VBZ0lNLGVBQUE7Q05xd0JMO0FNcjRCRDtFQWdJTSxlQUFBO0NOd3dCTDtBTXg0QkQ7RUFnSU0sZUFBQTtDTjJ3Qkw7QU0zNEJEO0VBZ0lNLGVBQUE7Q044d0JMO0FNOTRCRDtFQWdJTSxlQUFBO0NOaXhCTDtBTWo1QkQ7RUFnSU0sZUFBQTtDTm94Qkw7QU1wNUJEO0VBZ0lNLGVBQUE7Q051eEJMO0FNdjVCRDtFQWdJTSxlQUFBO0NOMHhCTDtBTTE1QkQ7RUFnSU0sZUFBQTtDTjZ4Qkw7QU03NUJEO0VBZ0lNLGVBQUE7Q05neUJMO0FNaDZCRDtFQWdJTSxlQUFBO0NObXlCTDtBTW42QkQ7RUFnSU0sZUFBQTtDTnN5Qkw7QU10NkJEO0VBZ0lNLGVBQUE7Q055eUJMO0FNejZCRDtFQWdJTSxlQUFBO0NONHlCTDtBTTU2QkQ7RUFnSU0sZUFBQTtDTit5Qkw7QU0vNkJEO0VBZ0lNLGVBQUE7Q05rekJMO0FNbDdCRDtFQWdJTSxlQUFBO0NOcXpCTDtBTXI3QkQ7RUFnSU0sZUFBQTtDTnd6Qkw7QU14N0JEO0VBZ0lNLGVBQUE7Q04yekJMO0FNMzdCRDtFQWdJTSxlQUFBO0NOOHpCTDtBTTk3QkQ7RUFnSU0sZUFBQTtDTmkwQkw7QU1qOEJEO0VBZ0lNLGVBQUE7Q05vMEJMO0FNcDhCRDtFQWdJTSxlQUFBO0NOdTBCTDtBTXY4QkQ7RUFnSU0sZUFBQTtDTjAwQkw7QU0xOEJEO0VBZ0lNLGVBQUE7Q042MEJMO0FNNzhCRDtFQWdJTSxlQUFBO0NOZzFCTDtBTWg5QkQ7RUFnSU0sZUFBQTtDTm0xQkw7QU1uOUJEO0VBZ0lNLGVBQUE7Q05zMUJMO0FNdDlCRDtFQWdJTSxlQUFBO0NOeTFCTDtBTXo5QkQ7RUFnSU0sZUFBQTtDTjQxQkw7QU01OUJEO0VBZ0lNLGVBQUE7Q04rMUJMO0FNLzlCRDtFQW9KTSxlQUFBO0VBQ0EsWUFBQTtDTjgwQkw7QU1uK0JEO0VBb0pNLGVBQUE7RUFDQSxZQUFBO0NOazFCTDtBTXYrQkQ7RUFvSk0sZUFBQTtFQUNBLFlBQUE7Q05zMUJMO0FNMytCRDtFQW9KTSxlQUFBO0VBQ0EsWUFBQTtDTjAxQkw7QU0vK0JEO0VBb0pNLGVBQUE7RUFDQSxZQUFBO0NOODFCTDtBTW4vQkQ7RUFvSk0sZUFBQTtFQUNBLFlBQUE7Q05rMkJMO0FNejFCRzs7OztFQUlFLFdBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7Q04yMUJMO0FNamdDRDtFQTBLTSxlQUFBO0VBQ0EsWUFBQTtFQUNBLDBCQUFBO0tBQUEsdUJBQUE7TUFBQSxzQkFBQTtVQUFBLGtCQUFBO0NOMDFCTDtBTXRnQ0Q7RUFnTE0sa0JBQUE7Q055MUJMO0FPcGhDRDtFQWNFLHNCQUFBO0NQeWdDRDtBT3ZoQ0Q7RUFDTyxnQkFBQTtFQUFpQixZQUFBO0NQMGhDdkI7QU8zaENEO0VBRU8sZUFBQTtFQUFpQixZQUFBO0NQNmhDdkI7QU8vaENEO0VBR08sZUFBQTtFQUFpQixZQUFBO0NQZ2lDdkI7QU9uaUNEO0VBSU8sZUFBQTtFQUFpQixZQUFBO0NQbWlDdkI7QU92aUNEO0VBS08sZUFBQTtFQUFpQixZQUFBO0NQc2lDdkI7QU8zaUNEOzs7OztFQVdJLHFCQUFBO0NQdWlDSDtBT2xqQ0Q7RUFhVyxzQkFBQTtDUHdpQ1Y7QU9waUNEO0VBQ0UsbUJBQUE7Q1BzaUNEO0FPdmhDRDtFQUNFLFdBQUE7RUFDQSxhQUFBO0NQeWhDRDtBT3RoQ0Q7RUFDRSx1QkFBQTtFQUNBLDBCQUFBO0NQd2hDRDtBQUNEOzs7Ozs7RUFNRSIsImZpbGUiOiJhcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDdXJ0YW5hIGZvciBBbG1hY2UgU2NhZmZvbGRpbmdcbiAqIENvcHlyaWdodCAyMDA1LTIwMTUgVHVuZ2hzaWFvIExpdVxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vYW1zZi9hbXNmLWN1cnRhbmEvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqL1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVZvbGxrb3JuOjQwMCw0MDBpdGFsaWMpO1xuLmNmOmJlZm9yZSxcbi5jZjphZnRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNmOmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuYm9keSB7XG4gIHBhZGRpbmc6IDAgMjJ2dztcbiAgbWFyZ2luOiAwIGF1dG8gMDtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJIaXJhZ2lubyBTYW5zIEdCXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuNnZ3O1xuICBsaW5lLWhlaWdodDogMS40Mjg1NzE0MztcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGltYWdlLXJlbmRlcmluZzogb3B0aW1pemVxdWFsaXR5O1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gIGJvZHkge1xuICAgIHBhZGRpbmctbGVmdDogOHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDh2dztcbiAgICBmb250LXNpemU6IDIuMjR2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIGJvZHkge1xuICAgIHBhZGRpbmctbGVmdDogNHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBmb250LXNpemU6IDMuODR2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogNS4xMnZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC1kZXZpY2Utd2lkdGg6IDQ4MHB4KSwgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICBib2R5IHtcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG4gIH1cbn1cbmJvZHk6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IC05OTk5O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxdm1heDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNmZjAwYjQ7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIG9wYWNpdHk6IC4yO1xufVxuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3RbbXVsdGlwbGVdLFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuYSxcbmJ1dHRvbiB7XG4gIGNvbG9yOiAjMDAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNXMgZWFzZSwgYm9yZGVyLWNvbG9yIDAuNXMgZWFzZSwgYmFja2dyb3VuZCAwLjVzIGVhc2UsIG9wYWNpdHkgMS41cyBlYXNlO1xufVxuYTpob3ZlcixcbmJ1dHRvbjpob3ZlcixcbmE6Zm9jdXMsXG5idXR0b246Zm9jdXMge1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjFzIGVhc2UsIGJvcmRlci1jb2xvciAwLjFzIGVhc2UsIGJhY2tncm91bmQgMC4xcyBlYXNlLCBvcGFjaXR5IDAuMXMgZWFzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIHRleHQtZGVjb3JhdGlvbi1za2lwOiBpbms7XG59XG5hW2Rpc2FibGVkXSxcbmJ1dHRvbltkaXNhYmxlZF0ge1xuICBvcGFjaXR5OiAuNDtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbmltZyxcbmhyIHtcbiAgYm9yZGVyOiAwO1xufVxuZGVsIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG59XG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAwLCAxODAsIDAuMSk7XG59XG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogIzAwMDtcbiAgb3BhY2l0eTogLjE7XG59XG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDF2bWF4O1xuICBtYXJnaW46IDAgMCAxLjR2bWF4O1xuICBiYWNrZ3JvdW5kOiAjZmYwMGI0O1xuICBvcGFjaXR5OiAwO1xufVxuLmxvZ286aG92ZXIsXG4ubG9nbzpmb2N1cyB7XG4gIGJvcmRlci1ib3R0b206IG5vbmUgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgb3BhY2l0eTogMTtcbn1cbi5sb2dvIGgxIHtcbiAgaGVpZ2h0OiAwO1xuICB0ZXh0LWluZGVudDogLTk5OTk5ZW07XG59XG4ubmF2aWdhdGlvbiB7XG4gIG1hcmdpbjogMCAwIDE2dm1pbjtcbiAgbWFyZ2luLXJpZ2h0OiAtMS4xZW07XG4gIG1hcmdpbi1sZWZ0OiAtMS4xZW07XG4gIGZvbnQtc2l6ZTogNjAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC40NWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLm5hdmlnYXRpb24gbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAyO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLm5hdmlnYXRpb24gbGkgYSB7XG4gIHBhZGRpbmc6IC41ZW0gMS4yZW07XG59XG4ubmF2aWdhdGlvbiBsaSBhOmhvdmVyLFxuLm5hdmlnYXRpb24gbGkgYTpmb2N1cyB7XG4gIGNvbG9yOiAjZmYwMGI0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uY3VycmVudCBhIHtcbiAgY29sb3I6ICNmZjAwYjQ7XG59XG5ib2R5OmhvdmVyIC5sYXRlc3Qge1xuICBjb2xvcjogI2ZmMDBiNCAhaW1wb3J0YW50O1xufVxuLmNvbnRlbnQgLnN0YXR1cyB7XG4gIG1hcmdpbjogMXZtaW4gMCAwO1xuICBmb250LXNpemU6IDc1JTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY29udGVudCAuc3RhdHVzOmJlZm9yZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDAuOGVtO1xuICBoZWlnaHQ6IDAuOGVtO1xuICBtYXJnaW4tcmlnaHQ6IC44dnc7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNvbnRlbnQgLnN0YXR1cy5hdmFpbGFibGU6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogIzBjZjtcbn1cbi5jb250ZW50IC5zdGF0dXMuYXZhaWxhYmxlIGEge1xuICBjb2xvcjogIzBjZjtcbn1cbi5jb250ZW50IC5zdGF0dXMudW5hdmFpbGFibGU6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogI2NjYztcbn1cbi5jb250ZW50IC5zdGF0dXMudW5hdmFpbGFibGUgYSB7XG4gIGNvbG9yOiAjY2NjO1xufVxuLmNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxNnZtaW47XG59XG4uY29udGVudDpiZWZvcmUsXG4uY29udGVudDphZnRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNvbnRlbnQ6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cbi5jb250ZW50IGFydGljbGUgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uY29udGVudCBhcnRpY2xlID4gKjpsYXN0LWNoaWxkID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuLmNvbnRlbnQgYXJ0aWNsZSA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cbi5jb250ZW50IGFydGljbGUgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uY29udGVudCAucG9zdC1jb250ZW50ID4gKjpmaXJzdC1jaGlsZCxcbi5jb250ZW50IC5wYWdlLWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jb250ZW50IC5wb3N0LWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkID4gKjpmaXJzdC1jaGlsZCxcbi5jb250ZW50IC5wYWdlLWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkID4gKjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uY29udGVudCBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY29udGVudCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMS42cmVtO1xuICBsaW5lLWhlaWdodDogMS43MTQyODU3MTtcbn1cbi5jb250ZW50IGhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAxNnZtaW47XG59XG4uY29udGVudCBoZWFkZXIgaDEge1xuICBtYXJnaW46IDAgMCAuMWVtO1xuICBmb250LXNpemU6IDMzMCU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjA2ZW07XG4gIGh5cGhlbnM6IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgaGVhZGVyIGgxIHtcbiAgICBmb250LXNpemU6IDI4MCU7XG4gIH1cbn1cbi5jb250ZW50IGhlYWRlciBoMSBzdmcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuLmNvbnRlbnQgaGVhZGVyIGgxIHN2Zyxcbi5jb250ZW50IGhlYWRlciBoMSBpbWcge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IGhlYWRlciBoMSBzdmcsXG4gIC5jb250ZW50IGhlYWRlciBoMSBpbWcge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5jb250ZW50IGhlYWRlciAuaW1hZ2UtdGl0bGUge1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICBsaW5lLWhlaWdodDogMDtcbn1cbi5jb250ZW50IGhlYWRlciAubGF0ZXN0LXBvc3Qge1xuICBtYXJnaW4tdG9wOiAxNnZtaW47XG4gIGZvbnQtc2l6ZTogODAlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuLmNvbnRlbnQgaGVhZGVyIC5sYXRlc3QtcG9zdCBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uY29udGVudCBoZWFkZXIgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMnZtaW47XG59XG4uY29udGVudCBoMixcbi5jb250ZW50IGgzLFxuLmNvbnRlbnQgaDQsXG4uY29udGVudCBoNSxcbi5jb250ZW50IGg2IHtcbiAgbWFyZ2luOiAxMHZtaW4gMCAxcmVtO1xuICBmb250LXNpemU6IDcyJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgb3BhY2l0eTogLjU7XG59XG4uY29udGVudCB1bCxcbi5jb250ZW50IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xuICBtYXJnaW4tbGVmdDogMS4yZW07XG59XG4uY29udGVudCB1bCBsaSxcbi5jb250ZW50IG9sIGxpIHtcbiAgbGluZS1oZWlnaHQ6IDEuNzE0Mjg1NzE7XG59XG4uY29udGVudCB1bCBsaSA+IHVsLFxuLmNvbnRlbnQgb2wgbGkgPiB1bCxcbi5jb250ZW50IHVsIGxpID4gb2wsXG4uY29udGVudCBvbCBsaSA+IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5jb250ZW50IG9sIHtcbiAgbWFyZ2luLWxlZnQ6IDEuNzVlbTtcbn1cbi5jb250ZW50IGltZyxcbi5jb250ZW50IHZpZGVvLFxuLmNvbnRlbnQgaWZyYW1lLFxuLmNvbnRlbnQgLmJyb3dzZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IGNhbGMoMTAwJSArICgxLjJ2dyAqIDIpICsgKDJweCAqIDIpKTtcbiAgbWFyZ2luOiAwIGNhbGMoLTEuMnZ3IC0gMnB4KSAxLjhyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gIC5jb250ZW50IGltZyxcbiAgLmNvbnRlbnQgdmlkZW8sXG4gIC5jb250ZW50IGlmcmFtZSxcbiAgLmNvbnRlbnQgLmJyb3dzZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAtOHZ3O1xuICAgIG1hcmdpbi1yaWdodDogLTh2dztcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDh2dyAqIDIpKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IGltZyxcbiAgLmNvbnRlbnQgdmlkZW8sXG4gIC5jb250ZW50IGlmcmFtZSxcbiAgLmNvbnRlbnQgLmJyb3dzZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAtNHZ3O1xuICAgIG1hcmdpbi1yaWdodDogLTR2dztcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDR2dyAqIDIpKTtcbiAgfVxufVxuLmNvbnRlbnQgaW1nLm5vLWVubGFyZ2UsXG4uY29udGVudCB2aWRlby5uby1lbmxhcmdlLFxuLmNvbnRlbnQgaWZyYW1lLm5vLWVubGFyZ2UsXG4uY29udGVudCAuYnJvd3Nlci5uby1lbmxhcmdlIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aWR0aDogYXV0bztcbn1cbi5jb250ZW50IGJsb2NrcXVvdGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDIuOHJlbTtcbiAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEuMnZ3IC0gMnB4KTtcbiAgZm9udC1zaXplOiA5MCU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgYmxvY2txdW90ZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgPiBwIHtcbiAgcGFkZGluZy1sZWZ0OiAxLjJ2dztcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZDtcbiAgcGFkZGluZy1ib3R0b206IDEuNnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgPiBwOmxhc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgYmxvY2txdW90ZSA+IHAge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg0dncgLSAycHgpO1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyOmJlZm9yZSxcbi5jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyOmFmdGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG4uY29udGVudCBibG9ja3F1b3RlIGZvb3RlcjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuLmNvbnRlbnQgYmxvY2txdW90ZSBjaXRlIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG4uY29udGVudCBibG9ja3F1b3RlIGNpdGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXDI1MDBcXDI1MDBcXDAwYTBcIjtcbn1cbi5jb250ZW50IGhyOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA0cHg7XG4gIGhlaWdodDogNHB4O1xuICBtYXJnaW46IDJlbSBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJveC1zaGFkb3c6IDIwcHggMCAwIDAgIzAwMCwgLTIwcHggMCAwIDAgIzAwMDtcbn1cbi5jb250ZW50IHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xufVxuLmNvbnRlbnQgY29kZSxcbi5jb250ZW50IHByZSB7XG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgbW9ub3NwYWNlO1xuICBjb2xvcjogIzAwY2M4MDtcbn1cbi5jb250ZW50IHAgY29kZSxcbi5jb250ZW50IGxpIGNvZGUge1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG4uY29udGVudCBwcmUge1xuICBwYWRkaW5nOiAxLjJ2dztcbiAgbWFyZ2luLWxlZnQ6IC0xLjJ2dztcbiAgbWFyZ2luLXJpZ2h0OiAtMS4ydnc7XG4gIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgZm9udC1zaXplOiA4MCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjcxNDI4NTcxO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEzNiwgMjU1LCAwLjA0KTtcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAuY29udGVudCBwcmUge1xuICAgIHBhZGRpbmctbGVmdDogOHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDh2dztcbiAgICBtYXJnaW4tbGVmdDogLTh2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC04dnc7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBwcmUge1xuICAgIHBhZGRpbmctbGVmdDogNHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGZvcm0gaW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDF2bWluIDA7XG4gIG1hcmdpbjogMCAwIDEuOHJlbTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBvdXRsaW5lOiBub25lO1xuICB0cmFuc2l0aW9uOiBwYWRkaW5nIC4ycyBlYXNlO1xufVxuLmNvbnRlbnQgZm9ybSBpbnB1dDpmb2N1cyB7XG4gIHBhZGRpbmc6IDF2bWluO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDIpO1xuICBib3JkZXItY29sb3I6ICMwMDA7XG59XG4uY29udGVudCBpbnB1dDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzLFxuLmNvbnRlbnQgdGV4dGFyZWE6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZDpmb2N1cyxcbi5jb250ZW50IHNlbGVjdDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDAsIDE4MCwgMC4wNSk7XG4gIGJvcmRlci1jb2xvcjogI2ZmMDBiNDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cbi5jb250ZW50IHRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIGZvbnQtc2l6ZTogOTAlO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xLjJ2dztcbiAgbWFyZ2luLXJpZ2h0OiAtMS4ydnc7XG4gIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbn1cbi5jb250ZW50IHRhYmxlIHRoLFxuLmNvbnRlbnQgdGFibGUgdGQge1xuICBwYWRkaW5nOiAwLjZlbSAxLjJ2dztcbn1cbi5jb250ZW50IHRhYmxlIHRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNik7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4uY29udGVudCB0YWJsZSB0ZCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xufVxuOmxhbmcoemgpLFxuOmxhbmcoamEpIHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbn1cbjpsYW5nKHpoKSBoZWFkZXIsXG46bGFuZyhqYSkgaGVhZGVyLFxuOmxhbmcoemgpIGhlYWRlciAqLFxuOmxhbmcoamEpIGhlYWRlciAqIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG59XG4ubGVhZGluZy1pbmRlbnQtZml4IHtcbiAgdGV4dC1pbmRlbnQ6IC0wLjM5ZW07XG59XG4ucG9zdC1tb2RpZmllZC1kYXRlIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIG9wYWNpdHk6IC41O1xufVxuLmxhcmdldHlwZSB7XG4gIGZvbnQtc2l6ZTogMzMwJTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDZlbTtcbiAgZm9udC1zaXplOiAyMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxLjhyZW0gIWltcG9ydGFudDtcbn1cbi5icm93c2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSwgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmJyb3dzZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIH1cbn1cbi5icm93c2VyOmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA4cHg7XG4gIGxlZnQ6IDEwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogOHB4O1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogI2ZjZGRkZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjb250ZW50OiBcIlwiO1xuICBib3gtc2hhZG93OiAxNnB4IDAgMCAwIHJnYmEoMjU0LCAyNDAsIDIwMywgMC45NiksIDMycHggMCAwIDAgcmdiYSgxNzcsIDI0NywgMTg1LCAwLjk2KSwgMCAwIDAgMXB4IHJnYmEoMTU2LCAxMSwgMjEsIDAuMyksIDE2cHggMCAwIDFweCByZ2JhKDE0NywgMTA4LCA0LCAwLjMpLCAzMnB4IDAgMCAxcHggcmdiYSgxMSwgMTA3LCAyMiwgMC4zKTtcbn1cbi5icm93c2VyIGltZyB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDAgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjA1KTtcbn1cbi5zY3JlZW5zaG90LW1hYyB7XG4gIG1hcmdpbi1sZWZ0OiAtNTZweDtcbiAgbWFyZ2luLXJpZ2h0OiAtNTZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpLCAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuc2NyZWVuc2hvdC1tYWMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuLm5vdGUsXG4uc3RvcmUsXG4uZG93bmxvYWQge1xuICBwYWRkaW5nLWxlZnQ6IDEuMnZ3O1xuICBtYXJnaW4tbGVmdDogY2FsYygtMS4ydncgLSAycHgpO1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZjAwYjQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLm5vdGUsXG4gIC5zdG9yZSxcbiAgLmRvd25sb2FkIHtcbiAgICBwYWRkaW5nLWxlZnQ6IGNhbGMoNHZ3IC0gMnB4KTtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0dnc7XG4gICAgbWFyZ2luLWxlZnQ6IC00dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNHZ3O1xuICB9XG59XG4uZm9vdG5vdGVzIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG4uZm9vdG5vdGVzOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA0cHg7XG4gIGhlaWdodDogNHB4O1xuICBtYXJnaW46IDJlbSBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJveC1zaGFkb3c6IDIwcHggMCAwIDAgIzAwMCwgLTIwcHggMCAwIDAgIzAwMDtcbn1cbjp0YXJnZXQgW3Jldj1mb290bm90ZV0sXG46dGFyZ2V0IFtyZWw9Zm9vdG5vdGVdLFxuOnRhcmdldCAucmV2ZXJzZWZvb3Rub3RlLFxuOnRhcmdldCAuZm9vdG5vdGUge1xuICBjb2xvcjogI2ZmMDBiNDtcbn1cbi5saXN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCAwIC40cmVtO1xufVxuLmxpc3QgaDEge1xuICBmb250LXNpemU6IDMzMCU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjA2ZW07XG4gIGZvbnQtc2l6ZTogMjAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgb3BhY2l0eTogMTtcbiAgbWFyZ2luOiAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5saXN0IGgxIHtcbiAgICBmb250LXNpemU6IDE4MCU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAubGlzdCAuZXh0ZXJuYWwge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5leHRlcm5hbCAuZG90IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogLjdyZW07XG4gIGhlaWdodDogLjdyZW07XG4gIG1hcmdpbjogMCAuMWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMgZWFzZTtcbn1cbi5leHRlcm5hbCAuZG90LS1wb3N0IHtcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG59XG4uZXh0ZXJuYWw6aG92ZXIgLmRvdCxcbi5leHRlcm5hbDpmb2N1cyAuZG90IHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xufVxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDAgMCAxNnZtaW47XG4gIGZvbnQtc2l6ZTogNzUlO1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xufVxuLmZvb3RlciB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cbi5mb290ZXIgdWwgbGk6YWZ0ZXIge1xuICBwYWRkaW5nOiAwIC42dnc7XG4gIGNvbnRlbnQ6IFwiIC8gXCI7XG4gIG9wYWNpdHk6IC4zO1xufVxuLmZvb3RlciB1bCBsaTpsYXN0LWNoaWxkOmFmdGVyIHtcbiAgY29udGVudDogbm9uZTtcbn1cbi5sb2FkZWQgLmludGVuc2Utd3JhcCBhcnRpY2xlIHAgPiBpbWc6bm90KC5uby1pbnRlbnNlKSB7XG4gIGN1cnNvcjogem9vbS1pbjtcbn1cbi5sb2FkZWQuaW50ZW5zZS1vcGVuIHtcbiAgY3Vyc29yOiB6b29tLW91dDtcbn1cbi5naXN0IHtcbiAgZm9udC1zaXplOiA4MCUgIWltcG9ydGFudDtcbn1cbi5naXN0IGNvZGUsXG4uZ2lzdCBwcmUge1xuICBwYWRkaW5nOiAwO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4uZ2lzdCAuZ2lzdC1kYXRhIHtcbiAgZm9udC1mYW1pbHk6IE1lbmxvLCBtb25vc3BhY2UgIWltcG9ydGFudDtcbn1cbi5naXN0IC5naXN0LWRhdGEgLmZpbGUtZGF0YSB7XG4gIGZvbnQtc2l6ZTogMTAwJSAhaW1wb3J0YW50O1xufVxuLmdpc3QgLmdpc3QtZGF0YSAuZmlsZS1kYXRhID4gdGFibGUge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uZ2lzdCAuaGlnaGxpZ2h0IHtcbiAgZm9udC1zaXplOiA5MCUgIWltcG9ydGFudDtcbn1cbi5naXN0IC5tYXJrZG93bi1ib2R5IHtcbiAgZm9udC1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDFlbSAhaW1wb3J0YW50O1xufVxuQG1lZGlhIHByaW50IHtcbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBib2R5IHtcbiAgICBwYWRkaW5nOiAxMG1tICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCxcbiAgLmNvbnRlbnQgLnBhZ2UtY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCBhW2hyZWZdOmFmdGVyLFxuICAuY29udGVudCAucGFnZS1jb250ZW50IGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIH1cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgLmNvbnRlbnQgLnBhZ2UtY29udGVudCBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQgYWJiclt0aXRsZV06YWZ0ZXIsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgcCxcbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG4gIC5uYXZpZ2F0aW9uLFxuICAuZm9vdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4vKiFcbiAqIFJhbmRvbWl6ZWRcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUgVHVuZ2hzaWFvIExpdVxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vc3BhcmFub2lkL3JhbmRvbWl6ZWQvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqL1xuLmhpZ2hsaWdodCA+IHByZSxcbi5oaWdobGlnaHRlci1yb3VnZSAuaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZDogcmdiYSg3NywgMCwgNTQsIDAuMDE1KTtcbn1cbi5oaWdobGlnaHQgY29kZSB7XG4gIGNvbG9yOiAjODY3OTgyO1xufVxuLmhpZ2hsaWdodCAuZXJyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDAsIDE4MCwgMC4xKTtcbn1cbi5oaWdobGlnaHQgLmMge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5jbSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLmNwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5jMSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLmNzIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLm5jIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5uZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAubmYge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLm8ge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLm93IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5ncyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAuZ2Uge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5rIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5rdCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAua2Mge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmtkIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5rcCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAua3Ige1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmVyciB7XG4gIGNvbG9yOiAjMzNhMzk5O1xufVxuLmhpZ2hsaWdodCAueCB7XG4gIGNvbG9yOiAjMzNhM2E4O1xufVxuLmhpZ2hsaWdodCAubiB7XG4gIGNvbG9yOiAjMzNhM2I2O1xufVxuLmhpZ2hsaWdodCAubmEge1xuICBjb2xvcjogIzMzYTNjNTtcbn1cbi5oaWdobGlnaHQgLm5iIHtcbiAgY29sb3I6ICMzMzk3Yzc7XG59XG4uaGlnaGxpZ2h0IC5icCB7XG4gIGNvbG9yOiAjMzM4OGM3O1xufVxuLmhpZ2hsaWdodCAubmMge1xuICBjb2xvcjogIzMzN2FjNztcbn1cbi5oaWdobGlnaHQgLm5vIHtcbiAgY29sb3I6ICMzMzZiYzc7XG59XG4uaGlnaGxpZ2h0IC5uZCB7XG4gIGNvbG9yOiAjMzM1Y2M3O1xufVxuLmhpZ2hsaWdodCAubmkge1xuICBjb2xvcjogIzMzNGVjNztcbn1cbi5oaWdobGlnaHQgLm5lIHtcbiAgY29sb3I6ICMzMzNmYzc7XG59XG4uaGlnaGxpZ2h0IC5uZiB7XG4gIGNvbG9yOiAjMzMzMWM3O1xufVxuLmhpZ2hsaWdodCAubmwge1xuICBjb2xvcjogIzMzMjJjNztcbn1cbi5oaWdobGlnaHQgLm5uIHtcbiAgY29sb3I6ICMzMzEzYzc7XG59XG4uaGlnaGxpZ2h0IC5ueCB7XG4gIGNvbG9yOiAjMzMwNWM3O1xufVxuLmhpZ2hsaWdodCAubnQge1xuICBjb2xvcjogIzNkMDBjNztcbn1cbi5oaWdobGlnaHQgLm52IHtcbiAgY29sb3I6ICM0YjAwYzc7XG59XG4uaGlnaGxpZ2h0IC52YyB7XG4gIGNvbG9yOiAjNWEwMGM3O1xufVxuLmhpZ2hsaWdodCAudmcge1xuICBjb2xvcjogIzY5MDBjNztcbn1cbi5oaWdobGlnaHQgLnZpIHtcbiAgY29sb3I6ICM3NzAwYzc7XG59XG4uaGlnaGxpZ2h0IC5nIHtcbiAgY29sb3I6ICM4NjAwYzc7XG59XG4uaGlnaGxpZ2h0IC5nZCB7XG4gIGNvbG9yOiAjOTUwMGM3O1xufVxuLmhpZ2hsaWdodCAuZ2Uge1xuICBjb2xvcjogI2EzMDBjNztcbn1cbi5oaWdobGlnaHQgLmdyIHtcbiAgY29sb3I6ICNiMjAwYzc7XG59XG4uaGlnaGxpZ2h0IC5naCB7XG4gIGNvbG9yOiAjYzAwMGM3O1xufVxuLmhpZ2hsaWdodCAuZ2kge1xuICBjb2xvcjogI2NmMDBjNztcbn1cbi5oaWdobGlnaHQgLmdvIHtcbiAgY29sb3I6ICNkNjAwYzA7XG59XG4uaGlnaGxpZ2h0IC5ncCB7XG4gIGNvbG9yOiAjZDYwMGIxO1xufVxuLmhpZ2hsaWdodCAuZ3Mge1xuICBjb2xvcjogI2Q2MDBhMztcbn1cbi5oaWdobGlnaHQgLmd1IHtcbiAgY29sb3I6ICNkNjAwOTQ7XG59XG4uaGlnaGxpZ2h0IC5ndCB7XG4gIGNvbG9yOiAjZDYwMDg1O1xufVxuLmhpZ2hsaWdodCAuZ2wge1xuICBjb2xvcjogI2Q2MDA3Nztcbn1cbi5oaWdobGlnaHQgLmsge1xuICBjb2xvcjogI2Q2MDA2ODtcbn1cbi5oaWdobGlnaHQgLmtjIHtcbiAgY29sb3I6ICNkNjAwNTk7XG59XG4uaGlnaGxpZ2h0IC5rZCB7XG4gIGNvbG9yOiAjZDYwMDRiO1xufVxuLmhpZ2hsaWdodCAua24ge1xuICBjb2xvcjogI2Q2MDAzYztcbn1cbi5oaWdobGlnaHQgLmtwIHtcbiAgY29sb3I6ICNkNjAwMmU7XG59XG4uaGlnaGxpZ2h0IC5rciB7XG4gIGNvbG9yOiAjZDYwNTI0O1xufVxuLmhpZ2hsaWdodCAua3Qge1xuICBjb2xvcjogI2Q2MTQyNDtcbn1cbi5oaWdobGlnaHQgLmt2IHtcbiAgY29sb3I6ICNkNjIyMjQ7XG59XG4uaGlnaGxpZ2h0IC53IHtcbiAgY29sb3I6ICNkNjMxMjQ7XG59XG4uaGlnaGxpZ2h0IC5sIHtcbiAgY29sb3I6ICNkNjNmMjQ7XG59XG4uaGlnaGxpZ2h0IC5sZCB7XG4gIGNvbG9yOiAjZDY0ZTI0O1xufVxuLmhpZ2hsaWdodCAucyB7XG4gIGNvbG9yOiAjZDY1ZDI0O1xufVxuLmhpZ2hsaWdodCAuc2Ige1xuICBjb2xvcjogI2Q2NmIyNDtcbn1cbi5oaWdobGlnaHQgLnNjIHtcbiAgY29sb3I6ICNkNjdhMjQ7XG59XG4uaGlnaGxpZ2h0IC5zZCB7XG4gIGNvbG9yOiAjZDY4OTI0O1xufVxuLmhpZ2hsaWdodCAuczIge1xuICBjb2xvcjogI2Q2OTcyNDtcbn1cbi5oaWdobGlnaHQgLnNlIHtcbiAgY29sb3I6ICNkNGEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5zaCB7XG4gIGNvbG9yOiAjYzVhMzI0O1xufVxuLmhpZ2hsaWdodCAuc2kge1xuICBjb2xvcjogI2I2YTMyNDtcbn1cbi5oaWdobGlnaHQgLnN4IHtcbiAgY29sb3I6ICNhOGEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5zciB7XG4gIGNvbG9yOiAjOTlhMzI0O1xufVxuLmhpZ2hsaWdodCAuczEge1xuICBjb2xvcjogIzhiYTMyNDtcbn1cbi5oaWdobGlnaHQgLnNzIHtcbiAgY29sb3I6ICM3Y2EzMjQ7XG59XG4uaGlnaGxpZ2h0IC5tIHtcbiAgY29sb3I6ICM2ZGEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5tZiB7XG4gIGNvbG9yOiAjNWZhMzI0O1xufVxuLmhpZ2hsaWdodCAubWgge1xuICBjb2xvcjogIzUwYTMyNDtcbn1cbi5oaWdobGlnaHQgLm1pIHtcbiAgY29sb3I6ICM0MmEzMjQ7XG59XG4uaGlnaGxpZ2h0IC5pbCB7XG4gIGNvbG9yOiAjMzNhMzI0O1xufVxuLmhpZ2hsaWdodCAubW8ge1xuICBjb2xvcjogIzMzYTMzMztcbn1cbi5oaWdobGlnaHQgLm1iIHtcbiAgY29sb3I6ICMzM2EzNDE7XG59XG4uaGlnaGxpZ2h0IC5teCB7XG4gIGNvbG9yOiAjMzNhMzUwO1xufVxuLmhpZ2hsaWdodCAubyB7XG4gIGNvbG9yOiAjMzNhMzVmO1xufVxuLmhpZ2hsaWdodCAub3cge1xuICBjb2xvcjogIzMzYTM2ZDtcbn1cbi5oaWdobGlnaHQgLnAge1xuICBjb2xvcjogIzMzYTM3Yztcbn1cbi5oaWdobGlnaHQgLnBpIHtcbiAgY29sb3I6ICMzM2EzOGE7XG59XG4uaGlnaGxpZ2h0IC5jIHtcbiAgY29sb3I6ICM1YTU1ODk7XG4gIG9wYWNpdHk6IC42O1xufVxuLmhpZ2hsaWdodCAuY2Qge1xuICBjb2xvcjogIzdjNDA4OTtcbiAgb3BhY2l0eTogLjY7XG59XG4uaGlnaGxpZ2h0IC5jbSB7XG4gIGNvbG9yOiAjOTE0MDY3O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmNwIHtcbiAgY29sb3I6ICM5MTYzNTI7XG4gIG9wYWNpdHk6IC42O1xufVxuLmhpZ2hsaWdodCAuYzEge1xuICBjb2xvcjogIzZlNzc1MjtcbiAgb3BhY2l0eTogLjY7XG59XG4uaGlnaGxpZ2h0IC5jcyB7XG4gIGNvbG9yOiAjNWE3Nzc1O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgdGFibGUsXG4uaGlnaGxpZ2h0IHRhYmxlIHRoLFxuLmhpZ2hsaWdodCB0YWJsZSB0ZCxcbi5oaWdobGlnaHQgdGFibGUgdGQgcHJlIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBmb250LXNpemU6IDEwMCU7XG59XG4uaGlnaGxpZ2h0IHRhYmxlIC5saW5lbm8ge1xuICBjb2xvcjogIzg2Nzk4MjtcbiAgb3BhY2l0eTogLjU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuLmhpZ2hsaWdodCB0YWJsZSAuY29kZSB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xufVxuLmNvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiAxMHZtaW47XG59XG4uY29udGVudCBoMiB7XG4gIGZvbnQtc2l6ZTogMTA4JTtcbiAgb3BhY2l0eTogLjg7XG59XG4uY29udGVudCBoMyB7XG4gIGZvbnQtc2l6ZTogOTYlO1xuICBvcGFjaXR5OiAuNztcbn1cbi5jb250ZW50IGg0IHtcbiAgZm9udC1zaXplOiA4NCU7XG4gIG9wYWNpdHk6IC42O1xufVxuLmNvbnRlbnQgaDUge1xuICBmb250LXNpemU6IDcyJTtcbiAgb3BhY2l0eTogLjU7XG59XG4uY29udGVudCBoNiB7XG4gIGZvbnQtc2l6ZTogNjAlO1xuICBvcGFjaXR5OiAuNDtcbn1cbi5jb250ZW50IGgyLFxuLmNvbnRlbnQgaDMsXG4uY29udGVudCBoNCxcbi5jb250ZW50IGg1LFxuLmNvbnRlbnQgaDYge1xuICBtYXJnaW46IDZ2bWluIDAgMXJlbTtcbn1cbi5jb250ZW50IGhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiA4dm1pbjtcbn1cbi5uYXZpZ2F0aW9uIHtcbiAgbWFyZ2luOiAwIDAgMTB2bWluO1xufVxuLmFtc2YtbG9nbyB7XG4gIHdpZHRoOiA4MCU7XG4gIGhlaWdodDogYXV0bztcbn1cbi5hbXNmLXRpdGxlIHtcbiAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbiAgbGluZS1oZWlnaHQ6IDAgIWltcG9ydGFudDtcbn1cbi8qXG4qIHtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG4qL1xuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklsOWhjSEF2WVhOelpYUnpMM1JvWlcxbGN5OWpkWEowWVc1aEwxOXNaWE56TDIxcGVHbHVjeTVzWlhOeklpd2lYMkZ3Y0M5aGMzTmxkSE12ZEdobGJXVnpMMk4xY25SaGJtRXZYMnhsYzNNdmNtVnpaWFF1YkdWemN5SXNJbDloY0hBdllYTnpaWFJ6TDE5c1pYTnpMM1Z6WlhJdWJHVnpjeUlzSWw5aGNIQXZZWE56WlhSekwzUm9aVzFsY3k5amRYSjBZVzVoTDE5c1pYTnpMMk52YlcxdmJpNXNaWE56SWl3aVgyRndjQzloYzNObGRITXZkR2hsYldWekwyTjFjblJoYm1FdlgyeGxjM012Y0d4MVoybHVjeTVzWlhOeklpd2lYMkZ3Y0M5aGMzTmxkSE12ZEdobGJXVnpMMk4xY25SaGJtRXZYMnhsYzNNdmNISnBiblF1YkdWemN5SXNJbDloY0hBdllYTnpaWFJ6TDNSb1pXMWxjeTlqZFhKMFlXNWhMMTlzWlhOekwyTnZiWEJ2Ym1WdWRITXZjbUZ1Wkc5dGFYcGxaQzVzWlhOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN096czdPenRCUVZWRkxFZEJRVU03UVVGQlV5eEhRVUZETzBWQlExUXNZMEZCUVR0RlFVTkJMRk5CUVZNc1JVRkJWRHM3UVVGSFJpeEhRVUZETzBWQlEwTXNWMEZCUVRzN1FVTmFTanRCUVVOQkxFTkJRVU03UVVGRFJDeERRVUZETzBWQlEwTXNWVUZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3h6UWtGQlFUczdRVUZIUmp0RlFVTkZMR1ZCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdGRFkzRkNMR3RDUVVGclFpeHhRMFJrZGtNN1JVRkRRU3huUWtGQlFUdEZRVU5CTEhWQ1FVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxHdERRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3huUTBGQlFUdEZRVU5CTEhkQ1FVRkJPenRCUVU5QkxGRkJURzFETzBWQmQwWnlRenRKUkRsRlJTeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk8wbERWRVVzYVVKQlFVRTdPenRCUVZGR0xGRkJURzFETzBWQmJVWnlRenRKUkRsRlJTeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk8wbERTa1VzYVVKQlFVRTdPenRCUVZGR0xGRkJURzFETzBWQk9FVnlRenRKUVRkRlNTeHBRa0ZCUVRzN08wRkJVMFlzVVVGTVowTXNNa0pCUVRaQ08wVkJlVVV2UkR0SlFYaEZTU3c0UWtGQlFUczdPMEZCU1VZc1NVRkJRenRGUVVORExHdENRVUZCTzBWQlEwRXNUVUZCUVR0RlFVTkJMRTlCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNVMEZCVXl4RlFVRlVPMFZCUTBFc1YwRkJRVHM3UVVGTFNqdEJRVU5CTzBGQlEwRTdRVUZEUVR0RlFVTkZMRzlDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4dlFrRkJRVHM3UVVGTFJqdEJRVU5CTzBGQlEwRXNUVUZCVFR0QlFVTk9PMFZCUTBVc2MwSkJRVUU3TzBGQlNVWTdRVUZCUnp0RlFVTkVMRmRCUVVFN1JVRkRRU3h4UWtGQlFUdEZRVU5CTERSR1FVRkJPenRCUVVWQkxFTkJRVU03UVVGQlJDeE5RVUZETzBGQlEwUXNRMEZCUXp0QlFVRkVMRTFCUVVNN1JVRkRReXcwUmtGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc2VVSkJRVUU3TzBGQlIwWXNRMEZCUXp0QlFVRkVMRTFCUVVNN1JVRkRReXhYUVVGQk8wVkJRMEVzYlVKQlFVRTdPMEZCU1VvN1FVRkJTenRGUVVOSUxGTkJRVUU3TzBGQlIwWTdSVUZEUlN3MlFrRkJRVHM3UVVGSFJqdEZRVU5GTEd0RFFVRkJPenRCUVVkR08wVkJRMFVzVjBGQlFUdEZRVU5CTEZkQlFVRTdPMEZGZWtkR08wVkJRMFVzWTBGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNWVUZCUVRzN1FVRkZRU3hMUVVGRE8wRkJRMFFzUzBGQlF6dEZRVU5ETERoQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeFZRVUZCT3p0QlFWaEtMRXRCWTBVN1JVRkRSU3hUUVVGQk8wVkJRMEVzY1VKQlFVRTdPMEZCUzBvN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3h4UWtGQlFUdEZRVU5CTEhsQ1FVRkJPenRCUVZCR0xGZEJVMFU3UlVGRFJTeHhRa0ZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3huUWtGQlFUczdRVUZhU2l4WFFWTkZMRWRCUzBVN1JVRkRSU3h0UWtGQlFUczdRVUZGUVN4WFFWSktMRWRCUzBVc1JVRkhSenRCUVVORUxGZEJWRW9zUjBGTFJTeEZRVWxITzBWQlEwTXNZMEZCUVR0RlFVTkJMSEZDUVVGQk96dEJRVTlTTEZGQlJVVTdSVUZEUlN4alFVRkJPenRCUVV0S0xFbEJRVWtzVFVGQlR6dEZRVU5VTEdOQlFVRTdPMEZCU1VZc1VVRkJVenRGUVVOUUxHbENRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMR2xDUVVGQk96dEJRVVZCTEZGQlRFOHNVVUZMVGp0RlFVVkRMSEZDUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxEaENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hUUVVGVExFVkJRVlE3TzBGQlMwRXNVVUZzUWtzc1VVRm5RazRzVlVGRlJUdEZRVU5ETEdkQ1FVRkJPenRCUVVoS0xGRkJhRUpQTEZGQlowSk9MRlZCVFVNN1JVRkRSU3hYUVVGQk96dEJRVTFHTEZGQk4wSkxMRkZCTWtKT0xGbEJSVVU3UlVGRFF5eG5Ra0ZCUVRzN1FVRklTaXhSUVROQ1R5eFJRVEpDVGl4WlFVMURPMFZCUTBVc1YwRkJRVHM3UVVGTlRqdEZRVU5GTEhGQ1FVRkJPenRCU0dwSFFTeFJRVUZETzBGQlFWTXNVVUZCUXp0RlFVTlVMR05CUVVFN1JVRkRRU3hUUVVGVExFVkJRVlE3TzBGQlIwWXNVVUZCUXp0RlFVTkRMRmRCUVVFN08wRkhNRVpLTEZGQlQwVXNVVUZIUlN4SlFVRkhPMFZCUTBRc01rSkJRVUU3TzBGQldFNHNVVUZQUlN4UlFVZEZMRWxCUVVjc1YwRkpSQ3hKUVVGSE8wVkJRMFFzTWtKQlFVRTdPMEZCWmxJc1VVRlBSU3hSUVVkRkxFbEJRVWNzVjBGSlJDeEpRVUZITEZkQlNVUXNTVUZCUnp0RlFVTkVMREpDUVVGQk96dEJRVzVDVml4UlFVOUZMRkZCUjBVc1NVRkJSeXhYUVVsRUxFbEJRVWNzVjBGSlJDeEpRVUZITEZkQlNVUXNTVUZCUnp0RlFVTkVMREpDUVVGQk96dEJRWFpDV2l4UlFTdENSU3hqUVVkRkxFbEJRVWM3UVVGc1ExQXNVVUZuUTBVc1kwRkZSU3hKUVVGSE8wVkJRMFFzWVVGQlFUczdRVUZ1UTA0c1VVRXJRa1VzWTBGSFJTeEpRVUZITEZsQlIwUXNTVUZCUnp0QlFYSkRWQ3hSUVdkRFJTeGpRVVZGTEVsQlFVY3NXVUZIUkN4SlFVRkhPMFZCUTBRc1lVRkJRVHM3UVVGMFExSXNVVUV5UTBVN1JVRkRSU3hwUWtGQlFUczdRVUUxUTBvc1VVRXJRMFU3UlVGRFJTeHhRa0ZCUVR0RlFVTkJMSFZDUVVGQk96dEJRV3BFU2l4UlFXOUVSVHRGUVVORkxITkNRVUZCT3p0QlFYSkVTaXhSUVc5RVJTeFBRVWRGTzBWQlEwVXNaMEpCUVVFN1JVZzNTVW9zWlVGQlFUdEZRVU5CTEcxRFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeDFRa0ZCUVR0RlJ6UkpTU3hoUVVGQk8wVkJRMEVzWjBKQlFVRTdPMEZCVDBFc1VVRk1iVU03UlVGelkzcERMRkZCTDJORkxFOUJSMFU3U1VGUlNTeGxRVUZCT3pzN1FVRXZSRklzVVVGdlJFVXNUMEZIUlN4SFFWZEZPMFZCUTBVc1kwRkJRVHRGUVVOQkxHVkJRVUU3TzBGQmNFVlNMRkZCYjBSRkxFOUJSMFVzUjBGcFFrVTdRVUY0UlU0c1VVRnZSRVVzVDBGSFJTeEhRV3RDUlR0RlFVVkZMR05CUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYlVKQlFVRTdPMEZCVFVZc1VVRktjVU03UlVGdllqTkRMRkZCTDJORkxFOUJSMFVzUjBGcFFrVTdSVUV5WWs0c1VVRXZZMFVzVDBGSFJTeEhRV3RDUlR0SlFVOUpMSE5DUVVGQk8wbEJRMEVzZFVKQlFVRTdPenRCUVdwR1ZpeFJRVzlFUlN4UFFXMURSVHRGUVVORkxITkNRVUZCTzBWQlEwRXNZMEZCUVRzN1FVRjZSazRzVVVGdlJFVXNUMEYzUTBVN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHZENRVUZCT3p0QlFXaEhUaXhSUVc5RVJTeFBRWGREUlN4aFFVMUZPMFZCUTBVc2FVSkJRVUU3TzBGQmJrZFNMRkZCYjBSRkxFOUJiVVJGTzBWQlEwVXNZMEZCUVR0RlFVTkJMR2xDUVVGQk96dEJRWHBIVGl4UlFUWkhSVHRCUVRkSFJpeFJRVGhIUlR0QlFUbEhSaXhSUVN0SFJUdEJRUzlIUml4UlFXZElSVHRCUVdoSVJpeFJRV2xJUlR0RlFVTkZMSEZDUVVGQk8wVklhRTFHTEdOQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxGZEJRVUU3TzBGSE5FVkdMRkZCYzBoRk8wRkJkRWhHTEZGQmRVaEZPMFZCUTBVc2NVSkJRVUU3UlVGRFFTeHJRa0ZCUVRzN1FVRjZTRW9zVVVGelNFVXNSMEZMUlR0QlFUTklTaXhSUVhWSVJTeEhRVWxGTzBWQlEwVXNkVUpCUVVFN08wRkJOVWhPTEZGQmMwaEZMRWRCUzBVc1IwRkhSVHRCUVRsSVRpeFJRWFZJUlN4SFFVbEZMRWRCUjBVN1FVRTVTRTRzVVVGelNFVXNSMEZMUlN4SFFVbEZPMEZCTDBoT0xGRkJkVWhGTEVkQlNVVXNSMEZKUlR0RlFVTkZMR2RDUVVGQk96dEJRV2hKVWl4UlFYRkpSVHRGUVVORkxHMUNRVUZCT3p0QlFYUkpTaXhSUVhsSlJUdEJRWHBKUml4UlFUQkpSVHRCUVRGSlJpeFJRVEpKUlR0QlFUTkpSaXhSUVRSSlJUdEZRVU5GTEdOQlFVRTdSVUZEUVN4UFFVRlBMRzlEUVVGUU8wVkJRMEVzVlVGQlZTeDVRa0ZCVmpzN1FVRlBRU3hSUVV4dFF6dEZRV3RZZGtNc1VVRXhXRVU3UlVFd1dFWXNVVUY2V0VVN1JVRjVXRVlzVVVGNFdFVTdSVUYzV0VZc1VVRjJXRVU3U1VndlRVRXNhVUpCUVVFN1NVRkRRU3hyUWtGQlFUdEpSM0ZPU1N4UFFVRlBMSE5DUVVGUU96czdRVUZUUml4UlFVNXRRenRGUVRaWGRrTXNVVUV4V0VVN1JVRXdXRVlzVVVGNldFVTdSVUY1V0VZc1VVRjRXRVU3UlVGM1dFWXNVVUYyV0VVN1NVZ3ZUVUVzYVVKQlFVRTdTVUZEUVN4clFrRkJRVHRKUnpCT1NTeFBRVUZQTEhOQ1FVRlFPenM3UVVGSlJpeFJRVzVDUml4SlFXMUNSenRCUVVGRUxGRkJiRUpHTEUxQmEwSkhPMEZCUVVRc1VVRnFRa1lzVDBGcFFrYzdRVUZCUkN4UlFXaENSaXhUUVdkQ1J6dEZRVU5ETEdOQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxGZEJRVUU3TzBGQmFFdE9MRkZCYjB0Rk8wVkJRMFVzYTBKQlFVRTdSVUZEUVN4eFFrRkJRVHRGUVVOQkxHRkJRV0VzYTBKQlFXSTdSVUZEUVN4alFVRkJPenRCUVUxQkxGRkJTbTFETzBWQmVWWjJReXhSUVM5V1JUdEpRVTlKTEdOQlFVRTdPenRCUVROTFRpeFJRVzlMUlN4WFFWVkZPMFZCUTBVc2JVSkJRVUU3UlVGRFFTeHpRa0ZCUVR0RlFVbEJMSE5DUVVGQk8wVkJSVUVzWjBKQlFVRTdPMEZCUjBFc1VVRnlRa29zVjBGVlJTeEpRVmRITzBWQlEwTXNhVUpCUVVFN1JVRkRRU3h4UWtGQlFUczdRVUZQU2l4UlFVcHhRenRGUVhGVmVrTXNVVUV2VmtVc1YwRlZSVHRKU0hSUVJpeGpSM1ZSYzBJc1pVaDJVWFJDTzBsQlEwRXNhMEpCUVVFN1NVRkpRU3hwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPenM3UVVFNVFrRXNVVWR2VVVFc1YwRm5RMFVzVDBod1UwUTdRVUZCVXl4UlIyOVJWaXhYUVdkRFJTeFBTSEJUVXp0RlFVTlVMR05CUVVFN1JVRkRRU3hUUVVGVExFVkJRVlE3TzBGQlIwWXNVVWNyVUVFc1YwRm5RMFVzVDBndlVrUTdSVUZEUXl4WFFVRkJPenRCUnpCR1NpeFJRVzlMUlN4WFFXOURSVHRGUVVORkxGbEJRVUU3UlVGRFFTeHJRa0ZCUVRzN1FVRkZRU3hSUVhoRFNpeFhRVzlEUlN4TFFVbEhPMFZCUlVNc1UwRkJVeXhwUWtGQlZEczdRVWg2VVU0c1VVYzRVVUVzUjBnNVVVTTdSVUZEUXl4alFVRkJPMFZCUTBFc1UwRkJVeXhGUVVGVU8wVkJRMEVzVlVGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3cyUTBGQlFUczdRVWR0UkVvc1VVRjFUa1U3UlVGRFJTeGpRVUZCT3p0QlFYaE9TaXhSUVRKT1JUdEJRVE5PUml4UlFUUk9SVHRGUVVORkxEWkNRVUZCTzBWQlEwRXNZMEZCUVRzN1FVRTVUa29zVVVGclQwVXNSVUZCUlR0QlFXeFBTaXhSUVcxUFJTeEhRVUZITzBWQlEwUXNjVUpCUVVFN08wRkJjRTlLTEZGQmRVOUZPMFZCUTBVc1kwRkJRVHRGU0ROVFJpeHRRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkhORk5GTEhGQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNkVUpCUVVFN1JVRkRRU3h0UTBGQlFUdEZRVVZCTEdsRFFVRkJPenRCUVU5QkxGRkJURzFETzBWQmFWSjJReXhSUVRWU1JUdEpTQzlUUVN4cFFrRkJRVHRKUVVOQkxHdENRVUZCTzBsQlNVRXNhVUpCUVVFN1NVRkRRU3hyUWtGQlFUczdPMEZITmxSQkxGRkJTbkZETzBWQk5GRjJReXhSUVRWU1JUdEpTQzlUUVN4cFFrRkJRVHRKUVVOQkxHdENRVUZCTzBsQlNVRXNhVUpCUVVFN1NVRkRRU3hyUWtGQlFUczdPMEZIYTBWR0xGRkJPRkJGTEV0QlJVVTdSVUZEUlN4alFVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzTWtOQlFVRTdSVUZGUVN4blFrRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTdzBRa0ZCUVRzN1FVRkZRU3hSUVdSS0xFdEJSVVVzVFVGWlJ6dEZRVU5ETEdOQlFVRTdSVUZEUVN3clFrRkJRVHRGUVVOQkxHdENRVUZCT3p0QlFWbEdMRkZCVGtvc1RVRkpSeXhOUVVGTkxGTkJRVk1zVVVGRllqdEJRVUZFTEZGQlRFb3NVMEZIUnl4TlFVRk5MRk5CUVZNc1VVRkZZanRCUVVGRUxGRkJTa29zVDBGRlJ5eE5RVUZOTEZOQlFWTXNVVUZGWWp0RlFVTkRMRzFEUVVGQk8wVkJRMEVzY1VKQlFVRTdSVUZGUVN4blFrRkJRVHM3UVVFdlVsSXNVVUZ2VTBVN1JVRkRSU3g1UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxGZEJRVUU3UlVnelYwWXNiVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZSelJYUlN4eFFrRkJRVHM3UVVFeFUwb3NVVUZ2VTBVc1RVRlJSVHRCUVRWVFNpeFJRVzlUUlN4TlFWTkZPMFZCUTBVc2IwSkJRVUU3TzBGQk9WTk9MRkZCYjFORkxFMUJZVVU3UlVGRFJTdzBRMEZCUVR0RlFVVkJMR2RDUVVGQk96dEJRWEJVVGl4UlFXOVRSU3hOUVcxQ1JUdEZRVU5GTEhsRFFVRkJPenRCUVUxT0xFdEJRVXM3UVVGRFRDeExRVUZMTzBWQlEwZ3NiVUpCUVVFN08wRkJTVVVzUzBGT1F5eEpRVWxJTzBGQlJVVXNTMEZNUXl4SlFVZElPMEZCUjBVc1MwRlFReXhKUVVsSUxFOUJSMGs3UVVGQlJpeExRVTVETEVsQlIwZ3NUMEZIU1R0RlFVTkJMR2xDUVVGQk96dEJRVTFPTzBWQlEwVXNiMEpCUVVFN08wRkJTVVk3UlVGRFJTeGpRVUZCTzBWQlEwRXNWMEZCUVRzN1FVRkpSanRGU0RWaFJTeGxRVUZCTzBWQlEwRXNiVU5CUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEhWQ1FVRkJPMFZITW1GQkxHVkJRVUU3UlVGRFFTeG5RMEZCUVRzN1FVRkpSanRGUVVORkxHdENRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3h2UTBGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc2VVTkJRVUU3TzBGQlQwRXNVVUZLYTBNc2NVSkJRVGhDTzBWQk5rcHNSVHRKUVRWS1NTeG5Ra0ZCUVRzN08wRkJSMFlzVVVGQlF6dEZRVU5ETEd0Q1FVRkJPMFZCUTBFc1VVRkJRVHRGUVVOQkxGVkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1UwRkJVeXhGUVVGVU8wVkJRMEVzYTAxQlFVRTdPMEZCZEVKS0xGRkJLMEpGTzBWQlJVVXNZMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTERCRFFVRkJPenRCUVV0S08wVklNMk5GTEd0Q1FVRkJPMFZCUTBFc2JVSkJRVUU3TzBGSGFXUkdMRkZCU0c5RExIRkNRVUU0UWp0RlFYVkliRVU3U1VoMGEwSkZMR05CUVVFN1NVRkRRU3hsUVVGQk96czdRVWR2WkVZN1FVRkRRVHRCUVVOQk8wVkJRMFVzYlVKQlFVRTdSVUZEUVN4aFFVRmhMR3RDUVVGaU8wVkJRMEVzT0VKQlFVRTdPMEZCVFVZc1VVRktjVU03UlVFd1IzSkRPMFZCUVVFN1JVRkJRVHRKU0ROclFrVXNZMGRyWld0Q0xHVkliR1ZzUWp0SlFVTkJMR3RDUVVGQk8wbEJTVUVzYVVKQlFVRTdTVUZEUVN4clFrRkJRVHM3TzBGSGEyVkdPMFZCUlVVc1kwRkJRVHM3UVVnM1pFRXNWVUZCUXp0RlFVTkRMR05CUVVFN1JVRkRRU3hUUVVGVExFVkJRVlE3UlVGRFFTeFZRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxEWkRRVUZCT3p0QlIzZGtTaXhQUVVkRk8wRkJTRVlzVDBGSlJUdEJRVXBHTEU5QlQwVTdRVUZRUml4UFFWRkZPMFZCUTBVc1kwRkJRVHM3UVVGTFNqdEZRVU5GTEdOQlFVRTdSVUZEUVN4cFFrRkJRVHM3UVVGR1JpeExRVWxGTzBWSU5XZENRU3hsUVVGQk8wVkJRMEVzYlVOQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIVkNRVUZCTzBWSE1tZENSU3hsUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZGUVN4VlFVRkJPMFZCUTBFc1UwRkJRVHM3UVVGTlJpeFJRVXB4UXp0RlFXOUZka01zUzBFMVJVVTdTVUZWU1N4bFFVRkJPenM3UVVGVlNpeFJRVXB4UXp0RlFUUkVka01zUzBFNVJFVTdTVUZKU1N4aFFVRkJPenM3UVVGTlRpeFRRVVZGTzBWQlEwVXNjVUpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3c0UWtGQlFUczdRVUZIUVN4VFFWaEdMRXRCVjBjN1JVRkRReXhwUWtGQlFUczdRVUZKU2l4VFFVRkRMRTFCUjBNN1FVRkdSaXhUUVVGRExFMUJSVU03UlVGRFJTeFhRVUZYTEZWQlFWZzdPMEZCUzA0N1JVRkRSU3h0UWtGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4NVFrRkJRVHM3UVVGSVJpeFBRVXRGTEVkQlJVVTdSVUZEUlN4bFFVRkJPenRCUVVWQkxFOUJURW9zUjBGRlJTeEhRVWRITzBWQlEwTXNaVUZCUVR0RlFVTkJMRk5CUVZNc1MwRkJWRHRGUVVOQkxGZEJRVUU3TzBGQlMwRXNUMEZpVGl4SFFVVkZMRWRCVTBjc1YwRkZSVHRGUVVORExHRkJRVUU3TzBGRGFHMUNWaXhQUVVWRkxHTkJSVVVzVVVGQlVTeEZRVUZGTEUxQlFVc3NTVUZCU1R0RlFVTnFRaXhsUVVGQk96dEJRVWxLTEU5QlFVTTdSVUZEUXl4blFrRkJRVHM3UVVGTFNqdEZRVU5GTEhsQ1FVRkJPenRCUVVSR0xFdEJSMFU3UVVGSVJpeExRVWRSTzBWQlEwb3NWVUZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3cyUWtGQlFUczdRVUZPU2l4TFFWTkZPMFZCUTBVc05rSkJRVUU3TzBGQlZrb3NTMEZUUlN4WFFVZEZPMFZCUTBVc01FSkJRVUU3TzBGQllrNHNTMEZUUlN4WFFVZEZMRmRCUjBVN1JVRkRSU3d5UWtGQlFUczdRVUZvUWxJc1MwRnpRa1U3UlVGRFJTeDVRa0ZCUVRzN1FVRjJRa29zUzBFd1FrVTdSVUZEUlN3d1FrRkJRVHRGUVVOQkxIVkNRVUZCT3p0QlEzRkRTanRGUVM5RlJUdEZRVU5CTEVOQlFVTTdSVUZEUkN4RFFVRkRPMGxCUTBNc2EwTkJRVUU3U1VGRFFTeHpRa0ZCUVR0SlFVTkJMREpDUVVGQk8wbEJRMEVzTkVKQlFVRTdPMFZCUjBZN1NVRkRSU3gzUWtGQlFUdEpRVU5CTEc5Q1FVRkJPenRGUVVkR08wVkJRMEVzUTBGQlF6dEpRVU5ETEhGQ1FVRkJPenRGUVVkR0xGRkJRVk03UlVGRFZDeFJRVUZUTzBsQlExQXNNRUpCUVVFN08wVkJSa1lzVVVGQlV5eGpRVWxRTEVWQlFVTXNUVUZCVFR0RlFVaFVMRkZCUVZNc1kwRkhVQ3hGUVVGRExFMUJRVTA3U1VGRFRDeFRRVUZUTEV0QlFVc3NWMEZCVnl4SFFVRjZRanRKUVVOQkxHMUNRVUZCT3p0RlFVNUtMRkZCUVZNc1kwRlhVQ3hGUVVGRExGZEJRVmM3UlVGV1pDeFJRVUZUTEdOQlZWQXNSVUZCUXl4WFFVRlhPMFZCV0dRc1VVRkJVeXhqUVZsUUxFVkJRVU1zY1VKQlFYRkNPMFZCV0hoQ0xGRkJRVk1zWTBGWFVDeEZRVUZETEhGQ1FVRnhRanRKUVVOd1FpeFRRVUZUTEVWQlFWUTdPMFZCWWtvc1VVRkJVeXhqUVdkQ1VDeExRVUZKTEU5QlFVODdSVUZtWWl4UlFVRlRMR05CWlZBc1MwRkJTU3hQUVVGUE8wbEJRMVFzVTBGQlV5eExRVUZMTEZsQlFWa3NSMEZCTVVJN1NVRkRRU3h0UWtGQlFUczdSVUZKU2p0RlFVTkJPMGxCUTBVc2QwSkJRVUU3TzBWQlIwWTdTVUZEUlN3eVFrRkJRVHM3UlVGSFJqdEZRVU5CTzBsQlEwVXNkMEpCUVVFN08wVkJSMFk3U1VGRFJTd3dRa0ZCUVRzN1JVRkhSanRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdTVUZEUlN4VlFVRkJPMGxCUTBFc1UwRkJRVHM3UlVGSFJqdEZRVU5CTzBsQlEwVXNkVUpCUVVFN08wVkJSMFk3UlVGRFFUdEpRVU5GTEdGQlFVRTdPenM3T3pzN08wRkRja1ZLTEZWQlQwVTdRVUZEUVN4clFrRkJiVUk3UlVGRmFrSXNhME5CUVVFN08wRkJWa29zVlVGalJUdEZRVUZQTEdOQlFVRTdPMEZCWkZRc1ZVRnBRa1U3UlVGQlR5eDNRMEZCUVRzN1FVRnFRbFFzVlVGdFFrVTdSVUZCVHl4clFrRkJRVHM3UVVGdVFsUXNWVUZ2UWtVN1JVRkJUeXhyUWtGQlFUczdRVUZ3UWxRc1ZVRnhRa1U3UlVGQlR5eHBRa0ZCUVRzN1FVRnlRbFFzVlVGelFrVTdSVUZCVHl4clFrRkJRVHM3UVVGMFFsUXNWVUYxUWtVN1JVRkJUeXhwUWtGQlFUdEZRVUZ0UWl4clFrRkJRVHM3UVVGMlFqVkNMRlZCZVVKRk8wVkJRVThzYVVKQlFVRTdPMEZCZWtKVUxGVkJNRUpGTzBWQlFVOHNhVUpCUVVFN08wRkJNVUpVTEZWQk1rSkZPMFZCUVU4c2FVSkJRVUU3TzBGQk0wSlVMRlZCTmtKRk8wVkJRVThzYVVKQlFVRTdPMEZCTjBKVUxGVkJPRUpGTzBWQlFVOHNhVUpCUVVFN08wRkJPVUpVTEZWQlowTkZPMFZCUVU4c2FVSkJRVUU3TzBGQmFFTlVMRlZCYVVORk8wVkJRVThzYTBKQlFVRTdPMEZCYWtOVUxGVkJiVU5GTzBWQlFVOHNhVUpCUVVFN08wRkJia05VTEZWQmIwTkZPMFZCUVU4c2FVSkJRVUU3TzBGQmNFTlVMRlZCY1VORk8wVkJRVThzYVVKQlFVRTdPMEZCY2tOVUxGVkJjME5GTzBWQlFVOHNhVUpCUVVFN08wRkJkRU5VTEZWQmRVTkZPMFZCUVU4c2FVSkJRVUU3TzBGQmRrTlVMRlZCZDBORk8wVkJRVThzYVVKQlFVRTdPMEZCZUVOVUxGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVN0SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRm9TVTRzVlVFclNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJhRWxPTEZWQkswaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRV2hKVGl4VlFTdElTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUZvU1U0c1ZVRXJTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCYUVsT0xGVkJLMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVdoSlRpeFZRU3RJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGb1NVNHNWVUVyU0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmFFbE9MRlZCSzBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFXaEpUaXhWUVcxS1NTeEZRVUZETzBWQlEwTXNZMEZCUVR0RlFVTkJMRmRCUVVFN08wRkJja3BPTEZWQmJVcEpMRVZCUVVNN1JVRkRReXhqUVVGQk8wVkJRMEVzVjBGQlFUczdRVUZ5U2s0c1ZVRnRTa2tzUlVGQlF6dEZRVU5ETEdOQlFVRTdSVUZEUVN4WFFVRkJPenRCUVhKS1RpeFZRVzFLU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHRGUVVOQkxGZEJRVUU3TzBGQmNrcE9MRlZCYlVwSkxFVkJRVU03UlVGRFF5eGpRVUZCTzBWQlEwRXNWMEZCUVRzN1FVRnlTazRzVlVGdFNra3NSVUZCUXp0RlFVTkRMR05CUVVFN1JVRkRRU3hYUVVGQk96dEJRVk5HTEZWQlJrWTdRVUUxU2tZc1ZVRTBTa1VzVFVGSFJUdEJRUzlLU2l4VlFUUktSU3hOUVVsRk8wRkJhRXRLTEZWQk5FcEZMRTFCUzBVc1IwRkJSenRGUVVORUxGVkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMSFZDUVVGQk8wVkJRMEVzWlVGQlFUczdRVUYwUzA0c1ZVRTBTa1VzVFVGaFJUdEZRVU5GTEdOQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc2FVSkJRVUU3TzBGQk5VdE9MRlZCTkVwRkxFMUJiVUpGTzBWQlEwVXNhVUpCUVVFN08wRktNMHhPTzBWQlkwVXNjVUpCUVVFN08wRkJaRVlzVVVGRFJUdEZRVUZMTEdWQlFVRTdSVUZCYVVJc1YwRkJRVHM3UVVGRWVFSXNVVUZGUlR0RlFVRkxMR05CUVVFN1JVRkJhVUlzVjBGQlFUczdRVUZHZUVJc1VVRkhSVHRGUVVGTExHTkJRVUU3UlVGQmFVSXNWMEZCUVRzN1FVRkllRUlzVVVGSlJUdEZRVUZMTEdOQlFVRTdSVUZCYVVJc1YwRkJRVHM3UVVGS2VFSXNVVUZMUlR0RlFVRkxMR05CUVVFN1JVRkJhVUlzVjBGQlFUczdRVUZNZUVJc1VVRk5SVHRCUVU1R0xGRkJUMFU3UVVGUVJpeFJRVkZGTzBGQlVrWXNVVUZUUlR0QlFWUkdMRkZCVlVVN1JVRkRSU3h2UWtGQlFUczdRVUZZU2l4UlFXRkZPMFZCUVZNc2NVSkJRVUU3TzBGQlNWZzdSVUZEUlN4clFrRkJRVHM3UVVGbFJqdEZRVU5GTEZWQlFVRTdSVUZEUVN4WlFVRkJPenRCUVVkR08wVkJRMFVzYzBKQlFVRTdSVUZEUVN4NVFrRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4dlhHNHZMeUJOYVhocGJuTmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk4dklFbHVkbVZ5ZENCamIyeHZjaUJ6ZDJsMFkyaGxjaUJtYjNJZ2FXMWhaMlZ6SUdGdVpDQjJhV1JsYjNOY2JpOHZJRHB5YjI5MElIc2dabWxzZEdWeU9pQnBiblpsY25Rb01UQXdKU2s3SUgxY2JseHVMeThnYUhSMGNEb3ZMMjVwWTI5c1lYTm5ZV3hzWVdkb1pYSXVZMjl0TDIxcFkzSnZMV05zWldGeVptbDRMV2hoWTJzdlhHNHVZMllnZTF4dVhHNGdJQ1k2WW1WbWIzSmxMQ0FtT21GbWRHVnlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQjBZV0pzWlR0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0I5WEc1Y2JpQWdKanBoWm5SbGNpQjdYRzRnSUNBZ1kyeGxZWEk2SUdKdmRHZzdYRzRnSUgxY2JuMWNibHh1TG1obFlXUnBibWNvS1NCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTXpNd0pUdGNiaUFnTFhkbFltdHBkQzFtYjI1MExYTnRiMjkwYUdsdVp6b2dZVzUwYVdGc2FXRnpaV1E3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dMUzR3Tm1WdE8xeHVmVnh1WEc0dWMzVmlMV2hsWVdScGJtY29LU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dOeklsTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh1SUNCdmNHRmphWFI1T2lBdU5UdGNibjFjYmx4dUxuQmhaR1JwYm1jdGIyWm1jMlYwS0VCd1lXUmthVzVuTFd4bFpuUXNJRUJ3WVdSa2FXNW5MWEpwWjJoMEtTQjdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dRSEJoWkdScGJtY3RiR1ZtZER0Y2JpQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ1FIQmhaR1JwYm1jdGNtbG5hSFE3WEc1OVhHNWNiaTV0WVhKbmFXNHRiMlptYzJWMEtFQnRZWEpuYVc0dGJHVm1kQ3dnUUcxaGNtZHBiaTF5YVdkb2RDa2dlMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dRRzFoY21kcGJpMXNaV1owTzF4dUlDQnRZWEpuYVc0dGNtbG5hSFE2SUVCdFlYSm5hVzR0Y21sbmFIUTdYRzU5WEc1Y2JpNXpjR3hwZEdWeUtDa2dlMXh1SUNCQWMybDZaVG9nTkhCNE8xeHVJQ0JBWTI5c2IzSTZJRUIwWlhoMExXTnZiRzl5TzF4dVhHNGdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSnljN1hHNGdJQ0FnZDJsa2RHZzZJRUJ6YVhwbE8xeHVJQ0FnSUdobGFXZG9kRG9nUUhOcGVtVTdYRzRnSUNBZ2JXRnlaMmx1T2lBeVpXMGdZWFYwYnp0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFNQ1U3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nUUdOdmJHOXlPMXh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZJQ2hBYzJsNlpTQXFJRFVwSURBZ01DQXdJRUJqYjJ4dmNpd2dLRUJ6YVhwbElDb2dMVFVwSURBZ01DQXdJRUJqYjJ4dmNqdGNiaUFnZlZ4dWZWeHVJaXdpTHk5Y2JpOHZJRkpsYzJWMFhHNHZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzRxTEZ4dUtqcGlaV1p2Y21Vc1hHNHFPbUZtZEdWeUlIdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1ZlZ4dVhHNWliMlI1SUh0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0JBYzNCaFkyVXRiR2M3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2SURBN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCQVptOXVkSE4wWVdOckxXUmxabUYxYkhRN1hHNGdJR1p2Ym5RdGMybDZaVG9nUUdadmJuUXRjMmw2WlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUVCc2FXNWxMV2hsYVdkb2REdGNiaUFnWTI5c2IzSTZJRUIwWlhoMExXTnZiRzl5TzF4dUlDQjBaWGgwTFhKbGJtUmxjbWx1WnpvZ2IzQjBhVzFwZW1Wc1pXZHBZbWxzYVhSNU8xeHVJQ0JpWVdOclozSnZkVzVrT2lCQVltRmphMmR5YjNWdVpDMWpiMnh2Y2p0Y2JpQWdhVzFoWjJVdGNtVnVaR1Z5YVc1bk9pQnZjSFJwYldsNlpYRjFZV3hwZEhrN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVNbk1nWldGelpUdGNibHh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRiV1FwSUh0Y2JpQWdJQ0F1Y0dGa1pHbHVaeTF2Wm1aelpYUW9RSE53WVdObExXMWtMQ0JBYzNCaFkyVXRiV1FwTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nS0VCbWIyNTBMWE5wZW1VZ0tpQXhMalFwTzF4dUlDQjlYRzVjYmlBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklFQmljbVZoYTNCdmFXNTBMWE50S1NCN1hHNGdJQ0FnTG5CaFpHUnBibWN0YjJabWMyVjBLRUJ6Y0dGalpTMXpiU3dnUUhOd1lXTmxMWE50S1R0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SUNoQVptOXVkQzF6YVhwbElDb2dNaTQwS1R0Y2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQkFZbkpsWVd0d2IybHVkQzE0Y3lrZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0tFQm1iMjUwTFhOcGVtVWdLaUF6TGpJcE8xeHVJQ0I5WEc1Y2JpQWdMeThnUVd4c0lHbFBVeUJrWlhacFkyVnpMQ0IwYUdVZ1pXRnphV1Z6ZENCM1lYbGNiaUFnUUcxbFpHbGhJQ2h0WVhndFpHVjJhV05sTFhkcFpIUm9PaUEwT0RCd2VDa3NJQ2h0WVhndFpHVjJhV05sTFhkcFpIUm9PaUF4TURJMGNIZ3BJSHRjYmlBZ0lDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklHNXZibVU3WEc0Z0lIMWNibHh1SUNBdkx5QkJJSE5sYldsMGNtRnVjMngxWTJWdWRDQmlZWElnWVhRZ2RHaGxJSFJ2Y0NCdlppQjBhR1VnY0dGblpWeHVJQ0FtT21KbFptOXlaU0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lIb3RhVzVrWlhnNklDMDVPVGs1TzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dNWFp0WVhnN1hHNGdJQ0FnY0c5cGJuUmxjaTFsZG1WdWRITTZJRzV2Ym1VN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ1FHeHBibXN0WTI5c2IzSTdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNJanRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXVNanRjYmlBZ2ZWeHVmVnh1WEc0dkx5QlNaWE5sZENCbWIyNTBjeUJtYjNJZ2NtVnNaWFpoYm5RZ1pXeGxiV1Z1ZEhOY2JtbHVjSFYwTEZ4dVluVjBkRzl1TEZ4dWMyVnNaV04wTEZ4dWRHVjRkR0Z5WldFZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ2FXNW9aWEpwZER0Y2JpQWdabTl1ZEMxemFYcGxPaUJwYm1obGNtbDBPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dhVzVvWlhKcGREdGNibjFjYmx4dUx5OGdVbVZ6WlhRZ2RXNTFjM1ZoYkNCR2FYSmxabTk0TFc5dUxVRnVaSEp2YVdRZ1pHVm1ZWFZzZENCemRIbHNaUzVjYmk4dklGTmxaU0JvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2Ym1WamIyeGhjeTl1YjNKdFlXeHBlbVV1WTNOekwybHpjM1ZsY3k4eU1UUmNibUoxZEhSdmJpeGNibWx1Y0hWMExGeHVjMlZzWldOMFcyMTFiSFJwY0d4bFhTeGNiblJsZUhSaGNtVmhJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2JtOXVaVHRjYm4xY2JseHVMeThnVW1WelpYUWdZMjl0Ylc5dUlHVnNaVzFsYm5SelhHNWhMQ0JpZFhSMGIyNGdlMXh1SUNCamIyeHZjam9nUUhSbGVIUXRZMjlzYjNJN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWTI5c2IzSWdMalZ6SUdWaGMyVXNJR0p2Y21SbGNpMWpiMnh2Y2lBdU5YTWdaV0Z6WlN3Z1ltRmphMmR5YjNWdVpDQXVOWE1nWldGelpTd2diM0JoWTJsMGVTQXhMalZ6SUdWaGMyVTdYRzVjYmlBZ0pqcG9iM1psY2l4Y2JpQWdKanBtYjJOMWN5QjdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dZMjlzYjNJZ0xqRnpJR1ZoYzJVc0lHSnZjbVJsY2kxamIyeHZjaUF1TVhNZ1pXRnpaU3dnWW1GamEyZHliM1Z1WkNBdU1YTWdaV0Z6WlN3Z2IzQmhZMmwwZVNBdU1YTWdaV0Z6WlR0Y2JpQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaVHRjYmlBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0dGMydHBjRG9nYVc1ck8xeHVJQ0I5WEc1Y2JpQWdKbHRrYVhOaFlteGxaRjBnZTF4dUlDQWdJRzl3WVdOcGRIazZJQzQwTzF4dUlDQWdJR04xY25OdmNqb2dibTkwTFdGc2JHOTNaV1E3WEc0Z0lIMWNibjFjYmx4dWFXMW5MQ0JvY2lCN1hHNGdJR0p2Y21SbGNqb2dNRHRjYm4xY2JseHVaR1ZzSUh0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnNhVzVsTFhSb2NtOTFaMmc3WEc1OVhHNWNiam82YzJWc1pXTjBhVzl1SUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nWm1Ga1pTaEFiR2x1YXkxamIyeHZjaXdnTVRBbEtUdGNibjFjYmx4dU9qb3RkMlZpYTJsMExXbHVjSFYwTFhCc1lXTmxhRzlzWkdWeUlIdGNiaUFnWTI5c2IzSTZJRUIwWlhoMExXTnZiRzl5TzF4dUlDQnZjR0ZqYVhSNU9pQXVNVHRjYm4xY2JpSXNJaTh2SUZWelpYSWdZM1Z6ZEc5dElITjBlV3hsYzF4dVhHNHZMeUJCYkhSbGNtNWhkR2wyWlNCMGFYUnNaU0J6YVhwbFhHNHZMeUJDZVNCa1pXWmhkV3gwSUdGc2JDQm9aV0ZrYVc1bklHeGxkbVZzY3lCb1lYWmxJSFJvWlNCellXMWxJR1p2Ym5RZ2MybDZaU3dnWW5WMElHMWhibmtnY0dWdmNHeGxJRzFoZVNCdWIzUWdiR2xyWlNCMGFHbHpMQ0J6YnlCb1pYSmxKM01nWVc0Z1lXeDBaWEp1WVhScGRtVWdabTl1ZENCemFYcGxJSE4wWVdOck9seHVMbU52Ym5SbGJuUWdlMXh1SUNCb01pQjdJR1p2Ym5RdGMybDZaVG9nTVRBNEpUc2diM0JoWTJsMGVUb2dMamc3SUgxY2JpQWdhRE1nZXlCbWIyNTBMWE5wZW1VNklEazJKVHNnSUc5d1lXTnBkSGs2SUM0M095QjlYRzRnSUdnMElIc2dabTl1ZEMxemFYcGxPaUE0TkNVN0lDQnZjR0ZqYVhSNU9pQXVOanNnZlZ4dUlDQm9OU0I3SUdadmJuUXRjMmw2WlRvZ056SWxPeUFnYjNCaFkybDBlVG9nTGpVN0lIMWNiaUFnYURZZ2V5Qm1iMjUwTFhOcGVtVTZJRFl3SlRzZ0lHOXdZV05wZEhrNklDNDBPeUI5WEc0Z0lHZ3lMRnh1SUNCb015eGNiaUFnYURRc1hHNGdJR2cxTEZ4dUlDQm9OaUI3WEc0Z0lDQWdiV0Z5WjJsdU9pQTJkbTFwYmlBd0lERnlaVzA3WEc0Z0lIMWNiaUFnYUdWaFpHVnlJSHNnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRGgyYldsdU95QjlYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV3ZG0xcGJqdGNibjFjYmx4dUxtNWhkbWxuWVhScGIyNGdlMXh1SUNCdFlYSm5hVzQ2SURBZ01DQXhNSFp0YVc0N1hHNTlYRzVjYmk4dklFZHZiMmRzWlNCR2IyNTBjMXh1UUdsdGNHOXlkQ0IxY213b2FIUjBjSE02THk5bWIyNTBjeTVuYjI5bmJHVmhjR2x6TG1OdmJTOWpjM00vWm1GdGFXeDVQVlp2Ykd4cmIzSnVPalF3TUN3ME1EQnBkR0ZzYVdNcE8xeHVYRzR2THlCRGRYTjBiMjBnZG1GeWFXRmliR1Z6WEc1QVptOXVkSE4wWVdOckxYTmhibk10YzJWeWFXWTZJRndpU0dWc2RtVjBhV05oSUU1bGRXVmNJaXdnWENKSWFYSmhaMmx1YnlCVFlXNXpJRWRDWENJc0lFRnlhV0ZzTENCellXNXpMWE5sY21sbU8xeHVRR1p2Ym5SemRHRmpheTF6WlhKcFpqb2dYQ0pXYjJ4c2EyOXlibHdpTENCelpYSnBaanRjYmtCMmIyeHNhMjl5YmpvZ1hDSldiMnhzYTI5eWJsd2lMQ0J6WlhKcFpqdGNia0JzYVc1ckxXTnZiRzl5T2lBalptWXdNR0kwTzF4dVFHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc1QWRHVjRkQzFqYjJ4dmNqb2dJekF3TUR0Y2JseHVMeThnU0c5dFpYQmhaMlVnYzNSNWJHVmNiaTVoYlhObUxXeHZaMjhnZTF4dUlDQjNhV1IwYURvZ09EQWxPMXh1SUNCb1pXbG5hSFE2SUdGMWRHODdYRzU5WEc1Y2JpNWhiWE5tTFhScGRHeGxJSHRjYmlBZ2RHVjRkQzFwYm1SbGJuUTZJQzA1T1RrNU9UbHdlRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREFnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1THk4Z1FXNTBhUzFoYkdsaGN5QjBaWGgwWEc0dktseHVLaUI3WEc0Z0lIUmxlSFF0Y21WdVpHVnlhVzVuT2lCdmNIUnBiV2w2WlV4bFoybGlhV3hwZEhrN1hHNGdJQzEzWldKcmFYUXRabTl1ZEMxemJXOXZkR2hwYm1jNklHRnVkR2xoYkdsaGMyVmtPMXh1SUNBdGJXOTZMVzl6ZUMxbWIyNTBMWE50YjI5MGFHbHVaem9nWjNKaGVYTmpZV3hsTzF4dWZWeHVLaTljYmlJc0lpOHZYRzR2THlCRGIyMXRiMjVjYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc1Y2JpOHZJRk5wZEdVZ2JHOW5iMXh1TG14dloyOGdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2FHVnBaMmgwT2lBeGRtMWhlRHRjYmlBZ2JXRnlaMmx1T2lBd0lEQWdNUzQwZG0xaGVEdGNiaUFnWW1GamEyZHliM1Z1WkRvZ1FHeHBibXN0WTI5c2IzSTdYRzRnSUc5d1lXTnBkSGs2SURBN1hHNWNiaUFnSmpwb2IzWmxjaXhjYmlBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dibTl1WlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklFQjBaWGgwTFdOdmJHOXlPMXh1SUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUgxY2JseHVJQ0JvTVNCN1hHNGdJQ0FnYUdWcFoyaDBPaUF3TzF4dUlDQWdJSFJsZUhRdGFXNWtaVzUwT2lBdE9UazVPVGxsYlR0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJOWVdsdUlHNWhkbWxuWVhScGIyNWNiaTV1WVhacFoyRjBhVzl1SUh0Y2JpQWdiV0Z5WjJsdU9pQXdJREFnTVRaMmJXbHVPMXh1SUNCdFlYSm5hVzR0Y21sbmFIUTZJQzB4TGpGbGJUdGNiaUFnYldGeVoybHVMV3hsWm5RNklDMHhMakZsYlR0Y2JpQWdabTl1ZEMxemFYcGxPaUEyTUNVN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNCc1pYUjBaWEl0YzNCaFkybHVaem9nTGpRMVpXMDdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc1Y2JpQWdiR2tnZTF4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qdGNiaUFnSUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dVhHNGdJQ0FnWVNCN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBdU5XVnRJREV1TW1WdE8xeHVYRzRnSUNBZ0lDQW1PbWh2ZG1WeUxGeHVJQ0FnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lCQWJHbHVheTFqYjJ4dmNqdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc0dkx5QkRkWEp5Wlc1MGJIa2dZV04wYVhaaGRHVmtJSEJoWjJVZ2IzSWdZMkYwWldkdmNua2dZMnhoYzNOY2JpNWpkWEp5Wlc1MElIdGNibHh1SUNCaElIdGNiaUFnSUNCamIyeHZjam9nUUd4cGJtc3RZMjlzYjNJN1hHNGdJSDFjYm4xY2JseHVMeThnVEdGMFpYTjBJSGR2Y21zZ2JHbHVhMXh1WW05a2VUcG9iM1psY2lBdWJHRjBaWE4wSUh0Y2JpQWdZMjlzYjNJNklFQnNhVzVyTFdOdmJHOXlJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTh2SUZCbGNuTnZiaUJ6ZEdGMGRYTmNiaTVqYjI1MFpXNTBJQzV6ZEdGMGRYTWdlMXh1SUNCdFlYSm5hVzQ2SURGMmJXbHVJREFnTUR0Y2JpQWdabTl1ZEMxemFYcGxPaUEzTlNVN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1WEc0Z0lDWTZZbVZtYjNKbElIdGNiaUFnSUNCQWMybDZaVG9nTGpobGJUdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ2QybGtkR2c2SUVCemFYcGxPMXh1SUNBZ0lHaGxhV2RvZERvZ1FITnBlbVU3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBdU9IWjNPMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJR1poWkdVb1FIUmxlSFF0WTI5c2IzSXNJREl3SlNrN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJSDFjYmx4dUlDQW1MbUYyWVdsc1lXSnNaU0I3WEc1Y2JpQWdJQ0FtT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBak1HTm1PMXh1SUNBZ0lIMWNibHh1SUNBZ0lHRWdlMXh1SUNBZ0lDQWdZMjlzYjNJNklDTXdZMlk3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnSmk1MWJtRjJZV2xzWVdKc1pTQjdYRzVjYmlBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFqWTJOak8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ1kyOXNiM0k2SUNOalkyTTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTh2SUUxaGFXNGdZMjl1ZEdWdWRGeHVMbU52Ym5SbGJuUWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4Tm5adGFXNDdYRzVjYmlBZ0x5OGdSbTl5SUhOdmJXVWdjM0JsWTJsbWFXVmtJSEJ2YzNSeklHbHVJSGR2Y21zZ1kyRjBaV2R2Y25sY2JpQWdMbU5tTzF4dVhHNGdJQzh2SUZKbGJXOTJaU0JsZUhSeVlTQnpjR0ZqWlNCbWIzSWdkR2hsSUd4aGMzUWdjR0Z5WVdkeVlYQm9JR2x1SUhSb1pTQmpiMjUwWVdsdVpYSmNiaUFnWVhKMGFXTnNaU0I3WEc1Y2JpQWdJQ0F2THlCaGNuUnBZMnhsSUQ0Z2NGeHVJQ0FnSUQ0Z0tqcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEQWdJV2x0Y0c5eWRHRnVkRHRjYmx4dUlDQWdJQ0FnTHk4Z1lYSjBhV05zWlNBK0lIVnNJRDRnYkdrc0lHRnlkR2xqYkdVZ1BpQXVabTl2ZEc1dmRHVnpJRDRnYjJ4Y2JpQWdJQ0FnSUQ0Z0tqcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNQ0FoYVcxd2IzSjBZVzUwTzF4dVhHNGdJQ0FnSUNBZ0lDOHZJR0Z5ZEdsamJHVWdQaUIxYkNBK0lHeHBJRDRnY0N3Z1lYSjBhV05zWlNBK0lDNW1iMjkwYm05MFpYTWdQaUJ2YkNBK0lHeHBYRzRnSUNBZ0lDQWdJRDRnS2pwc1lYTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdJQ0ZwYlhCdmNuUmhiblE3WEc1Y2JpQWdJQ0FnSUNBZ0lDQXZMeUJoY25ScFkyeGxJRDRnTG1admIzUnViM1JsY3lBK0lHOXNJRDRnYkdrZ1BpQndYRzRnSUNBZ0lDQWdJQ0FnUGlBcU9teGhjM1F0WTJocGJHUWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM4dklGQnZjM1FnTHlCd1lXZGxJR052Ym5SbGJuUWdabWx5YzNRZ1pXeGxiV1Z1ZENCbWFYaGNiaUFnTG5CdmMzUXRZMjl1ZEdWdWRDeGNiaUFnTG5CaFoyVXRZMjl1ZEdWdWRDQjdYRzVjYmlBZ0lDQStJQ282Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNRHRjYmx4dUlDQWdJQ0FnUGlBcU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01EdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQmhJSHRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNiaUFnZlZ4dVhHNGdJSEFnZTF4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXVObkpsYlR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ0tFQnNhVzVsTFdobGFXZG9kQ0FxSURFdU1pazdYRzRnSUgxY2JseHVJQ0JvWldGa1pYSWdlMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBeE5uWnRhVzQ3WEc1Y2JpQWdJQ0JvTVNCN1hHNGdJQ0FnSUNCdFlYSm5hVzQ2SURBZ01DQXVNV1Z0TzF4dUlDQWdJQ0FnTG1obFlXUnBibWNvS1R0Y2JpQWdJQ0FnSUdoNWNHaGxibk02SUc1dmJtVTdYRzRnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eE8xeHVYRzRnSUNBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lDQWdMeThnVDNabGNuSnBaR1VnZG1sbGQzQnZjblFnZFc1cGRITWdaR1ZtYVc1bFpDQnBiaUJ3YjNOMExtaDBiV3hjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU9EQWxPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J6ZG1jZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBdkx5QlBkbVZ5Y21sa1pTQnRZWEpuYVc0Z1puSnZiU0JoY25ScFkyeGxJR2x0WjF4dUlDQWdJQ0FnYzNabkxGeHVJQ0FnSUNBZ2FXMW5JSHRjYmlBZ0lDQWdJQ0FnTHk4Z1lYWnZhV1FnYUdWaFpHVnlJSE4wY21WMFkyaGxaQ0JpZVNCbmJHOWlZV3dnYVcxbklITjBlV3hsYzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdPMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXVNMlZ0TzF4dVhHNGdJQ0FnSUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQkFZbkpsWVd0d2IybHVkQzF6YlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsSUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNREFsSUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QklhV1JsSUdGamRIVmhiQ0IwWlhoMElHbG1JSEJ2YzNRZ2RHbDBiR1VnYVhNZ2FXMWhaMlVnYjNJZ1UxWkhMQ0IwYUdVZ1lXTjBkV0ZzSUhSbGVIUWdhR1ZzY0hNZ1UyRm1ZWEpwSUdkbGRDQjBhR1VnY21WaGJDQndiM04wSUhScGRHeGxJR2x1SUZKbFlXUmxjaUJ0YjJSbExseHVJQ0FnSUM1cGJXRm5aUzEwYVhSc1pTQjdYRzRnSUNBZ0lDQjBaWGgwTFdsdVpHVnVkRG9nTFRrNU9UazVPWEI0TzF4dUlDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklEQTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xteGhkR1Z6ZEMxd2IzTjBJSHRjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURFMmRtMXBianRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHVJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRzV2Y20xaGJEdGNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpJN1hHNWNiaUFnSUNBZ0lHRWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnpiV0ZzYkNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURKMmJXbHVPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJR2d5TEZ4dUlDQm9NeXhjYmlBZ2FEUXNYRzRnSUdnMUxGeHVJQ0JvTmlCN1hHNGdJQ0FnYldGeVoybHVPaUF4TUhadGFXNGdNQ0F4Y21WdE8xeHVJQ0FnSUM1emRXSXRhR1ZoWkdsdVp5Z3BPMXh1SUNCOVhHNWNiaUFnZFd3c1hHNGdJRzlzSUh0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhMamh5WlcwN1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklERXVNbVZ0TzF4dVhHNGdJQ0FnYkdrZ2UxeHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJQ2hBYkdsdVpTMW9aV2xuYUhRZ0tpQXhMaklwTzF4dVhHNGdJQ0FnSUNBK0lIVnNMRnh1SUNBZ0lDQWdQaUJ2YkNCN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2Iyd2dlMXh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF4TGpjMVpXMDdYRzRnSUgxY2JseHVJQ0JwYldjc1hHNGdJSFpwWkdWdkxGeHVJQ0JwWm5KaGJXVXNYRzRnSUM1aWNtOTNjMlZ5SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCM2FXUjBhRG9nWTJGc1l5Z3hNREFsSUNzZ0tFQnpjR0ZqWlMxNGN5QXFJRElwSUNzZ0tFQmliM0prWlhJdFpHVm1ZWFZzZENBcUlESXBLVHRjYmlBZ0lDQnRZWEpuYVc0NklEQWdZMkZzWXlndFFITndZV05sTFhoeklDMGdRR0p2Y21SbGNpMWtaV1poZFd4MEtTQXhMamh5WlcwN1hHNWNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRiV1FwSUh0Y2JpQWdJQ0FnSUM1dFlYSm5hVzR0YjJabWMyVjBLQzFBYzNCaFkyVXRiV1FzSUMxQWMzQmhZMlV0YldRcE8xeHVJQ0FnSUNBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBcklDaEFjM0JoWTJVdGJXUWdLaUF5S1NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExYTnRLU0I3WEc0Z0lDQWdJQ0F1YldGeVoybHVMVzltWm5ObGRDZ3RRSE53WVdObExYTnRMQ0F0UUhOd1lXTmxMWE50S1R0Y2JpQWdJQ0FnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnS3lBb1FITndZV05sTFhOdElDb2dNaWtwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUdGMmIybGtJR2x0WVdkbGN5QjNhWFJvSUdBdWJtOHRaVzVzWVhKblpXQWdjM1J5WlhSamFHVmtJR0o1SUdkc2IySmhiQ0JwYldjZ2MzUjViR1Z6WEc0Z0lDQWdKaTV1YnkxbGJteGhjbWRsSUh0Y2JpQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXdPMXh1SUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd08xeHVJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnZDJsa2RHZzZJR0YxZEc4N1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1lteHZZMnR4ZFc5MFpTQjdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl1T0hKbGJUdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dZMkZzWXlndFFITndZV05sTFhoeklDMGdRR0p2Y21SbGNpMWtaV1poZFd4MEtUdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklEa3dKVHRjYmx4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxemJTa2dlMXh1SUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SURBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnUGlCd0lIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nUUhOd1lXTmxMWGh6TzF4dUlDQWdJQ0FnWW05eVpHVnlMV3hsWm5RNklFQmliM0prWlhJdFpHVm1ZWFZzZENCemIyeHBaRHRjYmlBZ0lDQWdJQzh2SUZSUFJFODZJRTVsWldRZ1ltVjBkR1Z5SUhOdmJIVjBhVzl1WEc0Z0lDQWdJQ0F2THlCWFpTQjNhV3hzSUhKbGMyVjBJSFJvWlNCamIyMXRiMjRnYldGeVoybHVMV0p2ZEc5MGJTQjBieUJuWlhRZ1oyRndiR1Z6Y3lCaWIzSmtaWEp6SUdadmNpQmliRzlqYTNGMWIzUmxjMXh1SUNBZ0lDQWdMeThnVkdocGN5QmpiM1ZzWkNCb1pXeHdJR1pwZUNCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdllXMXpaaTloYlhObUxXTjFjblJoYm1FdmFYTnpkV1Z6THpSY2JpQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF4TGpaeVpXMDdYRzRnSUNBZ0lDQXZMeUJPYjNjZ2NtVnpaWFFnWkdWbVlYVnNkQ0J0WVhKbmFXNGdZblYwZEc5dUlHWnliMjBnWjJ4dlltRnNJR1JsWm1sdVpWeHVJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JseHVJQ0FnSUNBZ0x5OGdVbVZ0YjNabElHVjRkSEpoSUhCaFpHUnBibWNnWm05eUlIUm9aU0JzWVhOMElHVnNaVzFsYm5Rc0lISmxMV0Z3Y0d4NUlHMWhjbWRwYmx4dUlDQWdJQ0FnSmpwc1lYTjBMVzltTFhSNWNHVWdlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNUzQyY21WdE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lDQWdMbkJoWkdScGJtY3RiMlptYzJWMEtHTmhiR01vUUhOd1lXTmxMWE50SUMwZ1FHSnZjbVJsY2kxa1pXWmhkV3gwS1N3Z1FITndZV05sTFhOdEtUdGNiaUFnSUNBZ0lDQWdMbTFoY21kcGJpMXZabVp6WlhRb0xVQnpjR0ZqWlMxemJTd2dMVUJ6Y0dGalpTMXpiU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdabTl2ZEdWeUlIdGNiaUFnSUNBZ0lDNWpaanRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmphWFJsSUh0Y2JpQWdJQ0FnSUdac2IyRjBPaUJ5YVdkb2REdGNiaUFnSUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNibHh1SUNBZ0lDQWdKanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0F2THlCb2RIUndPaTh2ZDNkM0xtWnBiR1ZtYjNKdFlYUXVhVzVtYnk5cGJtWnZMM1Z1YVdOdlpHVXZZMmhoY2k4eU5UQXdMMmx1WkdWNExtaDBiVnh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx4Y01qVXdNRnhjTWpVd01GeGNNREJoTUZ3aVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FISWdlMXh1SUNBZ0lDNXpjR3hwZEdWeUtDazdYRzRnSUgxY2JseHVJQ0J6ZFhBZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ056VWxPMXh1SUNCOVhHNWNiaUFnWTI5a1pTeGNiaUFnY0hKbElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dRR1p2Ym5SemRHRmpheTF0YjI1dmMzQmhZMlU3WEc0Z0lDQWdZMjlzYjNJNklFQmpiMlJsTFdOdmJHOXlPMXh1SUNCOVhHNWNiaUFnTHk4Z1QyNXNlU0JoY0hCc2VTQjNiM0prSUdKeVpXRnJhVzVuSUhKMWJHVWdabTl5SUdOdlpHVnpJR2x1SUhCaGNtRm5jbUZ3YUhOY2JpQWdjQ0JqYjJSbExGeHVJQ0JzYVNCamIyUmxJSHRjYmlBZ0lDQjNiM0prTFdKeVpXRnJPaUJpY21WaGF5MWhiR3c3WEc0Z0lIMWNibHh1SUNCd2NtVWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklFQnpjR0ZqWlMxNGN6dGNiaUFnSUNBdWJXRnlaMmx1TFc5bVpuTmxkQ2d0UUhOd1lXTmxMWGh6TENBdFFITndZV05sTFhoektUdGNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TGpoeVpXMDdYRzRnSUNBZ2IzWmxjbVpzYjNjdGVEb2dZWFYwYnp0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURnd0pUdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dLRUJzYVc1bExXaGxhV2RvZENBcUlERXVNaWs3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nWm1Ga1pTZ2pNRGhtTENBMEpTazdYRzRnSUNBZ0x5OGdRbTkxYm1OcGJtY2djMk55YjJ4c0lHWnBlQ0JtYjNJZ2FVOVRYRzRnSUNBZ0xYZGxZbXRwZEMxdmRtVnlabXh2ZHkxelkzSnZiR3hwYm1jNklIUnZkV05vTzF4dVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExXMWtLU0I3WEc0Z0lDQWdJQ0F1Y0dGa1pHbHVaeTF2Wm1aelpYUW9RSE53WVdObExXMWtMQ0JBYzNCaFkyVXRiV1FwTzF4dUlDQWdJQ0FnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ6Y0dGalpTMXRaQ3dnTFVCemNHRmpaUzF0WkNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExYTnRLU0I3WEc0Z0lDQWdJQ0F1Y0dGa1pHbHVaeTF2Wm1aelpYUW9RSE53WVdObExYTnRMQ0JBYzNCaFkyVXRjMjBwTzF4dUlDQWdJQ0FnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ6Y0dGalpTMXpiU3dnTFVCemNHRmpaUzF6YlNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5OGdUbVYzYzJ4bGRIUmxjaUJ6ZFdKelkzSnBjSFJwYjI0Z1ptOXliU0JwYmlCd1lXZGxJRndpYzNSdmNtVmNJbHh1SUNCbWIzSnRJSHRjYmx4dUlDQWdJR2x1Y0hWMElIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBeGRtMXBiaUF3TzF4dUlDQWdJQ0FnYldGeVoybHVPaUF3SURBZ01TNDRjbVZ0TzF4dUlDQWdJQ0FnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUdaaFpHVW9RSFJsZUhRdFkyOXNiM0lzSURJd0pTazdYRzRnSUNBZ0lDQXZMeUJTWlcxdmRtVWdZbTl5WkdWeUxYSmhaR2wxY3lCbWIzSWdhVTlUSUdSbGRtbGpaWE5jYmlBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEQTdYRzRnSUNBZ0lDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2NHRmtaR2x1WnlBdU1uTWdaV0Z6WlR0Y2JseHVJQ0FnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklERjJiV2x1TzF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQm1ZV1JsS0VCMFpYaDBMV052Ykc5eUxDQXlKU2s3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTFqYjJ4dmNqb2dRSFJsZUhRdFkyOXNiM0k3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTHk4Z1VtVnpkQ0JtYjNKdElIWmhiR2xrWVhScGIyNGdjM1I1YkdWekxDQmliM0p5YjNkbFpDQm1jbTl0SUVKdmIzUnpkSEpoY0Z4dUlDQnBibkIxZEN4Y2JpQWdkR1Y0ZEdGeVpXRXNYRzRnSUhObGJHVmpkQ0I3WEc1Y2JpQWdJQ0FtT21adlkzVnpPbkpsY1hWcGNtVmtPbWx1ZG1Gc2FXUWdlMXh1WEc0Z0lDQWdJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ1ptRmtaU2hBYkdsdWF5MWpiMnh2Y2l3Z05TVXBPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZMjlzYjNJNklFQnNhVzVyTFdOdmJHOXlPMXh1SUNBZ0lDQWdJQ0F2THlCUGRtVnljbWxrWlNCR2FYSmxabTk0SUdSbFptRjFiSFFnYzNSNWJHVnpYRzRnSUNBZ0lDQWdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdkR0ZpYkdVZ2UxeHVJQ0FnSUdKdmNtUmxjaTFqYjJ4c1lYQnpaVG9nWTI5c2JHRndjMlU3WEc0Z0lDQWdZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTVNQ1U3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdMbTFoY21kcGJpMXZabVp6WlhRb0xVQnpjR0ZqWlMxNGN5d2dMVUJ6Y0dGalpTMTRjeWs3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01TNDRjbVZ0TzF4dVhHNGdJQ0FnZEdnc1hHNGdJQ0FnZEdRZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ0xqWmxiU0JBYzNCaFkyVXRlSE03WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2dnZTF4dUlDQWdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dRR0p2Y21SbGNpMWtaV1poZFd4MElITnZiR2xrSUdaaFpHVW9RSFJsZUhRdFkyOXNiM0lzSURZbEtUdGNiaUFnSUNBZ0lDOHZJRTkyWlhKeWFXUmxJR1JsWm1GMWJIUWdkWE5sY2lCaFoyVnVkQ0J6ZEhsc1pYTm9aV1YwWEc0Z0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUmtJSHRjYmlBZ0lDQWdJR0p2Y21SbGNpMTBiM0E2SUVCaWIzSmtaWEl0YzIwZ2MyOXNhV1FnWm1Ga1pTaEFkR1Y0ZEMxamIyeHZjaXdnTkNVcE8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHZMeUJRYjNOMGN5QjNhWFJvSUVGemFXRnVJR05vWVhKaFkzUmxjbk5jYmpwc1lXNW5LSHBvS1N4Y2JqcHNZVzVuS0dwaEtTQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHcDFjM1JwWm5rN1hHNWNiaUFnYUdWaFpHVnlJSHRjYmx4dUlDQWdJQ1lzWEc0Z0lDQWdKaUFxSUh0Y2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklITjBZWEowTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc0dkx5QkdhWGdnWlcxd2RIa2djM0JoWTJVZ2QyaGxiaUJoSUhCaGNtRm5jbUZ3YUNCemRHRnlkSE1nZDJsMGFDQnhkVzkwWlNCdFlYSnJjeUJoYm1RZ2MyOXRaU0JoYzJsaGJpQndkVzVqZEhWaGRHbHZiaUJ0WVhKcmMxeHVMbXhsWVdScGJtY3RhVzVrWlc1MExXWnBlQ0I3WEc0Z0lIUmxlSFF0YVc1a1pXNTBPaUF0TGpNNVpXMDdYRzU5WEc1Y2JpOHZJRlIzWldWMElHSjFkSFJ2YmlCdFlYSm5hVzRnWm1sNFhHNHVjRzl6ZEMxdGIyUnBabWxsWkMxa1lYUmxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTNOU1U3WEc0Z0lHOXdZV05wZEhrNklDNDFPMXh1ZlZ4dVhHNHZMeUJNWVhKblpYUjVjR1VnYzNSNWJHVnpJQ2h5WlhCc1lXTmxjeUJpZFhSMGIyNGdjM1I1YkdWektWeHVMbXhoY21kbGRIbHdaU0I3WEc0Z0lDNW9aV0ZrYVc1bktDazdYRzRnSUdadmJuUXRjMmw2WlRvZ01qQXdKVHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVM0NGNtVnRJQ0ZwYlhCdmNuUmhiblE3WEc1OVhHNWNiaTh2SUVKeWIzTmxjaUJtY21GdFpTQm1iM0lnYVcxaFoyVnpJR2x1SUdOaGRHVm5iM0o1SUZ3aWQyOXlhMXdpWEc0dVluSnZkM05sY2lCN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJREkwY0hnN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhKblltRW9NalUxTENBeU5UVXNJREkxTlN3Z0xqRXBPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExY0hnZ05YQjRJREFnTUR0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNBd0lEQWdNWEI0SUhKblltRW9NQ3dnTUN3Z01Dd2dMakExS1R0Y2JseHVJQ0F2THlCU1pYTmxkQ0JpY205M2MyVnlJR0p2Y21SbGNpMXlZV1JwZFhNZ1ptOXlJSE50WVd4c0lITmpjbVZsYm5OY2JpQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFcxa0tTd2dLRzFoZUMxM2FXUjBhRG9nUUdKeVpXRnJjRzlwYm5RdGMyMHBJSHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBd08xeHVJQ0I5WEc1Y2JpQWdKanBpWldadmNtVWdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCMGIzQTZJRGh3ZUR0Y2JpQWdJQ0JzWldaME9pQXhNSEI0TzF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUhkcFpIUm9PaUE0Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUE0Y0hnN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2JHbG5hSFJsYmlnalpqSTBaVFU1TENBek1DVXBPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNiaUFnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZYRzRnSUNBZ0lDQWdJREUyY0hnZ01DQXdJREFnSUNCbVlXUmxLR3hwWjJoMFpXNG9JMlpoWXpVek5pd2dNekFsS1N3Z09UWWxLVnh1SUNBZ0lDQWdMQ0F6TW5CNElEQWdNQ0F3SUNBZ1ptRmtaU2hzYVdkb2RHVnVLQ015Tm1VNU0yUXNJRE13SlNrc0lEazJKU2xjYmlBZ0lDQWdJQ3dnSUNBZ01DQXdJREFnTVhCNElHWmhaR1VvWkdGeWEyVnVLQ05tTWpSbE5Ua3NJRE13SlNrc0lETXdKU2xjYmlBZ0lDQWdJQ3dnTVRad2VDQXdJREFnTVhCNElHWmhaR1VvWkdGeWEyVnVLQ05tWVdNMU16WXNJRE13SlNrc0lETXdKU2xjYmlBZ0lDQWdJQ3dnTXpKd2VDQXdJREFnTVhCNElHWmhaR1VvWkdGeWEyVnVLQ015Tm1VNU0yUXNJRE13SlNrc0lETXdKU2xjYmlBZ0lDQTdYRzRnSUgxY2JseHVJQ0JwYldjZ2UxeHVJQ0FnSUM4dklHRjJiMmxrSUdsdFlXZGxjeUJwYm5OcFpHVWdMbUp5YjNkelpYSWdjM1J5WlhSamFHVmtJR0o1SUdkc2IySmhiQ0JwYldjZ2MzUjViR1Z6WEc0Z0lDQWdiV0Z5WjJsdUxXeGxablE2SURBN1hHNGdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdPMXh1SUNBZ0lIZHBaSFJvT2lCaGRYUnZPMXh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lDMHhjSGdnTUNBd0lISm5ZbUVvTUN3Z01Dd2dNQ3dnTGpBMUtUdGNiaUFnZlZ4dWZWeHVYRzR2THlCRmVIUnlZU0J2Wm1aelpYUWdabTl5SUU5VElGZ2djMk55WldWdWMyaHZkSE5jYmk1elkzSmxaVzV6YUc5MExXMWhZeUI3WEc0Z0lFQnZjM2d0YzJoaFpHOTNMWE5wZW1VNklEVTJjSGc3WEc0Z0lDNXRZWEpuYVc0dGIyWm1jMlYwS0MxQWIzTjRMWE5vWVdSdmR5MXphWHBsTENBdFFHOXplQzF6YUdGa2IzY3RjMmw2WlNrN1hHNWNiaUFnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExXMWtLU3dnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRjMjBwSUh0Y2JpQWdJQ0F1YldGeVoybHVMVzltWm5ObGRDZ3dMQ0F3S1R0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJUY0dWamFXRnNJSEJoY21GbmNtRndhQ0IzYVhSb0lHSnZjbVJsY2lCc2FXNWxYRzR1Ym05MFpTeGNiaTV6ZEc5eVpTeGNiaTVrYjNkdWJHOWhaQ0I3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nUUhOd1lXTmxMWGh6TzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nWTJGc1l5Z3RRSE53WVdObExYaHpJQzBnUUdKdmNtUmxjaTFrWldaaGRXeDBLVHRjYmlBZ1ltOXlaR1Z5TFd4bFpuUTZJRUJpYjNKa1pYSXRaR1ZtWVhWc2RDQnpiMnhwWkNCQWJHbHVheTFqYjJ4dmNqdGNibHh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRjMjBwSUh0Y2JpQWdJQ0F1Y0dGa1pHbHVaeTF2Wm1aelpYUW9ZMkZzWXloQWMzQmhZMlV0YzIwZ0xTQkFZbTl5WkdWeUxXUmxabUYxYkhRcExDQkFjM0JoWTJVdGMyMHBPMXh1SUNBZ0lDNXRZWEpuYVc0dGIyWm1jMlYwS0MxQWMzQmhZMlV0YzIwc0lDMUFjM0JoWTJVdGMyMHBPMXh1SUNCOVhHNTlYRzVjYmk4dklGSmxabVZ5Wlc1alpTQnViM1JsY3lCaGJtUWdiR2x1YTNNZ2FXNGdjRzl6ZEZ4dUxtWnZiM1J1YjNSbGN5QjdYRzRnSUM1emNHeHBkR1Z5S0NrN1hHNGdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHVmVnh1WEc0NmRHRnlaMlYwSUh0Y2JseHVJQ0F2THlCU1pXUmpZWEp3WlhRdGMzUjViR1ZjYmlBZ1czSmxkajFtYjI5MGJtOTBaVjBzWEc0Z0lGdHlaV3c5Wm05dmRHNXZkR1ZkTEZ4dVhHNGdJQzh2SUV0eVlXMWtiM2R1TFhOMGVXeGxYRzRnSUM1eVpYWmxjbk5sWm05dmRHNXZkR1VzWEc0Z0lDNW1iMjkwYm05MFpTQjdYRzRnSUNBZ1kyOXNiM0k2SUVCc2FXNXJMV052Ykc5eU8xeHVJQ0I5WEc1OVhHNWNiaTh2SUZCdmMzUWdiR2x6ZENCcGJpQmNJbmR2Y210Y0lpQmhibVFnWENKdWIzUmxYQ0pjYmk1c2FYTjBJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHMWhjbWRwYmpvZ01DQXdJQzQwY21WdE8xeHVYRzRnSUdneElIdGNiaUFnSUNBdWFHVmhaR2x1WnlncE8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01qQXdKVHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eE8xeHVJQ0FnSUM4dklFOTJaWEp5YVdSbElHaGxZV1JwYm1jZ1pHVm1hVzVsY3lCcGJpQXVZMjl1ZEdWdWRGeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnYldGeVoybHVPaUF3TzF4dVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExYTnRLU0I3WEc0Z0lDQWdJQ0F2THlCSWFXUmxJR1Y0ZEdWeWJtRnNJR3hwYm1zZ1ptOXlJSEJ2YzNRZ2JHbHpkRnh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4T0RBbE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDNWxlSFJsY201aGJDQjdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lDOHZJRWhwWkdVZ1pYaDBaWEp1WVd3Z2JHbHVheUJtYjNJZ2NHOXpkQ0JzYVhOMFhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzR2THlCQklHUnZkQ0J6ZVcxaWIyd2dabTl5SUdWNGRHVnlibUZzSUd4cGJtdHpYRzR1WlhoMFpYSnVZV3dnZTF4dVhHNGdJQzVrYjNRZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNCM2FXUjBhRG9nTGpkeVpXMDdYRzRnSUNBZ2FHVnBaMmgwT2lBdU4zSmxiVHRjYmlBZ0lDQnRZWEpuYVc0NklEQWdMakZsYlR0Y2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklFQjBaWGgwTFdOdmJHOXlPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdMalJ6SUdWaGMyVTdYRzVjYmlBZ0lDQXZMeUJGZUhSeVlTQnRZWEpuYVc0Z1ptOXlJR1Y0ZEdWeWJtRnNJSE41YldKdmJDQnBiaUJ6YVc1bmRXeGhjbHh1SUNBZ0lDWXRMWEJ2YzNRZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREZ5WlcwN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0pqcG9iM1psY2l4Y2JpQWdKanBtYjJOMWN5QjdYRzVjYmlBZ0lDQXVaRzkwSUh0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTVM0MEtUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbVp2YjNSbGNpQjdYRzRnSUhCaFpHUnBibWM2SURBZ01DQXhOblp0YVc0N1hHNGdJR1p2Ym5RdGMybDZaVG9nTnpVbE8xeHVJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2diRzkzWlhKallYTmxPMXh1WEc0Z0lIVnNJSHRjYmx4dUlDQWdJR3hwSUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaVHRjYmx4dUlDQWdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ0xqWjJkenRjYmlBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nWENJZ0x5QmNJanRjYmlBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTGpNN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDWTZiR0Z6ZEMxamFHbHNaQ0I3WEc1Y2JpQWdJQ0FnSUNBZ0pqcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dibTl1WlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMeTljYmk4dklGQnNkV2RwYm5OY2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNiaTh2SUZOMGVXeGxJR1pwZUdWeklHWnZjaUJ3YkhWbmFXNXpYRzVjYmk4dklHbHVkR1Z1YzJVdWFuTmNiaTVzYjJGa1pXUWdlMXh1WEc0Z0lDNXBiblJsYm5ObExYZHlZWEFnZTF4dVhHNGdJQ0FnWVhKMGFXTnNaU0J3SUQ0Z2FXMW5PbTV2ZENndWJtOHRhVzUwWlc1elpTa2dlMXh1SUNBZ0lDQWdZM1Z5YzI5eU9pQjZiMjl0TFdsdU8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDWXVhVzUwWlc1elpTMXZjR1Z1SUh0Y2JpQWdJQ0JqZFhKemIzSTZJSHB2YjIwdGIzVjBPMXh1SUNCOVhHNTlYRzVjYmk4dklFZHBkRWgxWWlCSGFYTjBYRzR1WjJsemRDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ09EQWxJQ0ZwYlhCdmNuUmhiblE3WEc1Y2JpQWdZMjlrWlN3Z2NISmxJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh1SUNBZ0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQjlYRzVjYmlBZ0xtZHBjM1F0WkdGMFlTQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJRUJtYjI1MGMzUmhZMnN0Ylc5dWIzTndZV05sSUNGcGJYQnZjblJoYm5RN1hHNWNiaUFnSUNBdVptbHNaUzFrWVhSaElIdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVEF3SlNBaGFXMXdiM0owWVc1ME8xeHVYRzRnSUNBZ0lDQStJSFJoWW14bElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01DQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzh2SUUxdmJtOXpjR0ZqWlNCbWIyNTBjeUJzYjI5cklHSnBaMmRsY2lCMGFHRnVJRzV2Y20xaGJDQm1iMjUwY3l3Z2MyOGdiV0ZyWlNCcGRDQnpiV0ZzYkdWeUxseHVJQ0F1YUdsbmFHeHBaMmgwSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURrd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG0xaGNtdGtiM2R1TFdKdlpIa2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVEF3SlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUhCaFpHUnBibWM2SURGbGJTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNTlYRzRpTENJdkwxeHVMeThnVUhKcGJuUmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk4dklGTjBlV3hsSUdacGVHVnpJR1p2Y2lCd2NtbDBhVzVuWEc1Y2JrQnRaV1JwWVNCd2NtbHVkQ0I3WEc1Y2JpQWdLaXhjYmlBZ0tqcGlaV1p2Y21Vc1hHNGdJQ282WVdaMFpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwSUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnWTI5c2IzSTZJQ013TURBZ0lXbHRjRzl5ZEdGdWREc2dMeThnUW14aFkyc2djSEpwYm5SeklHWmhjM1JsY2pvZ2FEVmljQzVqYjIwdmMxeHVJQ0FnSUdKdmVDMXphR0ZrYjNjNklHNXZibVVnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHpvZ2JtOXVaU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ1ltOWtlU0I3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVEJ0YlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUcxaGNtZHBiam9nTUNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdZU3hjYmlBZ1lUcDJhWE5wZEdWa0lIdGNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUgxY2JseHVJQ0F1WTI5dWRHVnVkQ0F1Y0c5emRDMWpiMjUwWlc1MExGeHVJQ0F1WTI5dWRHVnVkQ0F1Y0dGblpTMWpiMjUwWlc1MElIdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklERXdNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JseHVJQ0FnSUdGYmFISmxabDA2WVdaMFpYSWdlMXh1SUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0lnS0Z3aUlHRjBkSElvYUhKbFppa2dYQ0lwWENJN1hHNGdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dibTl5YldGc08xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFUnZiaWQwSUhOb2IzY2diR2x1YTNNZ2RHaGhkQ0JoY21VZ1puSmhaMjFsYm5RZ2FXUmxiblJwWm1sbGNuTXNYRzRnSUNBZ0x5OGdiM0lnZFhObElIUm9aU0JnYW1GMllYTmpjbWx3ZERwZ0lIQnpaWFZrYnlCd2NtOTBiMk52YkZ4dUlDQWdJR0ZiYUhKbFpsNDlYQ0lqWENKZE9tRm1kR1Z5TEZ4dUlDQWdJR0ZiYUhKbFpsNDlYQ0pxWVhaaGMyTnlhWEIwT2x3aVhUcGhablJsY2lCN1hHNGdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHRmlZbkpiZEdsMGJHVmRPbUZtZEdWeUlIdGNiaUFnSUNBZ0lHTnZiblJsYm5RNklGd2lJQ2hjSWlCaGRIUnlLSFJwZEd4bEtTQmNJaWxjSWp0Y2JpQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2NISmxMRnh1SUNCaWJHOWphM0YxYjNSbElIdGNiaUFnSUNCd1lXZGxMV0p5WldGckxXbHVjMmxrWlRvZ1lYWnZhV1E3WEc0Z0lIMWNibHh1SUNCMGFHVmhaQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVdGFHVmhaR1Z5TFdkeWIzVndPMXh1SUNCOVhHNWNiaUFnZEhJc1hHNGdJR2x0WnlCN1hHNGdJQ0FnY0dGblpTMWljbVZoYXkxcGJuTnBaR1U2SUdGMmIybGtPMXh1SUNCOVhHNWNiaUFnYVcxbklIdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklERXdNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lIQXNYRzRnSUdneUxGeHVJQ0JvTXl4Y2JpQWdhRFFzWEc0Z0lHZzFMRnh1SUNCb05pQjdYRzRnSUNBZ2IzSndhR0Z1Y3pvZ016dGNiaUFnSUNCM2FXUnZkM002SURNN1hHNGdJSDFjYmx4dUlDQm9NaXhjYmlBZ2FETWdlMXh1SUNBZ0lIQmhaMlV0WW5KbFlXc3RZV1owWlhJNklHRjJiMmxrTzF4dUlDQjlYRzVjYmlBZ0xtNWhkbWxuWVhScGIyNHNYRzRnSUM1bWIyOTBaWElnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJSDFjYm4xY2JpSXNJaThxSVZ4dUlDb2dVbUZ1Wkc5dGFYcGxaRnh1SUNvZ1EyOXdlWEpwWjJoMElESXdNVFF0TWpBeE5TQlVkVzVuYUhOcFlXOGdUR2wxWEc0Z0tpQk1hV05sYm5ObFpDQjFibVJsY2lCTlNWUWdLR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzl6Y0dGeVlXNXZhV1F2Y21GdVpHOXRhWHBsWkM5aWJHOWlMMjFoYzNSbGNpOU1TVU5GVGxORktWeHVJQ292WEc1Y2JpOHZJRU5oYkdOMWJHRjBaU0JqYjJSbElHSmhZMnRuY205MWJtUWdZMjlzYjNJZ1ltRnpaV1FnYjI0Z2RHaGxJR3hwWjJoMGJtVnpjeUJ2WmlCc2FXNXJJR052Ykc5eVhHNHVZMkZzWXkxaVp5QW9RSFlwSUhkb1pXNGdLR3hwWjJoMGJtVnpjeWhBZGlrZ1BqMGdPREFsS1NCN1hHNGdJRUJqWVd4akxXSm5PaUJ0YVhnb0kyWm1aaXdnUUhZc0lEa3dKU2s3WEc1OVhHNWNiaTVqWVd4akxXSm5JQ2hBZGlrZ2QyaGxiaUFvYkdsbmFIUnVaWE56S0VCMktTQThJRGd3SlNrZ2UxeHVJQ0JBWTJGc1l5MWlaem9nYldsNEtDTXdNREFzSUVCMkxDQTNNQ1VwTzF4dWZWeHVYRzR1YUdsbmFHeHBaMmgwSUh0Y2JseHVJQ0F2THlCU1pYTmxkQ0JpWVdOclozSnZkVzVrWEc0Z0lDOHZJQzVvYVdkb2JHbG5hSFFnUGlCd2NtVWdabTl5SUdOdmJXMXZiaUJzYVhGMWFXUWdiV1YwYUc5a1hHNGdJQzh2SUM1b2FXZG9iR2xuYUhSbGNpMXliM1ZuWlNBdWFHbG5hR3hwWjJoMElHWnZjaUJIUmswZ2JXVjBhRzlrWEc0Z0lDOHZJRkpsWmpvZ2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwycGxhM2xzYkM5cVpXdDViR3d2Y0hWc2JDODBNRFV6WEc0Z0lFQm9hV2RvYkdsbmFIUmxjaTEwYVc1ME9pQkFiR2x1YXkxamIyeHZjanRjYmlBZ1BpQndjbVVzWEc0Z0lDNW9hV2RvYkdsbmFIUmxjaTF5YjNWblpTQW1JSHRjYmlBZ0lDQXVZMkZzWXkxaVp5aEFhR2xuYUd4cFoyaDBaWEl0ZEdsdWRDazdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dabUZrWlNoQVkyRnNZeTFpWnl3Z01TNDFKU2s3WEc0Z0lIMWNibHh1SUNBdkx5QlNaWE5sZENCa1pXWmhkV3gwSUdCamIyUmxZRnh1SUNCamIyUmxJSHNnWTI5c2IzSTZJR1JsYzJGMGRYSmhkR1VvUUd4cGJtc3RZMjlzYjNJc0lEazFKU2s3SUgwZ0x5OGdUbTl5YldGc0lHTnZaR1ZjYmx4dUlDQXZMeUJUY0dWamFXRnNJR0poWTJ0bmNtOTFibVFnWm05eUlITjViblJoZUNCbGNuSnZjbk5jYmlBZ0xtVnljaUI3SUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdaaFpHVW9jMkYwZFhKaGRHVW9RR2hwWjJoc2FXZG9kR1Z5TFhScGJuUXNJREV3SlNrc0lERXdKU2tnZlNBdkx5QkZjbkp2Y2x4dVhHNGdJQzVqSUNBZ2V5Qm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTWdmU0F2THlCRGIyMXRaVzUwWEc0Z0lDNWpiU0FnZXlCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdNZ2ZTQXZMeUJEYjIxdFpXNTBMazExYkhScGJHbHVaVnh1SUNBdVkzQWdJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5QkRiMjF0Wlc1MExsQnlaWEJ5YjJOY2JpQWdMbU14SUNCN0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFl5QjlJQzh2SUVOdmJXMWxiblF1VTJsdVoyeGxYRzRnSUM1amN5QWdleUJtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHNnWm05dWRDMXpkSGxzWlRvZ2FYUmhiR2xqSUgwZ0x5OGdRMjl0YldWdWRDNVRjR1ZqYVdGc1hHNWNiaUFnTG01aklDQjdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtJSDBnTHk4Z1RtRnRaUzVEYkdGemMxeHVJQ0F1Ym1VZ0lIc2dabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUWdmU0F2THlCT1lXMWxMa1Y0WTJWd2RHbHZibHh1SUNBdWJtWWdJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5Qk9ZVzFsTGtaMWJtTjBhVzl1WEc1Y2JpQWdMbThnSUNCN0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a0lIMGdMeThnVDNCbGNtRjBiM0pjYmlBZ0xtOTNJQ0I3SUdadmJuUXRkMlZwWjJoME9pQmliMnhrSUgwZ0x5OGdUM0JsY21GMGIzSXVWMjl5WkZ4dVhHNGdJQzVuY3lBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUVkbGJtVnlhV011VTNSeWIyNW5YRzRnSUM1blpTQWdleUJtYjI1MExYTjBlV3hsT2lCcGRHRnNhV01nZlNBdkx5QkhaVzVsY21sakxrVnRjR2hjYmx4dUlDQXVheUFnSUhzZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRZ2ZTQXZMeUJMWlhsM2IzSmtYRzRnSUM1cmRDQWdleUJtYjI1MExYZGxhV2RvZERvZ1ltOXNaQ0I5SUM4dklFdGxlWGR2Y21RdVZIbHdaVnh1SUNBdWEyTWdJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5QkxaWGwzYjNKa0xrTnZibk4wWVc1MFhHNGdJQzVyWkNBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUV0bGVYZHZjbVF1UkdWamJHRnlZWFJwYjI1Y2JpQWdMbXR3SUNCN0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a0lIMGdMeThnUzJWNWQyOXlaQzVRYzJWMVpHOWNiaUFnTG10eUlDQjdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtJSDBnTHk4Z1MyVjVkMjl5WkM1U1pYTmxjblpsWkZ4dVhHNGdJRUIwYjJ0bGJpMXRZV2x1T2x4dUlDQWdJR1Z5Y2lBdkx5QkZjbkp2Y2x4dUlDQWdJSGdnTHk4Z1QzUm9aWEpjYmx4dUlDQWdJRzRnTHk4Z1RtRnRaVnh1SUNBZ0lHNWhJQzh2SUU1aGJXVXVRWFIwY21saWRYUmxYRzRnSUNBZ2JtSWdMeThnVG1GdFpTNUNkV2xzZEdsdVhHNGdJQ0FnWW5BZ0x5OGdUbUZ0WlM1Q2RXbHNkR2x1TGxCelpYVmtiMXh1SUNBZ0lHNWpJQzh2SUU1aGJXVXVRMnhoYzNOY2JpQWdJQ0J1YnlBdkx5Qk9ZVzFsTGtOdmJuTjBZVzUwWEc0Z0lDQWdibVFnTHk4Z1RtRnRaUzVFWldOdmNtRjBiM0pjYmlBZ0lDQnVhU0F2THlCT1lXMWxMa1Z1ZEdsMGVWeHVJQ0FnSUc1bElDOHZJRTVoYldVdVJYaGpaWEIwYVc5dVhHNGdJQ0FnYm1ZZ0x5OGdUbUZ0WlM1R2RXNWpkR2x2Ymx4dUlDQWdJRzVzSUM4dklFNWhiV1V1VEdGaVpXeGNiaUFnSUNCdWJpQXZMeUJPWVcxbExrNWhiV1Z6Y0dGalpWeHVJQ0FnSUc1NElDOHZJRTVoYldVdVQzUm9aWEpjYmlBZ0lDQnVkQ0F2THlCT1lXMWxMbFJoWjF4dUlDQWdJRzUySUM4dklFNWhiV1V1Vm1GeWFXRmliR1ZjYmlBZ0lDQjJZeUF2THlCT1lXMWxMbFpoY21saFlteGxMa05zWVhOelhHNGdJQ0FnZG1jZ0x5OGdUbUZ0WlM1V1lYSnBZV0pzWlM1SGJHOWlZV3hjYmlBZ0lDQjJhU0F2THlCT1lXMWxMbFpoY21saFlteGxMa2x1YzNSaGJtTmxYRzVjYmlBZ0lDQm5JQzh2SUVkbGJtVnlhV05jYmlBZ0lDQm5aQ0F2THlCSFpXNWxjbWxqTGtSbGJHVjBaV1JjYmlBZ0lDQm5aU0F2THlCSFpXNWxjbWxqTGtWdGNHaGNiaUFnSUNCbmNpQXZMeUJIWlc1bGNtbGpMa1Z5Y205eVhHNGdJQ0FnWjJnZ0x5OGdSMlZ1WlhKcFl5NUlaV0ZrYVc1blhHNGdJQ0FnWjJrZ0x5OGdSMlZ1WlhKcFl5NUpibk5sY25SbFpGeHVJQ0FnSUdkdklDOHZJRWRsYm1WeWFXTXVUM1YwY0hWMFhHNGdJQ0FnWjNBZ0x5OGdSMlZ1WlhKcFl5NVFjbTl0Y0hSY2JpQWdJQ0JuY3lBdkx5QkhaVzVsY21sakxsTjBjbTl1WjF4dUlDQWdJR2QxSUM4dklFZGxibVZ5YVdNdVUzVmlhR1ZoWkdsdVoxeHVJQ0FnSUdkMElDOHZJRWRsYm1WeWFXTXVWSEpoWTJWaVlXTnJYRzRnSUNBZ1oyd2dMeThnUjJWdVpYSnBZeTVNYVc1bGJtOWNibHh1SUNBZ0lHc2dMeThnUzJWNWQyOXlaRnh1SUNBZ0lHdGpJQzh2SUV0bGVYZHZjbVF1UTI5dWMzUmhiblJjYmlBZ0lDQnJaQ0F2THlCTFpYbDNiM0prTGtSbFkyeGhjbUYwYVc5dVhHNGdJQ0FnYTI0Z0x5OGdTMlY1ZDI5eVpDNU9ZVzFsYzNCaFkyVmNiaUFnSUNCcmNDQXZMeUJMWlhsM2IzSmtMbEJ6WlhWa2IxeHVJQ0FnSUd0eUlDOHZJRXRsZVhkdmNtUXVVbVZ6WlhKMlpXUmNiaUFnSUNCcmRDQXZMeUJMWlhsM2IzSmtMbFI1Y0dWY2JpQWdJQ0JyZGlBdkx5QkxaWGwzYjNKa0xsWmhjbWxoWW14bFhHNWNiaUFnSUNCM0lDOHZJRlJsZUhRdVYyaHBkR1Z6Y0dGalpWeHVYRzRnSUNBZ2JDQXZMeUJNYVhSbGNtRnNYRzVjYmlBZ0lDQnNaQ0F2THlCTWFYUmxjbUZzTGtSaGRHVmNibHh1SUNBZ0lITWdMeThnVEdsMFpYSmhiQzVUZEhKcGJtZGNiaUFnSUNCellpQXZMeUJNYVhSbGNtRnNMbE4wY21sdVp5NUNZV05yZEdsamExeHVJQ0FnSUhOaklDOHZJRXhwZEdWeVlXd3VVM1J5YVc1bkxrTm9ZWEpjYmlBZ0lDQnpaQ0F2THlCTWFYUmxjbUZzTGxOMGNtbHVaeTVFYjJOY2JpQWdJQ0J6TWlBdkx5Qk1hWFJsY21Gc0xsTjBjbWx1Wnk1RWIzVmliR1ZjYmlBZ0lDQnpaU0F2THlCTWFYUmxjbUZzTGxOMGNtbHVaeTVGYzJOaGNHVmNiaUFnSUNCemFDQXZMeUJNYVhSbGNtRnNMbE4wY21sdVp5NUlaWEpsWkc5alhHNGdJQ0FnYzJrZ0x5OGdUR2wwWlhKaGJDNVRkSEpwYm1jdVNXNTBaWEp3YjJ4Y2JpQWdJQ0J6ZUNBdkx5Qk1hWFJsY21Gc0xsTjBjbWx1Wnk1UGRHaGxjbHh1SUNBZ0lITnlJQzh2SUV4cGRHVnlZV3d1VTNSeWFXNW5MbEpsWjJWNFhHNGdJQ0FnY3pFZ0x5OGdUR2wwWlhKaGJDNVRkSEpwYm1jdVUybHVaMnhsWEc0Z0lDQWdjM01nTHk4Z1RHbDBaWEpoYkM1VGRISnBibWN1VTNsdFltOXNYRzVjYmlBZ0lDQnRJQzh2SUV4cGRHVnlZV3d1VG5WdFltVnlYRzRnSUNBZ2JXWWdMeThnVEdsMFpYSmhiQzVPZFcxaVpYSXVSbXh2WVhSY2JpQWdJQ0J0YUNBdkx5Qk1hWFJsY21Gc0xrNTFiV0psY2k1SVpYaGNiaUFnSUNCdGFTQXZMeUJNYVhSbGNtRnNMazUxYldKbGNpNUpiblJsWjJWeVhHNGdJQ0FnYVd3Z0x5OGdUR2wwWlhKaGJDNU9kVzFpWlhJdVNXNTBaV2RsY2k1TWIyNW5YRzRnSUNBZ2JXOGdMeThnVEdsMFpYSmhiQzVPZFcxaVpYSXVUMk4wWEc0Z0lDQWdiV0lnTHk4Z1RHbDBaWEpoYkM1T2RXMWlaWEl1UW1sdVhHNGdJQ0FnYlhnZ0x5OGdUR2wwWlhKaGJDNU9kVzFpWlhJdVQzUm9aWEpjYmx4dUlDQWdJRzhnTHk4Z1QzQmxjbUYwYjNKY2JpQWdJQ0J2ZHlBdkx5QlBjR1Z5WVhSdmNpNVhiM0prWEc1Y2JpQWdJQ0J3SUM4dklGQjFibU4wZFdGMGFXOXVYRzRnSUNBZ2NHa2dMeThnVUhWdVkzUjFZWFJwYjI0dVNXNWthV05oZEc5eVhHNGdJRHRjYmx4dUlDQXZMeUJIWlc1bGNtRjBaU0J0WVdsdUlHaHBaMmhzYVdkb2RITmNiaUFnTHk4Z1VtVm1PaUJvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2YkdWemN5OXNaWE56TG1wekwybHpjM1ZsY3k4eU1EY3hYRzRnSUM1c2IyOXdMVzFoYVc0Z0tFQnBLU0IzYUdWdUlDaEFhU0E4SUNoc1pXNW5kR2dvUUhSdmEyVnVMVzFoYVc0cElDc2dNU2twSUh0Y2JpQWdJQ0JBZEc5clpXNDZJR1Y0ZEhKaFkzUW9RSFJ2YTJWdUxXMWhhVzRzSUVCcEtUdGNibHh1SUNBZ0lDNUFlM1J2YTJWdWZTQjdYRzRnSUNBZ0lDQmpiMnh2Y2pvZ2JXbDRLSE53YVc0b1FHTnZaR1V0WTI5c2IzSXNJQ2hBYVNBcUlETTJNQ0F2SUd4bGJtZDBhQ2hBZEc5clpXNHRiV0ZwYmlrcEtTd2dRR3hwYm1zdFkyOXNiM0lzSURnd0pTazdYRzRnSUNBZ2ZWeHVJQ0FnSUM1c2IyOXdMVzFoYVc0b0tFQnBJQ3NnTVNrcE8xeHVJQ0I5WEc0Z0lDNXNiMjl3TFcxaGFXNG9NU2s3WEc1Y2JpQWdRSFJ2YTJWdUxXTnZiVzFsYm5Sek9seHVJQ0FnSUdNZ0x5OGdRMjl0YldWdWRGeHVJQ0FnSUdOa0lDOHZJRU52YlcxbGJuUXVUWFZzZEdsc2FXNWxYRzRnSUNBZ1kyMGdMeThnUTI5dGJXVnVkQzVOZFd4MGFXeHBibVZjYmlBZ0lDQmpjQ0F2THlCRGIyMXRaVzUwTGxCeVpYQnliMk5jYmlBZ0lDQmpNU0F2THlCRGIyMXRaVzUwTGxOcGJtZHNaVnh1SUNBZ0lHTnpJQzh2SUVOdmJXMWxiblF1VTNCbFkybGhiRnh1SUNBN1hHNWNiaUFnTHk4Z1IyVnVaWEpoZEdVZ2FHbG5hR3hwWjJoMElHWnZjaUJqYjIxdFpXNTBjMXh1SUNBdWJHOXZjQzFqYjIxdFpXNTBjeUFvUUdrcElIZG9aVzRnS0VCcElEd2dLR3hsYm1kMGFDaEFkRzlyWlc0dFkyOXRiV1Z1ZEhNcElDc2dNU2twSUh0Y2JpQWdJQ0JBZEc5clpXNDZJR1Y0ZEhKaFkzUW9RSFJ2YTJWdUxXTnZiVzFsYm5SekxDQkFhU2s3WEc1Y2JpQWdJQ0F1UUh0MGIydGxibjBnZTF4dUlDQWdJQ0FnWTI5c2IzSTZJRzFwZUNoa1pYTmhkSFZ5WVhSbEtITndhVzRvUUdOdlpHVXRZMjlzYjNJc0lDaEFhU0FxSURNMk1DQXZJR3hsYm1kMGFDaEFkRzlyWlc0dFkyOXRiV1Z1ZEhNcEtTa3NJRGN3SlNrc0lFQnNhVzVyTFdOdmJHOXlMQ0E1TUNVcE8xeHVJQ0FnSUNBZ2IzQmhZMmwwZVRvZ0xqWTdYRzRnSUNBZ2ZWeHVJQ0FnSUM1c2IyOXdMV052YlcxbGJuUnpLQ2hBYVNBcklERXBLVHRjYmlBZ2ZWeHVJQ0F1Ykc5dmNDMWpiMjF0Wlc1MGN5Z3hLVHRjYmx4dUlDQXZMeUJTWlhObGRDQmpiMlJsSUdKc2IyTnJjeUJoY0hCbFlYSmhibU5sSUhkcGRHZ2diR2x1WlNCdWRXMWlaWEp6WEc0Z0lIUmhZbXhsSUh0Y2JseHVJQ0FnSUNZc1hHNGdJQ0FnZEdnc1hHNGdJQ0FnZEdRc1hHNGdJQ0FnZEdRZ2NISmxJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREE3WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREE3WEc0Z0lDQWdJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUdGNiaUFnSUNCOVhHNWNiaUFnSUNBdWJHbHVaVzV2SUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUJrWlhOaGRIVnlZWFJsS0VCc2FXNXJMV052Ykc5eUxDQTVOU1VwTzF4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTGpVN1hHNGdJQ0FnSUNCMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F1WTI5a1pTQjdYRzRnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SURGbGJUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JpSmRmUT09ICovIiwiLy9cbi8vIE1peGluc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gSW52ZXJ0IGNvbG9yIHN3aXRjaGVyIGZvciBpbWFnZXMgYW5kIHZpZGVvc1xuLy8gOnJvb3QgeyBmaWx0ZXI6IGludmVydCgxMDAlKTsgfVxuXG4vLyBodHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vbWljcm8tY2xlYXJmaXgtaGFjay9cbi5jZiB7XG5cbiAgJjpiZWZvcmUsICY6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG4uaGVhZGluZygpIHtcbiAgZm9udC1zaXplOiAzMzAlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAtLjA2ZW07XG59XG5cbi5zdWItaGVhZGluZygpIHtcbiAgZm9udC1zaXplOiA3MiU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4ucGFkZGluZy1vZmZzZXQoQHBhZGRpbmctbGVmdCwgQHBhZGRpbmctcmlnaHQpIHtcbiAgcGFkZGluZy1sZWZ0OiBAcGFkZGluZy1sZWZ0O1xuICBwYWRkaW5nLXJpZ2h0OiBAcGFkZGluZy1yaWdodDtcbn1cblxuLm1hcmdpbi1vZmZzZXQoQG1hcmdpbi1sZWZ0LCBAbWFyZ2luLXJpZ2h0KSB7XG4gIG1hcmdpbi1sZWZ0OiBAbWFyZ2luLWxlZnQ7XG4gIG1hcmdpbi1yaWdodDogQG1hcmdpbi1yaWdodDtcbn1cblxuLnNwbGl0ZXIoKSB7XG4gIEBzaXplOiA0cHg7XG4gIEBjb2xvcjogQHRleHQtY29sb3I7XG5cbiAgJjo6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogQHNpemU7XG4gICAgaGVpZ2h0OiBAc2l6ZTtcbiAgICBtYXJnaW46IDJlbSBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kOiBAY29sb3I7XG4gICAgYm94LXNoYWRvdzogKEBzaXplICogNSkgMCAwIDAgQGNvbG9yLCAoQHNpemUgKiAtNSkgMCAwIDAgQGNvbG9yO1xuICB9XG59XG4iLCIvL1xuLy8gUmVzZXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHkge1xuICBwYWRkaW5nOiAwIEBzcGFjZS1sZztcbiAgbWFyZ2luOiAwIGF1dG8gMDtcbiAgZm9udC1mYW1pbHk6IEBmb250c3RhY2stZGVmYXVsdDtcbiAgZm9udC1zaXplOiBAZm9udC1zaXplO1xuICBsaW5lLWhlaWdodDogQGxpbmUtaGVpZ2h0O1xuICBjb2xvcjogQHRleHQtY29sb3I7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7XG4gIGJhY2tncm91bmQ6IEBiYWNrZ3JvdW5kLWNvbG9yO1xuICBpbWFnZS1yZW5kZXJpbmc6IG9wdGltaXplcXVhbGl0eTtcbiAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlO1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1tZCkge1xuICAgIC5wYWRkaW5nLW9mZnNldChAc3BhY2UtbWQsIEBzcGFjZS1tZCk7XG4gICAgZm9udC1zaXplOiAoQGZvbnQtc2l6ZSAqIDEuNCk7XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAucGFkZGluZy1vZmZzZXQoQHNwYWNlLXNtLCBAc3BhY2Utc20pO1xuICAgIGZvbnQtc2l6ZTogKEBmb250LXNpemUgKiAyLjQpO1xuICB9XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXhzKSB7XG4gICAgZm9udC1zaXplOiAoQGZvbnQtc2l6ZSAqIDMuMik7XG4gIH1cblxuICAvLyBBbGwgaU9TIGRldmljZXMsIHRoZSBlYXNpZXN0IHdheVxuICBAbWVkaWEgKG1heC1kZXZpY2Utd2lkdGg6IDQ4MHB4KSwgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkge1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgfVxuXG4gIC8vIEEgc2VtaXRyYW5zbHVjZW50IGJhciBhdCB0aGUgdG9wIG9mIHRoZSBwYWdlXG4gICY6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogLTk5OTk7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxdm1heDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiBAbGluay1jb2xvcjtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIG9wYWNpdHk6IC4yO1xuICB9XG59XG5cbi8vIFJlc2V0IGZvbnRzIGZvciByZWxldmFudCBlbGVtZW50c1xuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG4vLyBSZXNldCB1bnVzdWFsIEZpcmVmb3gtb24tQW5kcm9pZCBkZWZhdWx0IHN0eWxlLlxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MvaXNzdWVzLzIxNFxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3RbbXVsdGlwbGVdLFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuXG4vLyBSZXNldCBjb21tb24gZWxlbWVudHNcbmEsIGJ1dHRvbiB7XG4gIGNvbG9yOiBAdGV4dC1jb2xvcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAuNXMgZWFzZSwgYm9yZGVyLWNvbG9yIC41cyBlYXNlLCBiYWNrZ3JvdW5kIC41cyBlYXNlLCBvcGFjaXR5IDEuNXMgZWFzZTtcblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuMXMgZWFzZSwgYm9yZGVyLWNvbG9yIC4xcyBlYXNlLCBiYWNrZ3JvdW5kIC4xcyBlYXNlLCBvcGFjaXR5IC4xcyBlYXNlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIHRleHQtZGVjb3JhdGlvbi1za2lwOiBpbms7XG4gIH1cblxuICAmW2Rpc2FibGVkXSB7XG4gICAgb3BhY2l0eTogLjQ7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgfVxufVxuXG5pbWcsIGhyIHtcbiAgYm9yZGVyOiAwO1xufVxuXG5kZWwge1xuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiBmYWRlKEBsaW5rLWNvbG9yLCAxMCUpO1xufVxuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogQHRleHQtY29sb3I7XG4gIG9wYWNpdHk6IC4xO1xufVxuIiwiLy9cbi8vIENvbW1vblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU2l0ZSBsb2dvXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDF2bWF4O1xuICBtYXJnaW46IDAgMCAxLjR2bWF4O1xuICBiYWNrZ3JvdW5kOiBAbGluay1jb2xvcjtcbiAgb3BhY2l0eTogMDtcblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogQHRleHQtY29sb3I7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIGgxIHtcbiAgICBoZWlnaHQ6IDA7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5OWVtO1xuICB9XG59XG5cbi8vIE1haW4gbmF2aWdhdGlvblxuLm5hdmlnYXRpb24ge1xuICBtYXJnaW46IDAgMCAxNnZtaW47XG4gIG1hcmdpbi1yaWdodDogLTEuMWVtO1xuICBtYXJnaW4tbGVmdDogLTEuMWVtO1xuICBmb250LXNpemU6IDYwJTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAuNDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGxpbmUtaGVpZ2h0OiAyO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICBhIHtcbiAgICAgIHBhZGRpbmc6IC41ZW0gMS4yZW07XG5cbiAgICAgICY6aG92ZXIsXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgY29sb3I6IEBsaW5rLWNvbG9yO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIEN1cnJlbnRseSBhY3RpdmF0ZWQgcGFnZSBvciBjYXRlZ29yeSBjbGFzc1xuLmN1cnJlbnQge1xuXG4gIGEge1xuICAgIGNvbG9yOiBAbGluay1jb2xvcjtcbiAgfVxufVxuXG4vLyBMYXRlc3Qgd29yayBsaW5rXG5ib2R5OmhvdmVyIC5sYXRlc3Qge1xuICBjb2xvcjogQGxpbmstY29sb3IgIWltcG9ydGFudDtcbn1cblxuLy8gUGVyc29uIHN0YXR1c1xuLmNvbnRlbnQgLnN0YXR1cyB7XG4gIG1hcmdpbjogMXZtaW4gMCAwO1xuICBmb250LXNpemU6IDc1JTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG5cbiAgJjpiZWZvcmUge1xuICAgIEBzaXplOiAuOGVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogQHNpemU7XG4gICAgaGVpZ2h0OiBAc2l6ZTtcbiAgICBtYXJnaW4tcmlnaHQ6IC44dnc7XG4gICAgYmFja2dyb3VuZDogZmFkZShAdGV4dC1jb2xvciwgMjAlKTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgY29udGVudDogXCJcIjtcbiAgfVxuXG4gICYuYXZhaWxhYmxlIHtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGJhY2tncm91bmQ6ICMwY2Y7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICBjb2xvcjogIzBjZjtcbiAgICB9XG4gIH1cblxuICAmLnVuYXZhaWxhYmxlIHtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjY2M7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICB9XG4gIH1cbn1cblxuLy8gTWFpbiBjb250ZW50XG4uY29udGVudCB7XG4gIG1hcmdpbi1ib3R0b206IDE2dm1pbjtcblxuICAvLyBGb3Igc29tZSBzcGVjaWZpZWQgcG9zdHMgaW4gd29yayBjYXRlZ29yeVxuICAuY2Y7XG5cbiAgLy8gUmVtb3ZlIGV4dHJhIHNwYWNlIGZvciB0aGUgbGFzdCBwYXJhZ3JhcGggaW4gdGhlIGNvbnRhaW5lclxuICBhcnRpY2xlIHtcblxuICAgIC8vIGFydGljbGUgPiBwXG4gICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuXG4gICAgICAvLyBhcnRpY2xlID4gdWwgPiBsaSwgYXJ0aWNsZSA+IC5mb290bm90ZXMgPiBvbFxuICAgICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgLy8gYXJ0aWNsZSA+IHVsID4gbGkgPiBwLCBhcnRpY2xlID4gLmZvb3Rub3RlcyA+IG9sID4gbGlcbiAgICAgICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcblxuICAgICAgICAgIC8vIGFydGljbGUgPiAuZm9vdG5vdGVzID4gb2wgPiBsaSA+IHBcbiAgICAgICAgICA+ICo6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gUG9zdCAvIHBhZ2UgY29udGVudCBmaXJzdCBlbGVtZW50IGZpeFxuICAucG9zdC1jb250ZW50LFxuICAucGFnZS1jb250ZW50IHtcblxuICAgID4gKjpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuXG4gICAgICA+ICo6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGEge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS42cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAoQGxpbmUtaGVpZ2h0ICogMS4yKTtcbiAgfVxuXG4gIGhlYWRlciB7XG4gICAgcGFkZGluZy1ib3R0b206IDE2dm1pbjtcblxuICAgIGgxIHtcbiAgICAgIG1hcmdpbjogMCAwIC4xZW07XG4gICAgICAuaGVhZGluZygpO1xuICAgICAgaHlwaGVuczogbm9uZTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgICAvLyBPdmVycmlkZSB2aWV3cG9ydCB1bml0cyBkZWZpbmVkIGluIHBvc3QuaHRtbFxuICAgICAgICBmb250LXNpemU6IDI4MCU7XG4gICAgICB9XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgIC8vIE92ZXJyaWRlIG1hcmdpbiBmcm9tIGFydGljbGUgaW1nXG4gICAgICBzdmcsXG4gICAgICBpbWcge1xuICAgICAgICAvLyBhdm9pZCBoZWFkZXIgc3RyZXRjaGVkIGJ5IGdsb2JhbCBpbWcgc3R5bGVzXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4zZW07XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhpZGUgYWN0dWFsIHRleHQgaWYgcG9zdCB0aXRsZSBpcyBpbWFnZSBvciBTVkcsIHRoZSBhY3R1YWwgdGV4dCBoZWxwcyBTYWZhcmkgZ2V0IHRoZSByZWFsIHBvc3QgdGl0bGUgaW4gUmVhZGVyIG1vZGUuXG4gICAgLmltYWdlLXRpdGxlIHtcbiAgICAgIHRleHQtaW5kZW50OiAtOTk5OTk5cHg7XG4gICAgICBsaW5lLWhlaWdodDogMDtcbiAgICB9XG5cbiAgICAubGF0ZXN0LXBvc3Qge1xuICAgICAgbWFyZ2luLXRvcDogMTZ2bWluO1xuICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcblxuICAgICAgYSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNtYWxsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogMnZtaW47XG4gICAgfVxuICB9XG5cbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBtYXJnaW46IDEwdm1pbiAwIDFyZW07XG4gICAgLnN1Yi1oZWFkaW5nKCk7XG4gIH1cblxuICB1bCxcbiAgb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbiAgICBtYXJnaW4tbGVmdDogMS4yZW07XG5cbiAgICBsaSB7XG4gICAgICBsaW5lLWhlaWdodDogKEBsaW5lLWhlaWdodCAqIDEuMik7XG5cbiAgICAgID4gdWwsXG4gICAgICA+IG9sIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBvbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDEuNzVlbTtcbiAgfVxuXG4gIGltZyxcbiAgdmlkZW8sXG4gIGlmcmFtZSxcbiAgLmJyb3dzZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoQHNwYWNlLXhzICogMikgKyAoQGJvcmRlci1kZWZhdWx0ICogMikpO1xuICAgIG1hcmdpbjogMCBjYWxjKC1Ac3BhY2UteHMgLSBAYm9yZGVyLWRlZmF1bHQpIDEuOHJlbTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1tZCkge1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1tZCwgLUBzcGFjZS1tZCk7XG4gICAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS1tZCAqIDIpKTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2Utc20sIC1Ac3BhY2Utc20pO1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSArIChAc3BhY2Utc20gKiAyKSk7XG4gICAgfVxuXG4gICAgLy8gYXZvaWQgaW1hZ2VzIHdpdGggYC5uby1lbmxhcmdlYCBzdHJldGNoZWQgYnkgZ2xvYmFsIGltZyBzdHlsZXNcbiAgICAmLm5vLWVubGFyZ2Uge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG4gIH1cblxuICBibG9ja3F1b3RlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogMi44cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKC1Ac3BhY2UteHMgLSBAYm9yZGVyLWRlZmF1bHQpO1xuICAgIGZvbnQtc2l6ZTogOTAlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICB9XG5cbiAgICA+IHAge1xuICAgICAgcGFkZGluZy1sZWZ0OiBAc3BhY2UteHM7XG4gICAgICBib3JkZXItbGVmdDogQGJvcmRlci1kZWZhdWx0IHNvbGlkO1xuICAgICAgLy8gVE9ETzogTmVlZCBiZXR0ZXIgc29sdXRpb25cbiAgICAgIC8vIFdlIHdpbGwgcmVzZXQgdGhlIGNvbW1vbiBtYXJnaW4tYm90b3RtIHRvIGdldCBnYXBsZXNzIGJvcmRlcnMgZm9yIGJsb2NrcXVvdGVzXG4gICAgICAvLyBUaGlzIGNvdWxkIGhlbHAgZml4IGh0dHBzOi8vZ2l0aHViLmNvbS9hbXNmL2Ftc2YtY3VydGFuYS9pc3N1ZXMvNFxuICAgICAgcGFkZGluZy1ib3R0b206IDEuNnJlbTtcbiAgICAgIC8vIE5vdyByZXNldCBkZWZhdWx0IG1hcmdpbiBidXR0b24gZnJvbSBnbG9iYWwgZGVmaW5lXG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgICAvLyBSZW1vdmUgZXh0cmEgcGFkZGluZyBmb3IgdGhlIGxhc3QgZWxlbWVudCwgcmUtYXBwbHkgbWFyZ2luXG4gICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgICAucGFkZGluZy1vZmZzZXQoY2FsYyhAc3BhY2Utc20gLSBAYm9yZGVyLWRlZmF1bHQpLCBAc3BhY2Utc20pO1xuICAgICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXNtLCAtQHNwYWNlLXNtKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb290ZXIge1xuICAgICAgLmNmO1xuICAgIH1cblxuICAgIGNpdGUge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIC8vIGh0dHA6Ly93d3cuZmlsZWZvcm1hdC5pbmZvL2luZm8vdW5pY29kZS9jaGFyLzI1MDAvaW5kZXguaHRtXG4gICAgICAgIGNvbnRlbnQ6IFwiXFwyNTAwXFwyNTAwXFwwMGEwXCJcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBociB7XG4gICAgLnNwbGl0ZXIoKTtcbiAgfVxuXG4gIHN1cCB7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gIH1cblxuICBjb2RlLFxuICBwcmUge1xuICAgIGZvbnQtZmFtaWx5OiBAZm9udHN0YWNrLW1vbm9zcGFjZTtcbiAgICBjb2xvcjogQGNvZGUtY29sb3I7XG4gIH1cblxuICAvLyBPbmx5IGFwcGx5IHdvcmQgYnJlYWtpbmcgcnVsZSBmb3IgY29kZXMgaW4gcGFyYWdyYXBoc1xuICBwIGNvZGUsXG4gIGxpIGNvZGUge1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgfVxuXG4gIHByZSB7XG4gICAgcGFkZGluZzogQHNwYWNlLXhzO1xuICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2UteHMsIC1Ac3BhY2UteHMpO1xuICAgIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIGZvbnQtc2l6ZTogODAlO1xuICAgIGxpbmUtaGVpZ2h0OiAoQGxpbmUtaGVpZ2h0ICogMS4yKTtcbiAgICBiYWNrZ3JvdW5kOiBmYWRlKCMwOGYsIDQlKTtcbiAgICAvLyBCb3VuY2luZyBzY3JvbGwgZml4IGZvciBpT1NcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpIHtcbiAgICAgIC5wYWRkaW5nLW9mZnNldChAc3BhY2UtbWQsIEBzcGFjZS1tZCk7XG4gICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLW1kLCAtQHNwYWNlLW1kKTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIC5wYWRkaW5nLW9mZnNldChAc3BhY2Utc20sIEBzcGFjZS1zbSk7XG4gICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXNtLCAtQHNwYWNlLXNtKTtcbiAgICB9XG4gIH1cblxuICAvLyBOZXdzbGV0dGVyIHN1YnNjcmlwdGlvbiBmb3JtIGluIHBhZ2UgXCJzdG9yZVwiXG4gIGZvcm0ge1xuXG4gICAgaW5wdXQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDF2bWluIDA7XG4gICAgICBtYXJnaW46IDAgMCAxLjhyZW07XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZmFkZShAdGV4dC1jb2xvciwgMjAlKTtcbiAgICAgIC8vIFJlbW92ZSBib3JkZXItcmFkaXVzIGZvciBpT1MgZGV2aWNlc1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICB0cmFuc2l0aW9uOiBwYWRkaW5nIC4ycyBlYXNlO1xuXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgcGFkZGluZzogMXZtaW47XG4gICAgICAgIGJhY2tncm91bmQ6IGZhZGUoQHRleHQtY29sb3IsIDIlKTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiBAdGV4dC1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBSZXN0IGZvcm0gdmFsaWRhdGlvbiBzdHlsZXMsIGJvcnJvd2VkIGZyb20gQm9vdHN0cmFwXG4gIGlucHV0LFxuICB0ZXh0YXJlYSxcbiAgc2VsZWN0IHtcblxuICAgICY6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZCB7XG5cbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBiYWNrZ3JvdW5kOiBmYWRlKEBsaW5rLWNvbG9yLCA1JSk7XG4gICAgICAgIGJvcmRlci1jb2xvcjogQGxpbmstY29sb3I7XG4gICAgICAgIC8vIE92ZXJyaWRlIEZpcmVmb3ggZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB0YWJsZSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICBmb250LXNpemU6IDkwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXhzLCAtQHNwYWNlLXhzKTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjhyZW07XG5cbiAgICB0aCxcbiAgICB0ZCB7XG4gICAgICBwYWRkaW5nOiAuNmVtIEBzcGFjZS14cztcbiAgICB9XG5cbiAgICB0aCB7XG4gICAgICBib3JkZXItYm90dG9tOiBAYm9yZGVyLWRlZmF1bHQgc29saWQgZmFkZShAdGV4dC1jb2xvciwgNiUpO1xuICAgICAgLy8gT3ZlcnJpZGUgZGVmYXVsdCB1c2VyIGFnZW50IHN0eWxlc2hlZXRcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuXG4gICAgdGQge1xuICAgICAgYm9yZGVyLXRvcDogQGJvcmRlci1zbSBzb2xpZCBmYWRlKEB0ZXh0LWNvbG9yLCA0JSk7XG4gICAgfVxuICB9XG59XG5cbi8vIFBvc3RzIHdpdGggQXNpYW4gY2hhcmFjdGVyc1xuOmxhbmcoemgpLFxuOmxhbmcoamEpIHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcblxuICBoZWFkZXIge1xuXG4gICAgJixcbiAgICAmICoge1xuICAgICAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIEZpeCBlbXB0eSBzcGFjZSB3aGVuIGEgcGFyYWdyYXBoIHN0YXJ0cyB3aXRoIHF1b3RlIG1hcmtzIGFuZCBzb21lIGFzaWFuIHB1bmN0dWF0aW9uIG1hcmtzXG4ubGVhZGluZy1pbmRlbnQtZml4IHtcbiAgdGV4dC1pbmRlbnQ6IC0uMzllbTtcbn1cblxuLy8gVHdlZXQgYnV0dG9uIG1hcmdpbiBmaXhcbi5wb3N0LW1vZGlmaWVkLWRhdGUge1xuICBmb250LXNpemU6IDc1JTtcbiAgb3BhY2l0eTogLjU7XG59XG5cbi8vIExhcmdldHlwZSBzdHlsZXMgKHJlcGxhY2VzIGJ1dHRvbiBzdHlsZXMpXG4ubGFyZ2V0eXBlIHtcbiAgLmhlYWRpbmcoKTtcbiAgZm9udC1zaXplOiAyMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxLjhyZW0gIWltcG9ydGFudDtcbn1cblxuLy8gQnJvc2VyIGZyYW1lIGZvciBpbWFnZXMgaW4gY2F0ZWdvcnkgXCJ3b3JrXCJcbi5icm93c2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwO1xuICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAuMDUpO1xuXG4gIC8vIFJlc2V0IGJyb3dzZXIgYm9yZGVyLXJhZGl1cyBmb3Igc21hbGwgc2NyZWVuc1xuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpLCAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIH1cblxuICAmOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogOHB4O1xuICAgIGxlZnQ6IDEwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDhweDtcbiAgICBoZWlnaHQ6IDhweDtcbiAgICBiYWNrZ3JvdW5kOiBsaWdodGVuKCNmMjRlNTksIDMwJSk7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYm94LXNoYWRvdzpcbiAgICAgICAgMTZweCAwIDAgMCAgIGZhZGUobGlnaHRlbigjZmFjNTM2LCAzMCUpLCA5NiUpXG4gICAgICAsIDMycHggMCAwIDAgICBmYWRlKGxpZ2h0ZW4oIzI2ZTkzZCwgMzAlKSwgOTYlKVxuICAgICAgLCAgICAwIDAgMCAxcHggZmFkZShkYXJrZW4oI2YyNGU1OSwgMzAlKSwgMzAlKVxuICAgICAgLCAxNnB4IDAgMCAxcHggZmFkZShkYXJrZW4oI2ZhYzUzNiwgMzAlKSwgMzAlKVxuICAgICAgLCAzMnB4IDAgMCAxcHggZmFkZShkYXJrZW4oIzI2ZTkzZCwgMzAlKSwgMzAlKVxuICAgIDtcbiAgfVxuXG4gIGltZyB7XG4gICAgLy8gYXZvaWQgaW1hZ2VzIGluc2lkZSAuYnJvd3NlciBzdHJldGNoZWQgYnkgZ2xvYmFsIGltZyBzdHlsZXNcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGJveC1zaGFkb3c6IDAgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAuMDUpO1xuICB9XG59XG5cbi8vIEV4dHJhIG9mZnNldCBmb3IgT1MgWCBzY3JlZW5zaG90c1xuLnNjcmVlbnNob3QtbWFjIHtcbiAgQG9zeC1zaGFkb3ctc2l6ZTogNTZweDtcbiAgLm1hcmdpbi1vZmZzZXQoLUBvc3gtc2hhZG93LXNpemUsIC1Ab3N4LXNoYWRvdy1zaXplKTtcblxuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpLCAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgIC5tYXJnaW4tb2Zmc2V0KDAsIDApO1xuICB9XG59XG5cbi8vIFNwZWNpYWwgcGFyYWdyYXBoIHdpdGggYm9yZGVyIGxpbmVcbi5ub3RlLFxuLnN0b3JlLFxuLmRvd25sb2FkIHtcbiAgcGFkZGluZy1sZWZ0OiBAc3BhY2UteHM7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKC1Ac3BhY2UteHMgLSBAYm9yZGVyLWRlZmF1bHQpO1xuICBib3JkZXItbGVmdDogQGJvcmRlci1kZWZhdWx0IHNvbGlkIEBsaW5rLWNvbG9yO1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgIC5wYWRkaW5nLW9mZnNldChjYWxjKEBzcGFjZS1zbSAtIEBib3JkZXItZGVmYXVsdCksIEBzcGFjZS1zbSk7XG4gICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSwgLUBzcGFjZS1zbSk7XG4gIH1cbn1cblxuLy8gUmVmZXJlbmNlIG5vdGVzIGFuZCBsaW5rcyBpbiBwb3N0XG4uZm9vdG5vdGVzIHtcbiAgLnNwbGl0ZXIoKTtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbjp0YXJnZXQge1xuXG4gIC8vIFJlZGNhcnBldC1zdHlsZVxuICBbcmV2PWZvb3Rub3RlXSxcbiAgW3JlbD1mb290bm90ZV0sXG5cbiAgLy8gS3JhbWRvd24tc3R5bGVcbiAgLnJldmVyc2Vmb290bm90ZSxcbiAgLmZvb3Rub3RlIHtcbiAgICBjb2xvcjogQGxpbmstY29sb3I7XG4gIH1cbn1cblxuLy8gUG9zdCBsaXN0IGluIFwid29ya1wiIGFuZCBcIm5vdGVcIlxuLmxpc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIDAgLjRyZW07XG5cbiAgaDEge1xuICAgIC5oZWFkaW5nKCk7XG4gICAgZm9udC1zaXplOiAyMDAlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gICAgLy8gT3ZlcnJpZGUgaGVhZGluZyBkZWZpbmVzIGluIC5jb250ZW50XG4gICAgb3BhY2l0eTogMTtcbiAgICBtYXJnaW46IDA7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIC8vIEhpZGUgZXh0ZXJuYWwgbGluayBmb3IgcG9zdCBsaXN0XG4gICAgICBmb250LXNpemU6IDE4MCU7XG4gICAgfVxuICB9XG5cbiAgLmV4dGVybmFsIHtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgLy8gSGlkZSBleHRlcm5hbCBsaW5rIGZvciBwb3N0IGxpc3RcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbi8vIEEgZG90IHN5bWJvbCBmb3IgZXh0ZXJuYWwgbGlua3Ncbi5leHRlcm5hbCB7XG5cbiAgLmRvdCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAuN3JlbTtcbiAgICBoZWlnaHQ6IC43cmVtO1xuICAgIG1hcmdpbjogMCAuMWVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYmFja2dyb3VuZDogQHRleHQtY29sb3I7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMgZWFzZTtcblxuICAgIC8vIEV4dHJhIG1hcmdpbiBmb3IgZXh0ZXJuYWwgc3ltYm9sIGluIHNpbmd1bGFyXG4gICAgJi0tcG9zdCB7XG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICB9XG4gIH1cblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcblxuICAgIC5kb3Qge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xuICAgIH1cbiAgfVxufVxuXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogMCAwIDE2dm1pbjtcbiAgZm9udC1zaXplOiA3NSU7XG4gIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG5cbiAgdWwge1xuXG4gICAgbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lO1xuXG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgcGFkZGluZzogMCAuNnZ3O1xuICAgICAgICBjb250ZW50OiBcIiAvIFwiO1xuICAgICAgICBvcGFjaXR5OiAuMztcbiAgICAgIH1cblxuICAgICAgJjpsYXN0LWNoaWxkIHtcblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiBub25lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvL1xuLy8gUGx1Z2luc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU3R5bGUgZml4ZXMgZm9yIHBsdWdpbnNcblxuLy8gaW50ZW5zZS5qc1xuLmxvYWRlZCB7XG5cbiAgLmludGVuc2Utd3JhcCB7XG5cbiAgICBhcnRpY2xlIHAgPiBpbWc6bm90KC5uby1pbnRlbnNlKSB7XG4gICAgICBjdXJzb3I6IHpvb20taW47XG4gICAgfVxuICB9XG5cbiAgJi5pbnRlbnNlLW9wZW4ge1xuICAgIGN1cnNvcjogem9vbS1vdXQ7XG4gIH1cbn1cblxuLy8gR2l0SHViIEdpc3Rcbi5naXN0IHtcbiAgZm9udC1zaXplOiA4MCUgIWltcG9ydGFudDtcblxuICBjb2RlLCBwcmUge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cblxuICAuZ2lzdC1kYXRhIHtcbiAgICBmb250LWZhbWlseTogQGZvbnRzdGFjay1tb25vc3BhY2UgIWltcG9ydGFudDtcblxuICAgIC5maWxlLWRhdGEge1xuICAgICAgZm9udC1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG5cbiAgICAgID4gdGFibGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gTW9ub3NwYWNlIGZvbnRzIGxvb2sgYmlnZ2VyIHRoYW4gbm9ybWFsIGZvbnRzLCBzbyBtYWtlIGl0IHNtYWxsZXIuXG4gIC5oaWdobGlnaHQge1xuICAgIGZvbnQtc2l6ZTogOTAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICAubWFya2Rvd24tYm9keSB7XG4gICAgZm9udC1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogMWVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cbiIsIi8vXG4vLyBQcmludFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gU3R5bGUgZml4ZXMgZm9yIHByaXRpbmdcblxuQG1lZGlhIHByaW50IHtcblxuICAqLFxuICAqOmJlZm9yZSxcbiAgKjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50OyAvLyBCbGFjayBwcmludHMgZmFzdGVyOiBoNWJwLmNvbS9zXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICBib2R5IHtcbiAgICBwYWRkaW5nOiAxMG1tICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIH1cblxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuXG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuXG4gICAgYVtocmVmXTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuXG4gICAgLy8gRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcbiAgICAvLyBvciB1c2UgdGhlIGBqYXZhc2NyaXB0OmAgcHNldWRvIHByb3RvY29sXG4gICAgYVtocmVmXj1cIiNcIl06YWZ0ZXIsXG4gICAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgfVxuXG4gICAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG4gIH1cblxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuXG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cblxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cblxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbiAgcCxcbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuXG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XG4gIH1cblxuICAubmF2aWdhdGlvbixcbiAgLmZvb3RlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuIiwiLyohXG4gKiBSYW5kb21pemVkXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE1IFR1bmdoc2lhbyBMaXVcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3NwYXJhbm9pZC9yYW5kb21pemVkL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKi9cblxuLy8gQ2FsY3VsYXRlIGNvZGUgYmFja2dyb3VuZCBjb2xvciBiYXNlZCBvbiB0aGUgbGlnaHRuZXNzIG9mIGxpbmsgY29sb3Jcbi5jYWxjLWJnIChAdikgd2hlbiAobGlnaHRuZXNzKEB2KSA+PSA4MCUpIHtcbiAgQGNhbGMtYmc6IG1peCgjZmZmLCBAdiwgOTAlKTtcbn1cblxuLmNhbGMtYmcgKEB2KSB3aGVuIChsaWdodG5lc3MoQHYpIDwgODAlKSB7XG4gIEBjYWxjLWJnOiBtaXgoIzAwMCwgQHYsIDcwJSk7XG59XG5cbi5oaWdobGlnaHQge1xuXG4gIC8vIFJlc2V0IGJhY2tncm91bmRcbiAgLy8gLmhpZ2hsaWdodCA+IHByZSBmb3IgY29tbW9uIGxpcXVpZCBtZXRob2RcbiAgLy8gLmhpZ2hsaWdodGVyLXJvdWdlIC5oaWdobGlnaHQgZm9yIEdGTSBtZXRob2RcbiAgLy8gUmVmOiBodHRwczovL2dpdGh1Yi5jb20vamVreWxsL2pla3lsbC9wdWxsLzQwNTNcbiAgQGhpZ2hsaWdodGVyLXRpbnQ6IEBsaW5rLWNvbG9yO1xuICA+IHByZSxcbiAgLmhpZ2hsaWdodGVyLXJvdWdlICYge1xuICAgIC5jYWxjLWJnKEBoaWdobGlnaHRlci10aW50KTtcbiAgICBiYWNrZ3JvdW5kOiBmYWRlKEBjYWxjLWJnLCAxLjUlKTtcbiAgfVxuXG4gIC8vIFJlc2V0IGRlZmF1bHQgYGNvZGVgXG4gIGNvZGUgeyBjb2xvcjogZGVzYXR1cmF0ZShAbGluay1jb2xvciwgOTUlKTsgfSAvLyBOb3JtYWwgY29kZVxuXG4gIC8vIFNwZWNpYWwgYmFja2dyb3VuZCBmb3Igc3ludGF4IGVycm9yc1xuICAuZXJyIHsgYmFja2dyb3VuZC1jb2xvcjogZmFkZShzYXR1cmF0ZShAaGlnaGxpZ2h0ZXItdGludCwgMTAlKSwgMTAlKSB9IC8vIEVycm9yXG5cbiAgLmMgICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnRcbiAgLmNtICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnQuTXVsdGlsaW5lXG4gIC5jcCAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIENvbW1lbnQuUHJlcHJvY1xuICAuYzEgIHsgZm9udC1zdHlsZTogaXRhbGljIH0gLy8gQ29tbWVudC5TaW5nbGVcbiAgLmNzICB7IGZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBDb21tZW50LlNwZWNpYWxcblxuICAubmMgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBOYW1lLkNsYXNzXG4gIC5uZSAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIE5hbWUuRXhjZXB0aW9uXG4gIC5uZiAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIE5hbWUuRnVuY3Rpb25cblxuICAubyAgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBPcGVyYXRvclxuICAub3cgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBPcGVyYXRvci5Xb3JkXG5cbiAgLmdzICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gR2VuZXJpYy5TdHJvbmdcbiAgLmdlICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIEdlbmVyaWMuRW1waFxuXG4gIC5rICAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEtleXdvcmRcbiAgLmt0ICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gS2V5d29yZC5UeXBlXG4gIC5rYyAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEtleXdvcmQuQ29uc3RhbnRcbiAgLmtkICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gS2V5d29yZC5EZWNsYXJhdGlvblxuICAua3AgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBLZXl3b3JkLlBzZXVkb1xuICAua3IgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBLZXl3b3JkLlJlc2VydmVkXG5cbiAgQHRva2VuLW1haW46XG4gICAgZXJyIC8vIEVycm9yXG4gICAgeCAvLyBPdGhlclxuXG4gICAgbiAvLyBOYW1lXG4gICAgbmEgLy8gTmFtZS5BdHRyaWJ1dGVcbiAgICBuYiAvLyBOYW1lLkJ1aWx0aW5cbiAgICBicCAvLyBOYW1lLkJ1aWx0aW4uUHNldWRvXG4gICAgbmMgLy8gTmFtZS5DbGFzc1xuICAgIG5vIC8vIE5hbWUuQ29uc3RhbnRcbiAgICBuZCAvLyBOYW1lLkRlY29yYXRvclxuICAgIG5pIC8vIE5hbWUuRW50aXR5XG4gICAgbmUgLy8gTmFtZS5FeGNlcHRpb25cbiAgICBuZiAvLyBOYW1lLkZ1bmN0aW9uXG4gICAgbmwgLy8gTmFtZS5MYWJlbFxuICAgIG5uIC8vIE5hbWUuTmFtZXNwYWNlXG4gICAgbnggLy8gTmFtZS5PdGhlclxuICAgIG50IC8vIE5hbWUuVGFnXG4gICAgbnYgLy8gTmFtZS5WYXJpYWJsZVxuICAgIHZjIC8vIE5hbWUuVmFyaWFibGUuQ2xhc3NcbiAgICB2ZyAvLyBOYW1lLlZhcmlhYmxlLkdsb2JhbFxuICAgIHZpIC8vIE5hbWUuVmFyaWFibGUuSW5zdGFuY2VcblxuICAgIGcgLy8gR2VuZXJpY1xuICAgIGdkIC8vIEdlbmVyaWMuRGVsZXRlZFxuICAgIGdlIC8vIEdlbmVyaWMuRW1waFxuICAgIGdyIC8vIEdlbmVyaWMuRXJyb3JcbiAgICBnaCAvLyBHZW5lcmljLkhlYWRpbmdcbiAgICBnaSAvLyBHZW5lcmljLkluc2VydGVkXG4gICAgZ28gLy8gR2VuZXJpYy5PdXRwdXRcbiAgICBncCAvLyBHZW5lcmljLlByb21wdFxuICAgIGdzIC8vIEdlbmVyaWMuU3Ryb25nXG4gICAgZ3UgLy8gR2VuZXJpYy5TdWJoZWFkaW5nXG4gICAgZ3QgLy8gR2VuZXJpYy5UcmFjZWJhY2tcbiAgICBnbCAvLyBHZW5lcmljLkxpbmVub1xuXG4gICAgayAvLyBLZXl3b3JkXG4gICAga2MgLy8gS2V5d29yZC5Db25zdGFudFxuICAgIGtkIC8vIEtleXdvcmQuRGVjbGFyYXRpb25cbiAgICBrbiAvLyBLZXl3b3JkLk5hbWVzcGFjZVxuICAgIGtwIC8vIEtleXdvcmQuUHNldWRvXG4gICAga3IgLy8gS2V5d29yZC5SZXNlcnZlZFxuICAgIGt0IC8vIEtleXdvcmQuVHlwZVxuICAgIGt2IC8vIEtleXdvcmQuVmFyaWFibGVcblxuICAgIHcgLy8gVGV4dC5XaGl0ZXNwYWNlXG5cbiAgICBsIC8vIExpdGVyYWxcblxuICAgIGxkIC8vIExpdGVyYWwuRGF0ZVxuXG4gICAgcyAvLyBMaXRlcmFsLlN0cmluZ1xuICAgIHNiIC8vIExpdGVyYWwuU3RyaW5nLkJhY2t0aWNrXG4gICAgc2MgLy8gTGl0ZXJhbC5TdHJpbmcuQ2hhclxuICAgIHNkIC8vIExpdGVyYWwuU3RyaW5nLkRvY1xuICAgIHMyIC8vIExpdGVyYWwuU3RyaW5nLkRvdWJsZVxuICAgIHNlIC8vIExpdGVyYWwuU3RyaW5nLkVzY2FwZVxuICAgIHNoIC8vIExpdGVyYWwuU3RyaW5nLkhlcmVkb2NcbiAgICBzaSAvLyBMaXRlcmFsLlN0cmluZy5JbnRlcnBvbFxuICAgIHN4IC8vIExpdGVyYWwuU3RyaW5nLk90aGVyXG4gICAgc3IgLy8gTGl0ZXJhbC5TdHJpbmcuUmVnZXhcbiAgICBzMSAvLyBMaXRlcmFsLlN0cmluZy5TaW5nbGVcbiAgICBzcyAvLyBMaXRlcmFsLlN0cmluZy5TeW1ib2xcblxuICAgIG0gLy8gTGl0ZXJhbC5OdW1iZXJcbiAgICBtZiAvLyBMaXRlcmFsLk51bWJlci5GbG9hdFxuICAgIG1oIC8vIExpdGVyYWwuTnVtYmVyLkhleFxuICAgIG1pIC8vIExpdGVyYWwuTnVtYmVyLkludGVnZXJcbiAgICBpbCAvLyBMaXRlcmFsLk51bWJlci5JbnRlZ2VyLkxvbmdcbiAgICBtbyAvLyBMaXRlcmFsLk51bWJlci5PY3RcbiAgICBtYiAvLyBMaXRlcmFsLk51bWJlci5CaW5cbiAgICBteCAvLyBMaXRlcmFsLk51bWJlci5PdGhlclxuXG4gICAgbyAvLyBPcGVyYXRvclxuICAgIG93IC8vIE9wZXJhdG9yLldvcmRcblxuICAgIHAgLy8gUHVuY3R1YXRpb25cbiAgICBwaSAvLyBQdW5jdHVhdGlvbi5JbmRpY2F0b3JcbiAgO1xuXG4gIC8vIEdlbmVyYXRlIG1haW4gaGlnaGxpZ2h0c1xuICAvLyBSZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9sZXNzL2xlc3MuanMvaXNzdWVzLzIwNzFcbiAgLmxvb3AtbWFpbiAoQGkpIHdoZW4gKEBpIDwgKGxlbmd0aChAdG9rZW4tbWFpbikgKyAxKSkge1xuICAgIEB0b2tlbjogZXh0cmFjdChAdG9rZW4tbWFpbiwgQGkpO1xuXG4gICAgLkB7dG9rZW59IHtcbiAgICAgIGNvbG9yOiBtaXgoc3BpbihAY29kZS1jb2xvciwgKEBpICogMzYwIC8gbGVuZ3RoKEB0b2tlbi1tYWluKSkpLCBAbGluay1jb2xvciwgODAlKTtcbiAgICB9XG4gICAgLmxvb3AtbWFpbigoQGkgKyAxKSk7XG4gIH1cbiAgLmxvb3AtbWFpbigxKTtcblxuICBAdG9rZW4tY29tbWVudHM6XG4gICAgYyAvLyBDb21tZW50XG4gICAgY2QgLy8gQ29tbWVudC5NdWx0aWxpbmVcbiAgICBjbSAvLyBDb21tZW50Lk11bHRpbGluZVxuICAgIGNwIC8vIENvbW1lbnQuUHJlcHJvY1xuICAgIGMxIC8vIENvbW1lbnQuU2luZ2xlXG4gICAgY3MgLy8gQ29tbWVudC5TcGVjaWFsXG4gIDtcblxuICAvLyBHZW5lcmF0ZSBoaWdobGlnaHQgZm9yIGNvbW1lbnRzXG4gIC5sb29wLWNvbW1lbnRzIChAaSkgd2hlbiAoQGkgPCAobGVuZ3RoKEB0b2tlbi1jb21tZW50cykgKyAxKSkge1xuICAgIEB0b2tlbjogZXh0cmFjdChAdG9rZW4tY29tbWVudHMsIEBpKTtcblxuICAgIC5Ae3Rva2VufSB7XG4gICAgICBjb2xvcjogbWl4KGRlc2F0dXJhdGUoc3BpbihAY29kZS1jb2xvciwgKEBpICogMzYwIC8gbGVuZ3RoKEB0b2tlbi1jb21tZW50cykpKSwgNzAlKSwgQGxpbmstY29sb3IsIDkwJSk7XG4gICAgICBvcGFjaXR5OiAuNjtcbiAgICB9XG4gICAgLmxvb3AtY29tbWVudHMoKEBpICsgMSkpO1xuICB9XG4gIC5sb29wLWNvbW1lbnRzKDEpO1xuXG4gIC8vIFJlc2V0IGNvZGUgYmxvY2tzIGFwcGVhcmFuY2Ugd2l0aCBsaW5lIG51bWJlcnNcbiAgdGFibGUge1xuXG4gICAgJixcbiAgICB0aCxcbiAgICB0ZCxcbiAgICB0ZCBwcmUge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgZm9udC1zaXplOiAxMDAlO1xuICAgIH1cblxuICAgIC5saW5lbm8ge1xuICAgICAgY29sb3I6IGRlc2F0dXJhdGUoQGxpbmstY29sb3IsIDk1JSk7XG4gICAgICBvcGFjaXR5OiAuNTtcbiAgICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIH1cblxuICAgIC5jb2RlIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gVXNlciBjdXN0b20gc3R5bGVzXG5cbi8vIEFsdGVybmF0aXZlIHRpdGxlIHNpemVcbi8vIEJ5IGRlZmF1bHQgYWxsIGhlYWRpbmcgbGV2ZWxzIGhhdmUgdGhlIHNhbWUgZm9udCBzaXplLCBidXQgbWFueSBwZW9wbGUgbWF5IG5vdCBsaWtlIHRoaXMsIHNvIGhlcmUncyBhbiBhbHRlcm5hdGl2ZSBmb250IHNpemUgc3RhY2s6XG4uY29udGVudCB7XG4gIGgyIHsgZm9udC1zaXplOiAxMDglOyBvcGFjaXR5OiAuODsgfVxuICBoMyB7IGZvbnQtc2l6ZTogOTYlOyAgb3BhY2l0eTogLjc7IH1cbiAgaDQgeyBmb250LXNpemU6IDg0JTsgIG9wYWNpdHk6IC42OyB9XG4gIGg1IHsgZm9udC1zaXplOiA3MiU7ICBvcGFjaXR5OiAuNTsgfVxuICBoNiB7IGZvbnQtc2l6ZTogNjAlOyAgb3BhY2l0eTogLjQ7IH1cbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBtYXJnaW46IDZ2bWluIDAgMXJlbTtcbiAgfVxuICBoZWFkZXIgeyBwYWRkaW5nLWJvdHRvbTogOHZtaW47IH1cbiAgbWFyZ2luLWJvdHRvbTogMTB2bWluO1xufVxuXG4ubmF2aWdhdGlvbiB7XG4gIG1hcmdpbjogMCAwIDEwdm1pbjtcbn1cblxuLy8gR29vZ2xlIEZvbnRzXG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Vm9sbGtvcm46NDAwLDQwMGl0YWxpYyk7XG5cbi8vIEN1c3RvbSB2YXJpYWJsZXNcbkBmb250c3RhY2stc2Fucy1zZXJpZjogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhpcmFnaW5vIFNhbnMgR0JcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG5AZm9udHN0YWNrLXNlcmlmOiBcIlZvbGxrb3JuXCIsIHNlcmlmO1xuQHZvbGxrb3JuOiBcIlZvbGxrb3JuXCIsIHNlcmlmO1xuQGxpbmstY29sb3I6ICNmZjAwYjQ7XG5AYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbkB0ZXh0LWNvbG9yOiAjMDAwO1xuXG4vLyBIb21lcGFnZSBzdHlsZVxuLmFtc2YtbG9nbyB7XG4gIHdpZHRoOiA4MCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLmFtc2YtdGl0bGUge1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICBsaW5lLWhlaWdodDogMCAhaW1wb3J0YW50O1xufVxuXG4vLyBBbnRpLWFsaWFzIHRleHRcbi8qXG4qIHtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG4qL1xuIl19 */